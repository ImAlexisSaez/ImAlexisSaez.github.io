<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Terminal | Infinitos Contrastes</title>
    <link>https://imalexissaez.github.io/etiqueta/terminal/</link>
      <atom:link href="https://imalexissaez.github.io/etiqueta/terminal/index.xml" rel="self" type="application/rss+xml" />
    <description>Terminal</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>es</language><lastBuildDate>Tue, 23 May 2023 00:00:01 +0200</lastBuildDate>
    <image>
      <url>https://imalexissaez.github.io/media/icon_hubd324007acfbf71c468514de6d8e3809_36197_512x512_fill_lanczos_center_3.png</url>
      <title>Terminal</title>
      <link>https://imalexissaez.github.io/etiqueta/terminal/</link>
    </image>
    
    <item>
      <title>Comandos de Linux #03</title>
      <link>https://imalexissaez.github.io/2023/05/23/comandos-de-linux-03/</link>
      <pubDate>Tue, 23 May 2023 00:00:01 +0200</pubDate>
      <guid>https://imalexissaez.github.io/2023/05/23/comandos-de-linux-03/</guid>
      <description>&lt;h2 id=&#34;moviendo-y-renombrando-archivos&#34;&gt;Moviendo y renombrando archivos&lt;/h2&gt;
&lt;p&gt;Para empezar, de cara a copiar un archivo usamos el comando &lt;code&gt;cp&lt;/code&gt;, que posee dos argumentos: el archivo a copiar y el nombre del nuevo archivo donde será copiado. Por ejemplo&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cp test2.txt newfile.txt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Ahora, con el comando &lt;code&gt;cat&lt;/code&gt; podemos comprobar que el contenido de ambos archivos es exactamente el mismo. No obstante, existe otro comando más apropiado para llevar a cabo esta tarea de comparación: &lt;code&gt;diff&lt;/code&gt;, que nos indica en qué difieren dos archivos. Así,&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;diff newfile.text test2.txt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;No arroja salida alguna, es decir, no hay ninguna diferencia entre ambos archivos. Sin embargo,&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;diff newfile.text test3.txt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Sí arroja resultados, pues son ficheros cuyos contenidos difieren.&lt;/p&gt;
&lt;p&gt;Por otra parte, de cara a borrar un archivo, el comando a usar es &lt;code&gt;rm&lt;/code&gt;. Por ejemplo&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;rm newfile.txt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Este comando también elimina directorios (con el atributo &lt;code&gt;-r&lt;/code&gt; que activa la recursión), por lo que hemos de ser cautos cuando lo empleamos. Esta instrucción no mueve el archivo a una suerte de &lt;em&gt;Papelera de reciclaje&lt;/em&gt; como en &lt;em&gt;Windows&lt;/em&gt;, sino que lo elimina por completo del sistema. Si después lo queremos recuperar tendríamos que usar herramientas específicas de recuperación de archivos en memoria.&lt;/p&gt;
&lt;p&gt;A continuación, antes de aprender a mover archivos, creemos un nuevo directorio, con el comando &lt;code&gt;mkdir&lt;/code&gt; para almacenarlos. Por ejemplo&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mkdir linux-notes
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Ahora, para mover los archivos, el comando a emplear es &lt;code&gt;mv&lt;/code&gt; cuyo primer argumento será el nombre del archivo a mover y el segundo su destino.&lt;/p&gt;
&lt;p&gt;Podemos emplear &lt;em&gt;comodines&lt;/em&gt; en las instrucciones de la terminal para algunos comandos. Por ejemplo, &lt;code&gt;*.txt&lt;/code&gt; se traduce en todos los archivos cuya extensión sea &lt;code&gt;.txt&lt;/code&gt;. De esta manera, podemos mover en bloque todos los ficheros de prueba que hemos creado hasta el momento.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mv *.txt linux-notes
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Recordemos que con el comando &lt;code&gt;cd&lt;/code&gt; cambiamos el directorio y si tecleamos &lt;code&gt;cd ..&lt;/code&gt; volvemos un paso atrás en la ruta (o a un nivel inferior). Así, siguiendo la misma lógica, si queremos mover un paso atrás en la ruta alguno de los archivos, basta escribir&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; linux-notes
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mv testfile.txt ..
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; ..
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ls -l
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Además, hemos de tener en cuenta que si &lt;code&gt;..&lt;/code&gt; indica un nivel inferior, &lt;code&gt;.&lt;/code&gt; indica el nivel actual (el directorio de trabajo). Esto nos permite usar el comando &lt;code&gt;mv&lt;/code&gt; para mover archivos hacia la actual ruta donde nos encontremos. Por ejemplo, para traer de vuelta el archivo &lt;code&gt;testfile.txt&lt;/code&gt; al directorio &lt;code&gt;linux-notes&lt;/code&gt;, bastaría teclear:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; linux-notes
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;md ../testfile.txt .
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ls -l
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Finalmente, de cara a renombrar archivos, empleamos el mismo comando que para moverlos. Por ejemplo&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mv test3.txt abc.txt
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ls -l
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Con este comando también hemos de ser cautos para no renombrar un archivo con el nombre de un fichero existente, pues podemos sobrescribirlo. En algunas distribuciones de &lt;em&gt;Linux&lt;/em&gt; esto sucede directamente (&lt;em&gt;Xubuntu&lt;/em&gt; es un ejemplo de esta forma de proceder) y en otras pregunta si deseamos realizar dicha acción.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mv abc.txt test4.txt
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ls -l
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;referencias&#34;&gt;Referencias&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://youtu.be/cSBYvSA9rDM&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Linux Commands for Beginners 06 - Moving and Renaming Files&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.theodinproject.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;The Odin Project&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Comandos de Linux #02</title>
      <link>https://imalexissaez.github.io/2023/05/22/comandos-de-linux-02/</link>
      <pubDate>Mon, 22 May 2023 00:00:01 +0200</pubDate>
      <guid>https://imalexissaez.github.io/2023/05/22/comandos-de-linux-02/</guid>
      <description>&lt;h2 id=&#34;edición-básica-de-archivos&#34;&gt;Edición básica de archivos&lt;/h2&gt;
&lt;p&gt;Para empezar, creamos un archivo mediante el comando &lt;code&gt;touch&lt;/code&gt;, al que pasamos como argumento el nombre deseado para el mencionado archivo. Por ejemplo, para generar un fichero denominado &lt;code&gt;testfile.txt&lt;/code&gt; tecleamos&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;touch testfile.txt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Acto seguido, si escribimos&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ls -l
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;observamos que un nuevo archivo aparece en el listado, cuyo tamaño es &lt;code&gt;0&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Ahora, para acceder al contenido de un archivo, empleamos el comando &lt;code&gt;cat&lt;/code&gt;. Por ejemplo, en el caso del fichero que acabamos de generar, teclearíamos:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cat testfile.txt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;aunque, al estar vacío, la terminal no arroja información alguna cuando ejecutamos el anterior comando. Por otro lado, si tecleamos de nuevo&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;touch testfile.txt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;como resultado se actualizará la fecha de creación del fichero.&lt;/p&gt;
&lt;p&gt;Por otro lado, podemos editar archivos empleando el comando&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;nano
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;que nos da acceso a un editor de texto plano. Si lo iniciamos de esta manera, no estaremos modificando ningún archivo (basta observar que en la parte superior aparece &lt;code&gt;New Buffer&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;En la parte inferior de la aplicación figura el menú con todas sus opciones. El símbolo &lt;code&gt;^&lt;/code&gt;, que aparece en todas ellas, ha de ser interpretado como el uso de la tecla &lt;code&gt;Ctrl&lt;/code&gt;. Así, el atajo &lt;code&gt;^X&lt;/code&gt;, para salir del programa, ha de ser ejecutado mediante la combinación &lt;code&gt;Ctrl + X&lt;/code&gt;. Asimismo, para guardar (o salvar) un archivo tras escribir cierto texto, el atajo es &lt;code&gt;^O&lt;/code&gt;, que equivale a la combinación &lt;code&gt;Ctrl + O&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Si cerramos el editor de texto y ejecutamos &lt;code&gt;ls -l&lt;/code&gt;, observaremos que aparece el nuevo archivo y este, a diferencia del anterior, posee cierto tamaño y podemos revisar sus contenidos mediante el comando &lt;code&gt;cat&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Al comando &lt;code&gt;nano&lt;/code&gt; le podemos añadir un atributo con el nombre del fichero que queremos editar. Por ejemplo&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;nano test3.txt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Este archivo no existía en el directorio actual, de manera que cuando salvemos lo creará con los contenidos que hayamos escrito. Siguiendo esta lógica, podríamos editar el archivo &lt;code&gt;testfile.txt&lt;/code&gt; que generamos al principio de la sección&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;nano testfile.txt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;Nota&lt;/em&gt;: la terminal posee autocompletado a través de la tecla &lt;code&gt;Tab&lt;/code&gt;. Así, escribiendo el principio del nombre de un archivo o directorio y pulsando dicha tecla, se autocompleta la línea.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Nota&lt;/em&gt;: con el comando &lt;code&gt;which&lt;/code&gt; podemos saber si una instrucción está disponible para su uso en la terminar. Por ejemplo, &lt;code&gt;which nano&lt;/code&gt; nos devuelve la ruta hacia el ejecutable, mientras que &lt;code&gt;which prueba&lt;/code&gt; no muestra salida, es decir, no existe ningún comando o aplicación en mi sistema con el nombre &lt;code&gt;prueba&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;una-breve-mirada-a-vim&#34;&gt;Una breve mirada a &lt;em&gt;Vim&lt;/em&gt;&lt;/h2&gt;
&lt;p&gt;Un editor de texto plano muy completo es &lt;em&gt;Vim&lt;/em&gt; y, por tanto, es recomendable aprender su uso. Quizá no a corto plazo, dada su elevada curva de aprendizaje; pero por sus muchos beneficios merece la pena invertir un tiempo a medio plazo para dominar esta aplicación si continuamos por la senda de la programación.&lt;/p&gt;
&lt;p&gt;En mi caso particular, al teclear en la terminal &lt;code&gt;which vim&lt;/code&gt;, esta no arroja respuesta alguna. Es decir, la mencionada aplicación no está instalada en mi sistema. Para solventar esta situación, basta teclear&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt install vim-nox
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;Vim&lt;/em&gt;, como ya hemos mencionado, es un editor de texto plano más avanzado que &lt;code&gt;nano&lt;/code&gt;, por lo que su uso es más complejo. Para empezar, salir de la propia aplicación no es nada intuitivo y lo haremos tecleando &lt;code&gt;:q&lt;/code&gt; en el modo &lt;em&gt;command&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Así pues, ya apreciamos que existen diversos modos o estados en &lt;em&gt;Vim&lt;/em&gt;. Por ejemplo, pulsando la tecla &lt;code&gt;i&lt;/code&gt; activamos el modo &lt;em&gt;insert&lt;/em&gt; (mediante el cual podemos editar un archivo de la manera habitual) y con la tecla &lt;code&gt;Esc&lt;/code&gt; retrocederíamos de nuevo al modo &lt;em&gt;command&lt;/em&gt;. En este último modo, no podemos escribir como habitualmente estamos acostumbrados, sino que es el modo que empleamos en &lt;em&gt;Vim&lt;/em&gt; para introducir instrucciones o comandos al programa.&lt;/p&gt;
&lt;p&gt;De esta forma, para salvar el archivo que hemos escrito a través del modo &lt;em&gt;insert&lt;/em&gt;, volvemos al modo &lt;em&gt;command&lt;/em&gt; y escribimos &lt;code&gt;:w&lt;/code&gt; (si pulsamos intro a continuación, recibiremos un error por no asignar un nombre al archivo). Así, tecleamos &lt;code&gt;:w test4.txt&lt;/code&gt;. Al igual que sucedía con &lt;code&gt;nano&lt;/code&gt;, podemos lanzar &lt;em&gt;Vim&lt;/em&gt; con el nombre de un archivo como atributo, de manera que abrirá dicho fichero al iniciarse.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Nota&lt;/em&gt;: el atajo &lt;code&gt;shift + I&lt;/code&gt; es muy útil, pues activa el modo &lt;em&gt;insert&lt;/em&gt; y coloca el cursor al final del archivo.&lt;/p&gt;
&lt;p&gt;Si usamos&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;vim test4.txt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;y añadimos texto, bastará en el modo &lt;em&gt;command&lt;/em&gt; teclear para &lt;code&gt;:w&lt;/code&gt; para guardar el archivo (pues ya posee nombre asignado).&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Nota&lt;/em&gt;: para borrar una línea por completo, podemos emplear el atajo que consiste en pulsar &lt;code&gt;d&lt;/code&gt; dos veces en el modo &lt;em&gt;command&lt;/em&gt;.&lt;/p&gt;
&lt;h2 id=&#34;referencias&#34;&gt;Referencias&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://youtu.be/T20jXu7rDCA&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Linux Commands for Beginners 05 - Basic File Editing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.theodinproject.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;The Odin Project&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Comandos de Linux #01</title>
      <link>https://imalexissaez.github.io/2023/05/21/comandos-de-linux-01/</link>
      <pubDate>Sun, 21 May 2023 00:00:01 +0200</pubDate>
      <guid>https://imalexissaez.github.io/2023/05/21/comandos-de-linux-01/</guid>
      <description>&lt;h2 id=&#34;introducción&#34;&gt;Introducción&lt;/h2&gt;
&lt;p&gt;Esta semana he estado echando un vistazo a la plataforma &lt;a href=&#34;https://www.theodinproject.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;The Odin Project&lt;/a&gt; y más concretamente a su curso de fundamentos, &lt;a href=&#34;https://www.theodinproject.com/paths/foundations/courses/foundations&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Foundations&lt;/a&gt;. Este es el punto de partida común que comparten las dos especializaciones de desarrollo web ofrecidas en este sitio: una basada en &lt;em&gt;Ruby&lt;/em&gt; y otra en &lt;em&gt;JavaScript&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Su primera sección, &lt;em&gt;Introduction&lt;/em&gt;, es ciertamente interesante, pues trata temas tan variados como el aprendizaje en sí, la gestión de la frustración o la manera de realizar preguntas adecuadamente para obtener ayuda útil. Es un aspecto que la mayoría de los cursos no aborda y los recursos que ofrece esta plataforma son muy interesantes.&lt;/p&gt;
&lt;p&gt;Completada dicha sección, la siguiente lleva por título &lt;em&gt;Prerequisites&lt;/em&gt; y se centra en el funcionamiento básico de los ordenadores y de Internet. Además, es donde empezamos a configurar nuestro entorno de desarrollo para trabajar a lo largo de este curso. Como no podía ser de otra manera, sin ni tan siquiera haber generado un solo fichero, ya comienzan a aparecer los retos (que, por otra parte, bienvenidos sean tras las conclusiones que se extraen de las charlas que figuran en la sección &lt;em&gt;Introduction&lt;/em&gt;):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;The Odin Project&lt;/em&gt; no da soporte oficial para &lt;em&gt;Windows&lt;/em&gt;. ¿Qué sistema operativo utiliza un servidor? Efectivamente, &lt;em&gt;Windows&lt;/em&gt;. No obstante, la plataforma no nos deja de lado y ofrece alternativas muy bien detalladas para seguir los contenidos de la especialización. A la hora de escribir estas líneas, estoy probando la emulación de una distribución de &lt;em&gt;Linux&lt;/em&gt;, &lt;em&gt;Xubuntu&lt;/em&gt;, a través de &lt;em&gt;Oracle VM VirtualBox&lt;/em&gt; (he tenido hasta que trastear la &lt;em&gt;BIOS&lt;/em&gt; para permitir la emulación en mi ordenador).&lt;/li&gt;
&lt;li&gt;La propia plataforma nos aconseja no caer en &lt;em&gt;rabbit holes&lt;/em&gt; que nos distraigan y centrarnos en seguir sus contenidos. La misma plataforma, casi en cada uno de sus apartados, nos enseña docenas de tentadores &lt;em&gt;rabbit holes&lt;/em&gt; en los que perdernos.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;De hecho, esta serie de artículos para el blog son fruto de haber caído en uno de esos &lt;em&gt;rabbit holes&lt;/em&gt;, pues una vez instalado &lt;em&gt;Xubuntu&lt;/em&gt; recomiendan aprender los principales comandos que se emplean en su terminal. Para ello enlazan a una lista de reproducción en &lt;em&gt;YouTube&lt;/em&gt; de 24 vídeos del canal &lt;em&gt;LearnLinuxTV&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;A continuación, comparto las notas tomadas durante el cuarto vídeo, que corresponde al primero del curso en el cual se empieza a utilizar la terminal.&lt;/p&gt;
&lt;h2 id=&#34;navegando-por-el-sistema-de-ficheros&#34;&gt;Navegando por el sistema de ficheros&lt;/h2&gt;
&lt;p&gt;Para empezar, el comando&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ls
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;muestra el contenido del directorio actual de trabajo (&lt;code&gt;ls&lt;/code&gt; es la abreviatura de &lt;em&gt;list storage&lt;/em&gt;). Así, al iniciar una nueva terminal, accederíamos con él a los contenidos de la carpeta del usuario.&lt;/p&gt;
&lt;p&gt;Si tecleamos&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ls /
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;accedemos a los contenidos almacenados en la raíz del sistema (&lt;code&gt;/&lt;/code&gt;). Asimismo, con&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ls /home
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;se muestran las carpetas habilitadas para los distintos usuarios del sistema. En mi caso, tras la instalación de &lt;em&gt;Xubuntu&lt;/em&gt; siguiendo las instrucciones de la plataforma, únicamente aparece la carpeta &lt;code&gt;alexis&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Nota&lt;/em&gt;: Por comodidad, para limpiar la terminal y dejar de mostrar la información acumulada hasta el momento, podemos emplear el comando &lt;code&gt;clear&lt;/code&gt; o, en ocasiones, dependiendo de la distribución de &lt;em&gt;Linux&lt;/em&gt; que tengamos en nuestro sistema, la combinación de teclas &lt;code&gt;Ctrl + L&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Por otra parte, podemos añadir atributos a un comando de la terminal. Por ejemplo, si tecleamos&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ls -l /
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;obtendremos mucha más información que antes de cada una de las carpetas y de los ficheros ubicados en la raíz del sistema (el atributo &lt;code&gt;-l&lt;/code&gt; indica &lt;em&gt;long listing&lt;/em&gt;). Además, cada carpeta o fichero aparece en su propia línea. Al inicio de cada una de las mencionadas líneas aparece una extraña secuencia de caracteres que, en su mayor parte, recoge los permisos asociados a la correspondiente carpeta o archivo. De momento, si nos centramos únicamente en el primer carácter:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;d&lt;/code&gt;: indica directorio o carpeta.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-&lt;/code&gt;: indica que es un archivo.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;l&lt;/code&gt;: indica un enlace a otro archivo.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Nota&lt;/em&gt;: Una alternativa a la combinación &lt;code&gt;ls -l&lt;/code&gt; es el comando &lt;code&gt;ll&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;En la raíz del sistema encontramos algunos directorios de vital importancia. Aunque de momento no entraremos en profundidad en los detalles de cada uno de ellos, para hacernos una idea resulta que:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;bin&lt;/code&gt;: es el directorio que contiene los programas ejecutables del sistema.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boot&lt;/code&gt;: es el directorio que contiene los archivos necesarios para iniciar el sistema operativo.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;home&lt;/code&gt;: es el directorio asociado a los usuarios del sistema.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;etc&lt;/code&gt;: es el directorio que contiene los archivos de configuración del sistema.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;media&lt;/code&gt;: es el directorio donde se montan dispositivos externos (usb, cd-rom&amp;hellip;).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;var&lt;/code&gt;: es el directorio que contiene &lt;em&gt;logs&lt;/em&gt; del sistema.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Nota&lt;/em&gt;: la terminal de algunas distribuciones de &lt;em&gt;Linux&lt;/em&gt; emplea un código de colores para diferenciar los distintos tipos de elementos almacenados. Así, el color azul suele indicar carpetas; el blanco, archivos; y el verde, archivos binarios.&lt;/p&gt;
&lt;p&gt;Para cambiar de directorio y navegar por el sistema de archivos utilizamos el comando&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;que es la abreviatura de &lt;em&gt;change directory&lt;/em&gt;. Por ejemplo, &lt;code&gt;cd /&lt;/code&gt; nos lleva a la raíz del sistema y combinando los comandos &lt;code&gt;cd&lt;/code&gt; y &lt;code&gt;ls&lt;/code&gt; es como habitualmente nos desplazaremos por el interior del sistema de archivos. En cualquier momento podemos acceder a la ruta del directorio actual de trabajo en el que nos encontramos sin más que teclear&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;pwd&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;que es la abreviatura de &lt;em&gt;print working directory&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Nota&lt;/em&gt;: la tilde o virgulilla, &lt;code&gt;~&lt;/code&gt;, actúa como atajo hacia la carpeta del usuario. Así, con &lt;code&gt;cd ~&lt;/code&gt; acudimos directamente a nuestra carpeta de usuario.&lt;/p&gt;
&lt;h2 id=&#34;referencias&#34;&gt;Referencias&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://youtu.be/MnY0K-3_Fjk&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Linux Commands for Beginners 04 - Navigating the Filesystem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.theodinproject.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;The Odin Project&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
