
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    [{"authors":null,"categories":null,"content":"Infinitos Contrastes es una herramienta de aprendizaje en múltiples dimensiones. Su objetivo es posibilitar que el recorrido a través de las distintas enseñanzas se plantee de una manera activa, a partir de la transmisión de ideas o experiencias.\nMi educación e intereses condiciona evidentemente el trasfondo de esta página web, que refleja una constante batalla contra la Hidra de Lerna: cada conocimiento nuevo adquirido orgina, al menos, dos inesperadas carencias que suplir, haciendo de este infinito viaje una experiencia maravillosa.\n","date":1687644001,"expirydate":-62135596800,"kind":"term","lang":"es","lastmod":1687644001,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"Infinitos Contrastes es una herramienta de aprendizaje en múltiples dimensiones. Su objetivo es posibilitar que el recorrido a través de las distintas enseñanzas se plantee de una manera activa, a partir de la transmisión de ideas o experiencias.","tags":null,"title":"Alexis Sáez","type":"authors"},{"authors":null,"categories":null,"content":"El propósito de este proyecto es recopilar una serie de problemas matemáticos enfocados a la preparación de oposiciones para el cuerpo de profesores de Enseñanza Secundaria, en la especialidad de matemáticas.\nEn sus páginas encontraremos tanto enunciados que permitan al lector ponerse a prueba, como ejercicios y problemas completamente resueltos. Así pues, va a ser el resultado de la fusión de los dos proyectos existentes hasta la fecha en este sitio web que están relacionados con las oposiciones. De esta manera, pretendo evitar la dispersión de contenido originada al publicarlo como artículos en el blog y centralizarlo a continuación.\n","date":1624057201,"expirydate":-62135596800,"kind":"section","lang":"es","lastmod":1624057201,"objectID":"cbbd03b1ac0aa0a65b04514861b56f0c","permalink":"https://imalexissaez.github.io/problemas-oposicion/","publishdate":"2021-06-19T00:00:01+01:00","relpermalink":"/problemas-oposicion/","section":"problemas-oposicion","summary":"Este proyecto es una recopilación de problemas matemáticos (tanto resueltos, como propuestos) para la preparación de las oposiciones al cuerpo de profesores de Enseñanza Secundaria.","tags":null,"title":"Problemas de oposición","type":"book"},{"authors":null,"categories":null,"content":"En aquest projecte compilaré recursos útils a l’hora d’estudiar valencià per superar les proves que avaluen el nivell C1 del Marc Europeu Comú de Referència (MECR d’ara endavant) per a les llengües i diversos recursos i informació relacionats amb el Certificat de Capacitació en valencià.\n","date":1563750001,"expirydate":-62135596800,"kind":"section","lang":"es","lastmod":1563750001,"objectID":"cbf39d54c4d8f6c51549d28b6ef93405","permalink":"https://imalexissaez.github.io/valenciano/","publishdate":"2019-07-22T00:00:01+01:00","relpermalink":"/valenciano/","section":"valenciano","summary":"En aquest projecte compilaré recursos útils a l’hora d’estudiar valencià per superar les proves que avaluen el nivell C1 del Marc Europeu Comú de Referència (MECR d’ara endavant) per a les llengües i diversos recursos i informació relacionats amb el Certificat de Capacitació en valencià.","tags":null,"title":"Recursos de valencià","type":"book"},{"authors":null,"categories":null,"content":"Introducción del curso Vídeo Notas personales En este vídeo, se presenta el curso de Python y los motivos de su desarrollo. Después se revisa el temario, que aborda:\nIntroducción. Requisitos previos. Instalación software. Fundamentos y sintaxis básica del lenguaje. POO con Python. Algoritmos, listas y tramos. BBDD. Trabajo con gráficos y contenidos. Procesos y tareas. Programación de red. Sockets. Ejercicios prácticos. La lección termina con un breve apartado de FAQ.\nIntroducción a Python Vídeo Notas personales En este vídeo, se repasa la historia de Python y sus principales características. Entre ellas, destacan:\nLenguaje interpretado de alto nivel, orientado a objetos, versátil y que es de código abierto. Gramática sencilla, clara y muy legible, con tipado dinámico y fuerte A través de este enlace descargamos la última versión de Python (3.7.3 a la hora de escribir estas líneas). Si queremos la versión de 64 bits para Windows, hemos de buscarla en esta página.\nDurante su instalación:\nActivamos la casilla que añade la ruta de Python al PATH. Pulsamos, al final de la instalación, sobre la opción que elimina la restricción de longitud máxima sobre las rutas del PATH. Con respecto a los IDE, en el curso se utilizará Sublime Text 3, aunque se ofrecen como alternativas Eclipse y Notepad++.\nSintaxis básica Vídeo Notas personales En el IDLE de Python, tecleamos:\n\u0026gt;\u0026gt;\u0026gt; print(\u0026#34;¡Hola mundo!\u0026#34;) # Esto es una instrucción ¡Hola mundo! Usando ; escribimos varias instrucciones en una misma línea, aunque es desaconsejable por restar legibilidad.\n\u0026gt;\u0026gt;\u0026gt; print(\u0026#34;¡Hola mundo!\u0026#34;); print(\u0026#34;¡Bienvenidos!\u0026#34;) ¡Hola mundo! ¡Bienvenidos! Introducimos los comentarios con el símbolo # para:\nAnotar el código, facilitando futuros mantenimientos. Desactivar bloques de instrucciones, para localizar errores cometidos. \u0026gt;\u0026gt;\u0026gt; # Esto es un comentario ... Mediante el símbolo \\ dividimos una instrucción en varias líneas, aunque es desaconsejable por restar legibilidad.\n\u0026gt;\u0026gt;\u0026gt; mi_nombre = \u0026#34;Mi nombre es Alexis.\u0026#34; \u0026gt;\u0026gt;\u0026gt; mi_nombre \u0026#39;Mi nombre es Alexis.\u0026#39; \u0026gt;\u0026gt;\u0026gt; mi_nombre = \u0026#34;Mi nombre es \\ ... Alexis\u0026#34; \u0026gt;\u0026gt;\u0026gt; mi_nombre \u0026#39;Mi nombre es Alexis\u0026#39; Construimos los bloques de código mediante identación. El IDLE se encarga automáticamente de procurarla:\n\u0026gt;\u0026gt;\u0026gt; a = 0 \u0026gt;\u0026gt;\u0026gt; for i in range(5): ... a += 1 ... print(a) ... 1 2 3 4 5 \u0026gt;\u0026gt;\u0026gt; Durante el curso, usaremos el IDLE de Sublime Text 3. Para ello, descargamos el editor a través de este enlace y lo instalamos. Al iniciarlo:\nDesplegamos el menú Tools y seleccionamos Command Palette.... Escribimos Install Package Control y clicamos sobre la opción que aparece. Desplegamos, de nuevo, el menú Tools, seleccionamos Command Palette... y tecleamos install package. En la siguiente ventana, escribimos SublimeREPL, para así tener el interprete de Python disponible desde el propio editor. Para activarlo, desde el menú Tools, seleccionamos ahora SublimeREPL y buscamos Python. Entre las opciones que aparecen, escogemos Python. ","date":1556406001,"expirydate":-62135596800,"kind":"section","lang":"es","lastmod":1556406001,"objectID":"fb1ef1c8f9261966a9ae51dd13590710","permalink":"https://imalexissaez.github.io/python-basic/introduccion/","publishdate":"2019-04-28T00:00:01+01:00","relpermalink":"/python-basic/introduccion/","section":"python-basic","summary":"Primeros pasos con Python","tags":null,"title":"Introducción del curso","type":"book"},{"authors":null,"categories":null,"content":"El objetivo de este proyecto no es otro que recopilar mis notas personales elaboradas a partir de la lista de reproducción Curso Python desde 0, ofrecida por Píldoras Informáticas.\nTras visualizar unas cuantas lecciones, he comprobado que el curso es más que recomendable, por lo que me he animado a seguirlo de una manera activa, es decir, replicando el código fuente que aparezca, así como anotando las ideas principales de cada vídeo. Todo ello quedará disponible a través del menú lateral que figura en la parte izquiera de esta página (o del menú superior desplegable para la versión móvil), por si alguna persona pudiera encontrarlo de utilidad.\nFinalmente, dejo aquí el enlace a una reseña del curso, redactada una vez he finalizado de abordar sus contenidos, donde detallo mi opinión sobre el mismo.\n","date":1556406001,"expirydate":-62135596800,"kind":"section","lang":"es","lastmod":1560812401,"objectID":"0a62d4484968b1eb65945c837b820e3f","permalink":"https://imalexissaez.github.io/python-basic/","publishdate":"2019-04-28T00:00:01+01:00","relpermalink":"/python-basic/","section":"python-basic","summary":"Notas personales para el curso 'Python desde 0' ofrecido por 'Píldoras Informáticas'.","tags":null,"title":"Python (Básico)","type":"book"},{"authors":null,"categories":null,"content":"Tipos, operadores y variables Vídeo Notas personales Los tipos de datos disponibles en Python son:\nNuméricos Enteros (int) Coma flotante (float) Complejos Textos Booleanos True False Los principales operadores en Python son:\nAritméticos: +, -, *, /, %, ** y //. Comparación: ==, !=, \u0026gt;, \u0026lt;, \u0026gt;= y \u0026lt;=. Lógicos: AND, OR y NOT. Asignación: =, +=, -=, *=, /=, %=, **= y //=. Especiales: is, is not, in y not in. Los operadores aritméticos nos permiten utilizar Python a modo de calculadora.\n\u0026gt;\u0026gt;\u0026gt; 5 + 6 # Suma 11 \u0026gt;\u0026gt;\u0026gt; 11 - 8 # Resta 3 \u0026gt;\u0026gt;\u0026gt; 2 * 6 # Multiplicación 12 \u0026gt;\u0026gt;\u0026gt; 7 / 2 # División 3.5 \u0026gt;\u0026gt;\u0026gt; 10 % 3 # Módulo 1 \u0026gt;\u0026gt;\u0026gt; 5 ** 2 # Exponenciación 25 \u0026gt;\u0026gt;\u0026gt; 7 // 2 # División entera 3 Una variable es un espacio en la memoria del ordenador donde se almacenará un valor que podrá cambiar durante la ejecución del programa. Para declararla, utilizamos el patrón nombre = valor y su tipo lo establece el contenido, no el contenedor.\nNota: en Python todo son objetos (variables, números…).\n\u0026gt;\u0026gt;\u0026gt; nombre = 5 \u0026gt;\u0026gt;\u0026gt; type(nombre) \u0026lt;class \u0026#39;int\u0026#39;\u0026gt; \u0026gt;\u0026gt;\u0026gt; nombre = \u0026#34;Alexis\u0026#34; \u0026gt;\u0026gt;\u0026gt; type(nombre) \u0026lt;class \u0026#39;str\u0026#39;\u0026gt; \u0026gt;\u0026gt;\u0026gt; nombre = 5.2 \u0026gt;\u0026gt;\u0026gt; type(nombre) \u0026lt;class \u0026#39;float\u0026#39;\u0026gt; Definimos cadenas de texto mediante los símbolos \u0026#39;, \u0026#34; y \u0026#39;\u0026#39;\u0026#39;, permitiendo esta última opción saltos de líneas.\n\u0026gt;\u0026gt;\u0026gt; mensaje = \u0026#39;Esto es un mensaje.\u0026#39; \u0026gt;\u0026gt;\u0026gt; print(mensaje) Esto es un mensaje. \u0026gt;\u0026gt;\u0026gt; mensaje = \u0026#34;Esto es un mensaje.\u0026#34; \u0026gt;\u0026gt;\u0026gt; print(mensaje) Esto es un mensaje. \u0026gt;\u0026gt;\u0026gt; mensaje = \u0026#39;\u0026#39;\u0026#39;Esto es un mensaje ... con tres saltos ... de línea.\u0026#39;\u0026#39;\u0026#39; \u0026gt;\u0026gt;\u0026gt; print(mensaje) Esto es un mensaje con tres saltos de línea. Los operadores de comparación suelen aparecer en bloques condicionales.\n\u0026gt;\u0026gt;\u0026gt; numero1 = 5 \u0026gt;\u0026gt;\u0026gt; numero2 = 7 \u0026gt;\u0026gt;\u0026gt; if numero1 \u0026gt; numero2: ... print(\u0026#34;El número 1 es mayor.\u0026#34;) ... else: ... print(\u0026#34;El número 2 es mayor.\u0026#34;) ... El número 2 es mayor. Nota: no confundir el operador de asignación = con el operador de comparación ==.\n\u0026gt;\u0026gt;\u0026gt; numero1 = 2 \u0026gt;\u0026gt;\u0026gt; numero2 = 3 \u0026gt;\u0026gt;\u0026gt; if numero1 == numero2: ... print(\u0026#34;Los números son iguales.\u0026#34;) ... else: ... print(\u0026#34;Los números son diferentes.\u0026#34;) ... Los números son diferentes. Funciones I Vídeo Notas personales Una función es un conjunto de líneas de código agrupadas, que funcionan como una unidad realizando una tarea específica. Puede devolver valores, tener parámetros o argumentos y recibe el nombre de método cuando está definida dentro de una clase.\nEn Python existen funciones predifinidas, como por ejemplo print(). Su principal utilidad es la reutilización de código y su sintaxis es:\ndef nombre(parámetros): instrucciones de la función return(opcional) Ejecutamos (o llamamos) una función tecleando nombre_función(parámetros).\nA continuación, dejamos de lado el IDLE de Sublime Text 3 y pasamos a compilar directamente ficheros desde el propio editor. Para ello, desplegamos el menú Tools y en el apartado Build System escogemos la opción Python. Acto seguido, creamos el fichero funciones.py, que contendrá la instrucción\nprint(\u0026#34;Estamos aprendiendo Python.\u0026#34;) y utilizamos la combinación de teclas ctrl + b para compilar. En la parte inferior de la ventana aparecerá el resultado de la ejecución y el tiempo invertido.\nAmpliemos el anterior fichero a\nprint(\u0026#34;Estamos aprendiendo Python.\u0026#34;) print(\u0026#34;Estamos aprendiendo instrucciones básicas.\u0026#34;) print(\u0026#34;Poco a poco iremos avanzando.\u0026#34;) e imaginemos que necesitamos que las anteriores tres líneas se impriman cinco veces. Podemos, simplemente, copiar y pegar el anterior bloque de código reiteradamente:\nprint(\u0026#34;Estamos aprendiendo Python.\u0026#34;) print(\u0026#34;Estamos aprendiendo instrucciones básicas.\u0026#34;) print(\u0026#34;Poco a poco iremos avanzando.\u0026#34;) print(\u0026#34;Estamos aprendiendo Python.\u0026#34;) print(\u0026#34;Estamos aprendiendo instrucciones básicas.\u0026#34;) print(\u0026#34;Poco a poco iremos avanzando.\u0026#34;) print(\u0026#34;Estamos aprendiendo Python.\u0026#34;) print(\u0026#34;Estamos aprendiendo instrucciones básicas.\u0026#34;) print(\u0026#34;Poco a poco iremos avanzando.\u0026#34;) print(\u0026#34;Estamos aprendiendo Python.\u0026#34;) print(\u0026#34;Estamos aprendiendo instrucciones básicas.\u0026#34;) print(\u0026#34;Poco a poco iremos avanzando.\u0026#34;) print(\u0026#34;Estamos aprendiendo Python.\u0026#34;) print(\u0026#34;Estamos aprendiendo instrucciones básicas.\u0026#34;) print(\u0026#34;Poco a poco iremos avanzando.\u0026#34;) Las funciones nos permiten reutilizar código para, precisamente, evitar que actuemos como arriba. Definamos una función llamada mensaje() y ejecutémosla tantas veces como deseemos.\ndef mensaje(): print(\u0026#34;Estamos aprendiendo Python.\u0026#34;) print(\u0026#34;Estamos aprendiendo instrucciones básicas.\u0026#34;) print(\u0026#34;Poco a poco iremos avanzando.\u0026#34;) Ahora, la tarea que buscábamos realizar quedaría como:\nmensaje() mensaje() mensaje() mensaje() mensaje() Entre distintas llamadas a una función puede haber cualquier otro tipo de instrucción:\nmensaje() print(\u0026#34;Ejecutando código fuera de función\u0026#34;) mensaje() Código fuente El código fuente y los posibles ficheros externos generados correspondientes a esta lección se encuentran disponibles para su consulta en la carpeta /lecciones/05/ del repositorio.\nFunciones II Vídeo Notas personales Comencemos definiendo una función que suma dos números dados (5 y 7), mediante el mecanismo aprendido en la lección anterior:\ndef suma(): num1 = 5 num2 = 7 …","date":1556492461,"expirydate":-62135596800,"kind":"section","lang":"es","lastmod":1556492461,"objectID":"fa10c96487115c2f9897fa5e231fe6da","permalink":"https://imalexissaez.github.io/python-basic/tipos-y-variables/","publishdate":"2019-04-29T00:01:01+01:00","relpermalink":"/python-basic/tipos-y-variables/","section":"python-basic","summary":"Introducción al estudio de los tipos, los operadores y las variables en Python.","tags":null,"title":"Tipos, operadores y variables","type":"book"},{"authors":null,"categories":null,"content":"Condicionales I Vídeo Notas personales Las estructuras condicionales nos permiten alterar el flujo de ejecución de un programa. Por lo que respecta al condicional if, tiene la siguiente sintaxis:\nif condición: instrucciones La anterior condición suele venir expresada a través de operadores de comparación (\u0026lt;, \u0026gt;, \u0026lt;=, \u0026gt;=, ==, !=). Veamos un sencillo ejemplo de aplicación de una estructura condicional if en la definición de una función:\ndef evaluacion(nota): valoracion = \u0026#34;Aprobado\u0026#34; if nota \u0026lt; 5: valoracion = \u0026#34;Suspenso\u0026#34; return valoracion print(evaluacion(6)) # Aprobado print(evaluacion(1)) # Suspenso print(evaluacion(2.1)) # Suspenso Programemos una versión interactiva del anterior bloque de instrucciones, donde el usuario ha de introducir la nota durante la ejecución del código (a través de la función input()). Para ello, necesitamos activar la consola mediante el menú Tools, opción SublimeREPL y en el apartado Python seleccionamos Python - RUN current file.\ndef evaluacion(nota): valoracion = \u0026#34;Aprobado\u0026#34; if nota \u0026lt; 5: valoracion = \u0026#34;Suspenso\u0026#34; return valoracion print(\u0026#34;Programa de evaluación de notas de alumnos\u0026#34;) nota_alumno = input() print(evaluacion(nota_alumno)) No obstante, si ejecutamos e insertamos una nota numérica (por ejemplo, 8), Python nos arroja el siguiente error:\n# TypeError: \u0026#39;\u0026lt;\u0026#39; not supported between instances of \u0026#39;str\u0026#39; and \u0026#39;int\u0026#39; Ello es debido a que cualquier información introducida por el usuario desde el teclado se almacena como cadena de texto (\u0026#34;8\u0026#34;), y el operador \u0026lt; no está preparado para comparar textos y números. Resolvemos esta situación empleando la función int().\ndef evaluacion(nota): valoracion = \u0026#34;Aprobado\u0026#34; if nota \u0026lt; 5: valoracion = \u0026#34;Suspenso\u0026#34; return valoracion print(\u0026#34;Programa de evaluación de notas de alumnos\u0026#34;) nota_alumno = input() print(evaluacion(int(nota_alumno))) Siendo una iteración del programa, por ejemplo,\nPrograma de evaluación de notas de alumnos 8 Aprobado La función input() admite la posibilidad de indicar un mensaje:\ndef evaluacion(nota): valoracion = \u0026#34;Aprobado\u0026#34; if nota \u0026lt; 5: valoracion = \u0026#34;Suspenso\u0026#34; return valoracion print(\u0026#34;Programa de evaluación de notas de alumnos\u0026#34;) nota_alumno = input(\u0026#34;Introduce la nota del alumno: \u0026#34;) print(evaluacion(int(nota_alumno))) Siendo ahora una iteración del programa, por ejemplo:\nPrograma de evaluación de notas de alumnos Introduce la nota del alumno: 8 Aprobado Código fuente El código fuente y los posibles ficheros externos generados correspondientes a esta lección se encuentran disponibles para su consulta en la carpeta /lecciones/10/ del repositorio.\nCondicionales II Vídeo Notas personales En este vídeo ampliaremos las posibilidades de la estructura condicional if mediante else y elif, quedando entonces su sintaxis como\nif condicion: instrucciones elif condicion: instrucciones else: instrucciones Empecemos creando un programa de control de acceso:\nprint(\u0026#34;Verificación de acceso\u0026#34;) edad_usuario = int(input(\u0026#34;Introduce tu edad: \u0026#34;)) if edad_usuario \u0026lt; 18: print(\u0026#34;No puedes pasar.\u0026#34;) else: print(\u0026#34;Puedes pasar.\u0026#34;) Veamos el resultado de algunas ejecuciones de este programa:\nVerificación de acceso Introduce tu edad: 19 Puedes pasar. Verificación de acceso Introduce tu edad: 15 No puedes pasar. Añadamos al programa la posibilidad de mostrar un mensaje de error si el usuario introduce un dato excesivamente elevado:\nprint(\u0026#34;Verificación de acceso\u0026#34;) edad_usuario = int(input(\u0026#34;Introduce tu edad: \u0026#34;)) if edad_usuario \u0026lt; 18: print(\u0026#34;No puedes pasar.\u0026#34;) elif edad_usuario \u0026gt; 100: print(\u0026#34;Edad incorrecta.\u0026#34;) else: print(\u0026#34;Puedes pasar.\u0026#34;) Veamos el resultado de ejecutar el anterior programa con distintos valores de edad:\nVerificación de acceso Introduce tu edad: 25 Puedes pasar. Verificación de acceso Introduce tu edad: 15 No puedes pasar. Verificación de acceso Introduce tu edad: 124 Edad incorrecta. Para reforzar el uso de esta estructura condicional, elaboremos un programa que asigna a cada calificación numérica su correspondiente etiqueta:\nprint(\u0026#34;Control de calificaciones\u0026#34;) nota_alumno = int(input(\u0026#34;Introduce la nota: \u0026#34;)) if nota_alumno \u0026lt; 0: print(\u0026#34;Nota incorrecta.\u0026#34;) elif nota_alumno \u0026lt; 5: print(\u0026#34;Insuficiente.\u0026#34;) elif nota_alumno \u0026lt; 6: print(\u0026#34;Suficiente.\u0026#34;) elif nota_alumno \u0026lt; 7: print(\u0026#34;Bien.\u0026#34;) elif nota_alumno \u0026lt; 9: print(\u0026#34;Notable.\u0026#34;) elif nota_alumno \u0026lt;= 10: print(\u0026#34;Sobresaliente.\u0026#34;) else: print(\u0026#34;Nota incorrecta.\u0026#34;) Veamos el resultado de ejecutar el anterior programa con distintas calificaciones:\nControl de calificaciones Introduce la nota: -6 Nota incorrecta. Control de calificaciones Introduce la nota: 4 Insuficiente. Control de calificaciones Introduce la nota: 6 Bien. Control de calificaciones Introduce la nota: 7 Notable. Control de calificaciones Introduce la nota: 10 Sobresaliente. Control de calificaciones Introduce la nota: 12 Nota incorrecta. Ejercicio 1: crea un programa que pida dos números enteros por teclado. El programa tendrá una función llamada devuelve_max encargada de devolver el número más alto de los dos introducidos.\ndef devuelve_max(n1, n2): if n1 \u0026lt; n2: return n2 …","date":1556578921,"expirydate":-62135596800,"kind":"section","lang":"es","lastmod":1556578921,"objectID":"d4707e70a7ff89406b89e26e400c1aee","permalink":"https://imalexissaez.github.io/python-basic/condicionales/","publishdate":"2019-04-30T00:02:01+01:00","relpermalink":"/python-basic/condicionales/","section":"python-basic","summary":"Introducción al estudio de las estructuras condicionales en Python.","tags":null,"title":"Condicionales","type":"book"},{"authors":null,"categories":null,"content":"Bucles I Vídeo Notas personales Abordaremos ahora otro tipo de estructura de control de flujo (las estructuras condicionales asimismo lo eran): los bucles.\nLa utilidad de un bucle es repetir una o varias líneas de código tantas veces como sea preciso (siendo esta cantidad conocida de antemano o no). En Python tenemos dos tipos de bucles:\ndeterminados: sabemos a priori cuántas veces se repetirá el bloque de código, e indeterminados: desconocemos a priori el número de repeticiones del bloque de código. Empecemos viendo el primer tipo, al que pertenece la instrucción for, cuya sintaxis es:\nfor variable in elemento_a_recorrer: instrucciones donde el elemento_a_recorrer puede ser una lista, una tupla, una cadena de texto…\nPor ejemplo, para imprimir tres veces una palabra, una posible estrategia sería:\nfor i in [1, 2, 3]: print(\u0026#34;Hola\u0026#34;) Aunque hemos utilizado una lista de números, no es imprescindible. El siguiente ejemplo consigue el mismo resultado:\nfor i in [\u0026#34;enero\u0026#34;, \u0026#34;febrero\u0026#34;, \u0026#34;marzo\u0026#34;]: print(\u0026#34;Hola\u0026#34;) En ambos casos, el elemento a recorrer es una lista de tres elementos y es por ello que el mensaje \u0026#34;Hola\u0026#34; se repite en tres ocasiones, tantas como el mencionado número de elementos de la correspondiente lista.\nSi en lugar de un texto predeterminado optamos por imprimir la propia variable en ambos casos, el resultado es:\nfor i in [1, 2, 3]: print(i) # 1 # 2 # 3 for i in [\u0026#34;enero\u0026#34;, \u0026#34;febrero\u0026#34;, \u0026#34;marzo\u0026#34;]: print(i) # enero # febrero # marzo La variable no tiene que denominarse necesariamente i:\nfor meses in [\u0026#34;enero\u0026#34;, \u0026#34;febrero\u0026#34;, \u0026#34;marzo\u0026#34;]: print(meses) # enero # febrero # marzo Código fuente El código fuente y los posibles ficheros externos generados correspondientes a esta lección se encuentran disponibles para su consulta en la carpeta /lecciones/14/ del repositorio.\nBucles II Vídeo Notas personales Las instrucciones print() que aparecen en los bucles de tipo for insertan un salto de línea en cada iteración:\nfor i in [\u0026#34;Píldoras\u0026#34;, \u0026#34;Informáticas\u0026#34;, 3]: print(\u0026#34;Hola\u0026#34;) # Hola # Hola # Hola Si deseamos que la impresión se produzca en la misma línea, hemos de declarar adecuadamente el argumento end de la función print():\nfor i in [\u0026#34;Píldoras\u0026#34;, \u0026#34;Informáticas\u0026#34;, 3]: print(\u0026#34;Hola\u0026#34;, end=\u0026#34; \u0026#34;) # Hola Hola Hola Si el elemento a recorrer es una cadena de texto, el bucle for ejecutará tantas iteraciones como letras tenga esta:\nfor i in \u0026#34;Alexis\u0026#34;: print(i, end=\u0026#34;-\u0026#34;) # A-l-e-x-i-s- Esta característica nos permite, por ejemplo, programar una primera aproximación a un verificador de direcciones de correo electrónico, que nos indique que una es correcta si alberga una arroba en su declaración:\nemail = False for i in \u0026#34;direccion@dominio.com\u0026#34;: if i == \u0026#34;@\u0026#34;: email = True if email == True: print(\u0026#34;El email es correcto.\u0026#34;) else: print(\u0026#34;El email no es correcto.\u0026#34;) # El email es correcto. El anterior bloque de código se puede simplificar un tanto:\nfor i in \u0026#34;direccion@dominio.com\u0026#34;: if i == \u0026#34;@\u0026#34;: email = True if email: print(\u0026#34;El email es correcto.\u0026#34;) else: print(\u0026#34;El email no es correcto.\u0026#34;) # El email es correcto. Generemos una versión interactiva de este programa:\ndef evalua_email(direcc): email = False for i in direcc: if i == \u0026#34;@\u0026#34;: email = True if email: print(\u0026#34;El email es correcto.\u0026#34;) else: print(\u0026#34;El email no es correcto.\u0026#34;) direcc = input(\u0026#34;Introduce tu dirección de correo electrónico: \u0026#34;) evalua_email(direcc) Podemos ampliar la función de verificación de correos electrónicos para que compruebe si también hay un carácter . en la cadena de texto:\ndef evalua_email(direcc): arroba = False punto = False for i in direcc: if i == \u0026#34;@\u0026#34;: arroba = True if i == \u0026#34;.\u0026#34;: punto = True if arroba and punto: print(\u0026#34;El email es correcto.\u0026#34;) else: print(\u0026#34;El email no es correcto.\u0026#34;) direcc = input(\u0026#34;Introduce tu dirección de correo electrónico: \u0026#34;) evalua_email(direcc) Veamos el uso del tipo range en combinación con el bucle for:\nfor i in range(5): print(i) # 0 # 1 # 2 # 3 # 4 Código fuente El código fuente y los posibles ficheros externos generados correspondientes a esta lección se encuentran disponibles para su consulta en la carpeta /lecciones/15/ del repositorio.\nBucles III Vídeo Notas personales Veamos algunas opciones de la función print() a la hora de imprimir el valor de variables durante la ejecución de un bucle:\nfor i in range(5): print(f\u0026#34;valor de la variable {i}\u0026#34;) # valor de la variable 0 # valor de la variable 1 # valor de la variable 2 # valor de la variable 3 # valor de la variable 4 La f que aparece antes del texto entrecomillado indica el uso de funciones f, que permiten interesantes opciones de cara a la impresión de textos en la consola. En esta ocasión, concatena la cadena de caracteres con el valor que toma la variable en cada iteración, indicada por {i}.\nEl tipo range admite el uso de argumentos adicionales:\nfor i in range(5, 10): print(f\u0026#34;valor de la variable {i}\u0026#34;) # valor de la variable 5 # valor de la variable 6 # valor de la variable 7 # valor de la variable 8 # valor de la variable 9 for i in range(5, 50, 5): print(f\u0026#34;valor de la variable {i}\u0026#34;) # valor de la …","date":1556665321,"expirydate":-62135596800,"kind":"section","lang":"es","lastmod":1556665321,"objectID":"3348dffc20c81e1eb0439c0b58e025b4","permalink":"https://imalexissaez.github.io/python-basic/bucles/","publishdate":"2019-05-01T00:02:01+01:00","relpermalink":"/python-basic/bucles/","section":"python-basic","summary":"Introducción al estudio de las estructuras de repetición en Python.","tags":null,"title":"Bucles","type":"book"},{"authors":null,"categories":null,"content":"Generadores I Vídeo Notas personales Un generador es una estructura que extrae valores de una función y los almacena, de uno en uno, en objetos iterables (que se pueden recorrer). Cada vez que un generador almacena un valor, permanece en un estado pausado hasta que se solicita el siguiente, característica que se conoce como suspensión de estado.\nLa utilidad de los generadores reside en que:\nson más eficientes que las funciones tradicionales (sobretodo en consumo de recursos y tiempo, al no tener que construir ‘’estructuras completas de datos’’); resultan muy útiles con listas de valores infinitos; y bajo determinados escenarios, será recomendable que un generador devuelva los valores de uno en uno. Su sintaxis es:\ndef nombre(): yield Creemos un programa que nos genere una lista de números pares, primero a través de una función y luego utilizando generadores:\ndef genera_pares(limite): num = 1 lista_pares = [] while num \u0026lt; limite: lista_pares.append(num * 2) num += 1 return lista_pares print(genera_pares(10)) # [2, 4, 6, 8, 10, 12, 14, 16, 18] def genera_pares(limite): num = 1 while num \u0026lt; limite: yield num * 2 num += 1 # Creo el objeto iterable que genera la función devuelve_pares = genera_pares(10) # Recorro el objeto iterable con, por ejemplo, un bucle for for i in devuelve_pares: print(i) # 2 # 4 # 6 # 8 # 10 # 12 # 14 # 16 # 18 Imaginemos ahora que nuestro objetivo es imprimir en la consola únicamente los tres primeros números pares. Con el método next() podemos solicitar valores de uno en uno al objeto iterable fruto del generador:\ndef genera_pares(limite): num = 1 while num \u0026lt; limite: yield num * 2 num += 1 # Creo el objeto iterable que genera la función devuelve_pares = genera_pares(10) print(next(devuelve_pares)) # 2 print(\u0026#34;Aquí podría ir más código.\u0026#34;) print(next(devuelve_pares)) # 4 print(\u0026#34;Aquí podría ir más código.\u0026#34;) print(next(devuelve_pares)) # 6 Código fuente El código fuente y los posibles ficheros externos generados correspondientes a esta lección se encuentran disponibles para su consulta en la carpeta /lecciones/19/ del repositorio.\nGeneradores II Vídeo Notas personales Estudiemos el uso de la instrucción yield from, cuya utilidad reside en la simplificación del código de los generadores en el caso de utilizar bucles anidados.\nPor ejemplo, elaboremos un generador que nos devuelva ciudades:\ndef devuelve_ciudades(*ciudades): for elemento in ciudades: yield elemento # Creamos objeto generador ciudades_devueltas = devuelve_ciudades(\u0026#34;Madrid\u0026#34;, \u0026#34;Barcelona\u0026#34;, \u0026#34;Bilbao\u0026#34;, \u0026#34;Valencia\u0026#34;) print(next(ciudades_devueltas)) # Madrid print(next(ciudades_devueltas)) # Barcelona Nota: en Python, cuando colocamos un * delante de un parámetro, estamos indicando que podemos pasar un número indeterminado de argumentos, que los recibirá en forma de tupla.\nImaginemos que ahora deseamos acceder a los elementos de cada una de las ciudades (sus letras en este caso):\ndef devuelve_ciudades(*ciudades): for elemento in ciudades: for sub_elemento in elemento: yield sub_elemento # Creamos objeto generador ciudades_devueltas = devuelve_ciudades(\u0026#34;Madrid\u0026#34;, \u0026#34;Barcelona\u0026#34;, \u0026#34;Bilbao\u0026#34;, \u0026#34;Valencia\u0026#34;) print(next(ciudades_devueltas)) # M print(next(ciudades_devueltas)) # a El anterior ejemplo lo podemos simplificar utilizando la instrucción yield from:\ndef devuelve_ciudades(*ciudades): for elemento in ciudades: yield from elemento # Creamos objeto generador ciudades_devueltas = devuelve_ciudades(\u0026#34;Madrid\u0026#34;, \u0026#34;Barcelona\u0026#34;, \u0026#34;Bilbao\u0026#34;, \u0026#34;Valencia\u0026#34;) print(next(ciudades_devueltas)) # M print(next(ciudades_devueltas)) # a Código fuente El código fuente y los posibles ficheros externos generados correspondientes a esta lección se encuentran disponibles para su consulta en la carpeta /lecciones/20/ del repositorio.\n","date":1557010921,"expirydate":-62135596800,"kind":"section","lang":"es","lastmod":1557010921,"objectID":"64e74ea11b6e86ff6ba1779de2d56a62","permalink":"https://imalexissaez.github.io/python-basic/generadores/","publishdate":"2019-05-05T00:02:01+01:00","relpermalink":"/python-basic/generadores/","section":"python-basic","summary":"Introducción al estudio de generadores en Python.","tags":null,"title":"Generadores","type":"book"},{"authors":null,"categories":null,"content":"Excepciones I Vídeo Notas personales Una excepción es un error que acontece durante la ejecución de un programa. La sintaxis del código es correcta, pero, en el momento de ejecutarse el algoritmo, sucede ‘‘algo inesperado’’.\nPara ilustrar la aparición de excepciones, trabajemos con el siguiente código:\ndef suma(num1, num2): return num1 + num2 def resta(num1, num2): return num1 - num2 def multiplica(num1, num2): return num1 * num2 def divide(num1, num2): return num1 / num2 op1 = (int(input(\u0026#34;Introduce el primer número: \u0026#34;))) op2 = (int(input(\u0026#34;Introduce el segundo número: \u0026#34;))) print(\u0026#34;Operaciones disponibles: \u0026#34;) print(\u0026#34;- Suma\u0026#34;) print(\u0026#34;- Resta\u0026#34;) print(\u0026#34;- Multiplica\u0026#34;) print(\u0026#34;- Divide\u0026#34;) operacion = input(\u0026#34;Introduce la operación a realizar: \u0026#34;) if operacion == \u0026#34;Suma\u0026#34;: print(suma(op1, op2)) elif operacion == \u0026#34;Resta\u0026#34;: print(resta(op1, op2)) elif operacion == \u0026#34;Multiplica\u0026#34;: print(multiplica(op1, op2)) elif operacion == \u0026#34;Divide\u0026#34;: print(divide(op1, op2)) else: print(\u0026#34;Operación no contemplada.\u0026#34;) print(\u0026#34;Operación ejecutada. Continuación de ejecución del programa \u0026#34;) Un posible ejemplo de ejecución sería:\nIntroduce el primer número: 16 Introduce el segundo número: 4 Operaciones disponibles: - Suma - Resta - Multiplica - Divide Introduce la operación a realizar: Multiplica 64 Operación ejecutada. Continuación de ejecución del programa Sin embargo, si por accidente intentamos realizar una división entre 0:\nIntroduce el primer número: 2 Introduce el segundo número: 0 Operaciones disponibles: - Suma - Resta - Multiplica - Divide Introduce la operación a realizar: Divide Traceback (most recent call last): File \u0026#34;prac21_excepciones1_1.py\u0026#34;, line 35, in \u0026lt;module\u0026gt; print(divide(op1, op2)) File \u0026#34;prac21_excepciones1_1.py\u0026#34;, line 14, in divide return num1 / num2 ZeroDivisionError: division by zero De forma que el código se detiene en el preciso instante de la llamada a la función divide() y deja de ejecutar las restantes líneas (la instrucción print() final en esta ocasión), cuya importancia puede ser vital para nosotros.\nEste tipo de situaciones se aborda mediante una captura o control de excepción. La idea es intentar realizar un bloque de código y, en el caso de no poderse llevar a cabo dicha acción, que al menos el resto de programa siga adelante.\nSi nos fijamos en la pila de llamadas que nos muestran antes de arrojar el error:\nTraceback (most recent call last): File \u0026#34;prac21_excepciones1_1.py\u0026#34;, line 35, in \u0026lt;module\u0026gt; print(divide(op1, op2)) File \u0026#34;prac21_excepciones1_1.py\u0026#34;, line 14, in divide return num1 / num2 ZeroDivisionError: division by zero Leyendo de abajo hacia arriba, la instrucción return num1 / num2, ubicada en la línea 14 del código, arroja un error de división por cero (ZeroDivisionError). Para controlar esta circunstancia, usaremos un bloque de tipo:\ntry: instrucciones except error: instrucciones Así, nuestra función divide() la podríamos reescribir como sigue:\ndef divide(num1, num2): try: return num1 / num2 except ZeroDivisionError: print(\u0026#34;No se puede dividir entre 0.\u0026#34;) return \u0026#34;Operación errónea.\u0026#34; De manera que, replicando el anterior conflictivo ejemplo:\nIntroduce el primer número: 2 Introduce el segundo número: 0 Operaciones disponibles: - Suma - Resta - Multiplica - Divide Introduce la operación a realizar: Divide No se puede dividir entre 0. Operación errónea. Operación ejecutada. Continuación de ejecución del programa Apreciamos que la última línea de código, aquel print() final, ahora efectivamente sí llega a ejecutarse.\nPor desgracia, no es el único punto conflictivo que presenta el código mostrado. Por ejemplo, ¿qué sucede si introducimos una cadena de texto en lugar de un número?\nIntroduce el primer número: 3 Introduce el segundo número: a Traceback (most recent call last): File \u0026#34;prac21_excepciones1_1.py\u0026#34;, line 22, in \u0026lt;module\u0026gt; op2 = (int(input(\u0026#34;Introduce el segundo número: \u0026#34;))) ValueError: invalid literal for int() with base 10: \u0026#39;a\u0026#39; Python arroja un error de tipo ValueError que también habríamos de controlar a través de un bloque try - except.\nCódigo fuente El código fuente y los posibles ficheros externos generados correspondientes a esta lección se encuentran disponibles para su consulta en la carpeta /lecciones/21/ del repositorio.\nExcepciones II Vídeo Notas personales Recordemos el código final de la lección anterior:\ndef suma(num1, num2): return num1 + num2 def resta(num1, num2): return num1 - num2 def multiplica(num1, num2): return num1 * num2 def divide(num1, num2): try: return num1 / num2 except ZeroDivisionError: print(\u0026#34;No se puede dividir entre 0.\u0026#34;) return \u0026#34;Operación errónea.\u0026#34; op1 = (int(input(\u0026#34;Introduce el primer número: \u0026#34;))) op2 = (int(input(\u0026#34;Introduce el segundo número: \u0026#34;))) print(\u0026#34;Operaciones disponibles: \u0026#34;) print(\u0026#34;- Suma\u0026#34;) print(\u0026#34;- Resta\u0026#34;) print(\u0026#34;- Multiplica\u0026#34;) print(\u0026#34;- Divide\u0026#34;) operacion = input(\u0026#34;Introduce la operación a realizar: \u0026#34;) if operacion == \u0026#34;Suma\u0026#34;: print(suma(op1, op2)) elif operacion == \u0026#34;Resta\u0026#34;: print(resta(op1, op2)) elif operacion == \u0026#34;Multiplica\u0026#34;: print(multiplica(op1, op2)) elif operacion …","date":1557097261,"expirydate":-62135596800,"kind":"section","lang":"es","lastmod":1557097261,"objectID":"051a7f566c80af1c8435df8880f8206c","permalink":"https://imalexissaez.github.io/python-basic/excepciones/","publishdate":"2019-05-06T00:01:01+01:00","relpermalink":"/python-basic/excepciones/","section":"python-basic","summary":"Introducción al estudio de excepciones en Python.","tags":null,"title":"Excepciones","type":"book"},{"authors":null,"categories":null,"content":"Programación OO I Vídeo Notas personales Python es un lenguaje de programación orientado a objetos (POO). Existen, principalemente, dos paradigmas de programación:\nProgramación orientada a procedimientos. Programación orientada a objetos. Programación OP Algunos ejemplos de lenguajes de programación que siguen este paradigma son: Fortan, Cobol, Basic…\nEntre sus principales desventajas encontramos:\nLas unidades de código son muy grandes en aplicaciones complejas (resultando en un número de líneas significativamente elevado). En aplicaciones complejas, el código resulta difícil de descifrar. Las aplicaciones generadas suelen ser poco reutilizables. Si existen fallos en alguna línea del código, es muy probable que el programa caiga en su totalidad. Aparición frecuente de código espaguetti (saltos en el flujo de ejecución del programa). Es difícil de depurar el código por otros programadores en caso de necesidad o error. Programación OO La programación orientada a objetos consiste en trasladar el comportamiento que tienen los objetos en la vida real al código de programación. Los objetos tienen un estado, un comportamiento (¿qué puede hacer?) y unas propiedades.\nPor ejemplo, pensemos en el objeto ‘‘coche’’:\n¿Cuál es el estado de un coche? Puede estar parado, circulando, aparcado… ¿Qué propiedades tiene un coche? Tiene un color, un peso, un tamaño… ¿Qué comportamiento tiene un coche? Puede arrancar, frenar, acelerar, girar… Objeto Coche Propiedades (atributos) Color, peso, alto, largo… Comportamiento Arrancar, frenar, girar, acelerar… Algunos ejemplos de lenguajes de programación que emplean este paradigma son: C++, Java, VisualNet…\nEntre las principales ventajas encontramos:\nLos programas están divididos en ‘’trozos’’, ‘‘partes’’, ‘‘módulos’’ o ‘‘clases’’, es decir, existe modularización. El código es muy reutilizable. Aparece en el concepto de herencia. Si existen fallos en alguna línea del código, el programa es posible que continue con su funcionamiento, debido al control de excepciones. Surge el concepto de encapsulamiento. El vocabulario más frecuente de este paradigma de programación incluye palabras o expresiones como:\nClase. Objeto. Ejemplar de clase. Instancia de clase. Ejemplarizar una clase. Instanciar una clase. Modularización. Encapsulamiento / encapsulación. Herencia. Polimorfismo. Programación OO II Vídeo Notas personales Una clase es un modelo donde se redactan las características comunes de un grupo de objetos.\nUna instancia (o ejemplar u objeto) es un miembro concreto de una clase.\nLa modularización surge cuando un programa está compuesto de diversas clases. Cada una de ellas funciona de manera independiente (facilitando así enormemente su mantenimiento y control de excepciones) y es posible su reutilización en otros programas.\nLa encapsulación nos permite proteger el funcionamiento interno de cierto bloque de código, para que no pueda accederse o alterarse desde el exterior de manera inadecuada. No obstante, todas las clases de un programa estarán ‘‘conectadas’’ entre sí de cierta manera (mediante métodos de acceso a ciertas características de cada una de las clases).\nEl mencionado acceso se llevará a cabo empleando la nomenclatura del punto. Por ejemplo, supongamos que hemos creado un objeto, de la clase coche, llamado miCoche. Para acceder a sus propiedades, utilizaremos la sintaxis:\nmiCoche.color = \u0026#39;\u0026#39;rojo\u0026#39;\u0026#39; miCoche.peso = 1500 miCoche.ancho = 2000 miCoche.alto = 900 De forma similar, el acceso al comportamiento de este objeto se realizará mediante la mencionada nomenclatura:\nmiCoche.arranca() miCoche.frena() miCoche.gira() miCoche.acelera() Programación OO III Vídeo Notas personales Traslademos a código fuente algunos de los conceptos examinados en las dos lecciones anteriores. La sintaxis para crear la clase Coche sería:\nclass Coche(): instrucciones Empecemos declarando las propiedades de la clase Coche:\nclass Coche(): largo_chasis = 250 ancho_chasis = 120 ruedas = 4 en_marcha = False Definamos comportamientos para los futuros objetos que pertenezcan a esta clase, que vienen determinados por distintos métodos:\nclass Coche(): largo_chasis = 250 ancho_chasis = 120 ruedas = 4 en_marcha = False def function(self): pass En Sublime Text 3 cuando empezamos a escribir def nos ofrece dos opciones, crear una función o un método. La principal diferencia radica en que la primera no pertenece a ninguna clase, al contrario que la segunda. Podemos, a través de los cursores, escoger en el editor la opción que apunta a un método y se nos proporciona la sintaxis de uno por defecto, como el que se muestra arriba.\nUna vez editado, el código queda:\nclass Coche(): largo_chasis = 250 ancho_chasis = 120 ruedas = 4 en_marcha = False def arrancar(self): pass Nota: self hace referencia al propio objeto perteneciente a la clase, es decir, a la instancia perteneciente a la clase.\nConstruyamos un objeto de la clase Coche y veamos cómo acceder a sus propiedades:\nmi_coche = Coche() # Instanciación de una clase …","date":1557270061,"expirydate":-62135596800,"kind":"section","lang":"es","lastmod":1557270061,"objectID":"7c7bfe8c38c6d5fdc61af1b3fd7d17bd","permalink":"https://imalexissaez.github.io/python-basic/poo/","publishdate":"2019-05-08T00:01:01+01:00","relpermalink":"/python-basic/poo/","section":"python-basic","summary":"Introducción al estudio de la programación orientada a objetos en Python.","tags":null,"title":"Programación orientada a objetos","type":"book"},{"authors":null,"categories":null,"content":"Cadenas Vídeo Notas personales Examinemos algunos de los métodos disponibles en Python a la hora de trabajar con cadenas de texto, que son objetos de tipo String. Entre los más habituales encontramos:\nupper() lower() capitalize() count() find() isdigit() isalum() isalpha() split() strip() replace() rfind() Para obtener más información sobre su utilización, conviene que visitemos esta página.\nVeamos algunos ejemplos sencillos que ilustren el uso de algunos de los anteriores métodos:\nnombre_usuario = input(\u0026#34;Introduce tu nombre de usuario: \u0026#34;) print(\u0026#34;El nombre es:\u0026#34;, nombre_usuario) print(\u0026#34;El nombre es:\u0026#34;, nombre_usuario.upper()) print(\u0026#34;El nombre es:\u0026#34;, nombre_usuario.lower()) print(\u0026#34;El nombre es:\u0026#34;, nombre_usuario.capitalize()) Introduce tu nombre de usuario: Alexis Sáez El nombre es: Alexis Sáez El nombre es: ALEXIS SÁEZ El nombre es: alexis sáez El nombre es: Alexis sáez Algunas de estas funciones resultan útiles a la hora de validar los datos que un usuario proporciona a nuestros programas:\nedad = input(\u0026#34;Introduce la edad: \u0026#34;) while not edad.isdigit(): print(\u0026#34;Por favor, introduce un valor numérico.\u0026#34;) edad = input(\u0026#34;Introduce la edad: \u0026#34;) if int(edad) \u0026lt; 18: print(\u0026#34;No puede pasar.\u0026#34;) else: print(\u0026#34;Puede pasar.\u0026#34;) Introduce la edad: 8iu9 Por favor, introduce un valor numérico. Introduce la edad: o9098 Por favor, introduce un valor numérico. Introduce la edad: 99 Puede pasar. Ejercicio: crea un programa que pida introducir una dirección de email por teclado. El programa debe imprimir en consola si la dirección de email es correcta o no en función de si esta tiene el símbolo @. Si tiene una @ la dirección será correcta. Si tiene más de una o ninguna @ la dirección será errónea. Si la @ está al comienzo de la dirección de email o al final, la dirección también será errónea\nemail = input(\u0026#34;Introduce email: \u0026#34;) if email.count(\u0026#34;@\u0026#34;) == 1 and email.count(\u0026#34;@\u0026#34;, 1, len(email) - 1) == 1: print(\u0026#34;La dirección de correo es correcta.\u0026#34;) else: print(\u0026#34;La dirección de correo es incorrecta.\u0026#34;) Código fuente El código fuente y los posibles ficheros externos generados correspondientes a esta lección se encuentran disponibles para su consulta en la carpeta /lecciones/33/ del repositorio.\nMódulos Vídeo Notas personales Un módulo es un archivo con extensión .py, .pyc (Python compilado) o fichero escrito en C para CPython, que posee su propio espacio de nombres y que puede contener variables, funciones, clases e incluso otros módulos.\nSirve para organizar y reutilizar el código (modularización y reutilización). Se genera uno creando un archivo con extensión .py (o .pyc o archivo en C) y guardándolo donde nos interese.\nVamos a crear un módulo que, siguiendo la organización del repositorio de código, se llamará modulo_matematicas.py. En su interior tecleamos las siguientes líneas:\ndef sumar(op1, op2): print(\u0026#34;El resultado de la suma es:\u0026#34;, op1 + op2) def restar(op1, op2): print(\u0026#34;El resultado de la resta es:\u0026#34;, op1 - op2) def multiplicar(op1, op2): print(\u0026#34;El resultado de la multiplicación es:\u0026#34;, op1 * op2) Ahora, generamos otro archivo, script_1.py, e importamos el anterior módulo, utilizando para ello la instrucción import:\nimport modulo_matematicas as modulo modulo.sumar(5, 7) modulo.restar(9, 5) modulo.multiplicar(4, 9) El resultado de la suma es: 12 El resultado de la resta es: 4 El resultado de la multiplicación es: 36 Como el nombre del módulo generado es un tanto extenso, he utilizado la instrucción as, que permite reescribir dicho nombre y, en mi caso, abreviarlo para que su uso sea más cómodo.\nUna alternativa a esta estrategia la encontramos en el fichero script_2.py, donde se utiliza from ... import ...:\nfrom modulo_matematicas import sumar sumar(5, 7) El resultado de la suma es: 12 En el bloque de código anterior, únicamente hemos importado la función sumar() de nuestro módulo. Podemos añadir más funciones separándolas mediante comas o importar todo el contenido del módulo utilizando el carácter *:\nfrom modulo_matematicas import sumar, restar sumar(5, 7) restar(12, 6) El resultado de la suma es: 12 El resultado de la resta es: 6 from modulo_matematicas import * sumar(5, 7) restar(12, 6) multiplicar(12, 12) El resultado de la suma es: 12 El resultado de la resta es: 6 El resultado de la multiplicación es: 144 No obstante, es peligroso actuar así, pues, en ocasiones, podemos reescribir métodos de manera accidental y arribar a resultados no deseados. Además, en aplicaciones complejas, por motivos de optimización, utilizar el carácter * provoca que se reserve demasiado espacio en memoria al tener que almacenar todo el contenido del módulo importado.\nCreemos un módulo, modulo_vehiculos.py con las clases utilizadas en la lección de herencia asociada al apartado de programación orientada a objetos:\nclass Vehiculo(): def __init__(self, marca, modelo): self.marca = marca self.modelo = modelo self.enmarcha = False self.acelera = False self.frena = False def arrancar(self): self.enmarcha = True def acelerar(self): self.acelera = True def frenar(self): …","date":1557529261,"expirydate":-62135596800,"kind":"section","lang":"es","lastmod":1557529261,"objectID":"e466542faa90cb52295fbe40465a328b","permalink":"https://imalexissaez.github.io/python-basic/modulos-y-archivos/","publishdate":"2019-05-11T00:01:01+01:00","relpermalink":"/python-basic/modulos-y-archivos/","section":"python-basic","summary":"Introducción al estudio de los métodos y la gestión de archivos en Python.","tags":null,"title":"Métodos y archivos","type":"book"},{"authors":null,"categories":null,"content":"Interfaces Gráficas I Vídeo Notas personales En esta lección, comenzamos el estudio de las interfaces gráficas en Python, analizando para ello la librería Tkinter. Las interfaces gráficas, también denominadas GUI, son intermediarios entre el programa y el usuario. Están formadas por un conjunto de gráficos como ventanas, botones, menús, casillas de verificación, etc.\nAdemás de la mencionada, existen otras librerías alternativas para trabajar con interfaces gráficas:\nWxPython PyQT PyGTK Tkinter es un ‘‘puente’’ entre Python y la librería TCL / TK.\nLa estructura de una interfaz gráfica en Python es:\nRaíz: la ventana de la aplicación propiamente dicha. Frame: estructura que agrupa diversos elementos. Widgets: elementos de la aplicación. En ocasiones, al frame también se le considera un widget más. A continuación, veamos cómo construir la raíz:\nfrom tkinter import Tk raiz = Tk() raiz.mainloop() Al ejecutar el anterior bloque de código aparece una ventana en blanco en nuestro escritorio, con algunos botones que permiten interactuar con ella a la manera que estamos habituados.\nPrimera ventana. Para que una ventana pueda mantenerse en ejecución, debe estar en una especie de ‘‘bucle infinito’’ (a la espera o escucha de eventos), estado que conseguimos a través de la función mainloop(), que, por el momento, habrá de estar siempre al final de nuestros programas.\nLa documentación para la librería Tkinter la podemos encontrar siguiendo este enlace.\nModifiquemos algunas de las características que esta ventana posee por defecto:\nfrom tkinter import Tk raiz = Tk() raiz.title(\u0026#34;Ventana de pruebas\u0026#34;) raiz.resizable(width=False, height=False) # raiz.resizable(0, 0) raiz.iconbitmap(\u0026#34;icon.ico\u0026#34;) raiz.geometry(\u0026#34;450x300\u0026#34;) raiz.config(bg=\u0026#34;lightblue\u0026#34;) raiz.mainloop() Notas:\ntitle() nos permite cambiar el título de la ventana generada. resizable() acepta dos valores booleanos para indicar si permitimos que se modifique la anchura o la altura de la ventana. Según los argumentos escogidos, incluso queda deshabilitado el botón de maximizar ventana. iconbitmap() nos da la posibilidad de cambiar el icono de la ventana generada, que, por defecto, es una especie de pluma. Para ello, hemos de almacenar en el directorio de la aplicación (o tener bien localizada su ruta) un archivo de extensión .ico (buscar en Google ‘‘conversor .ico’’ para acceder a aplicaciones online que nos generen este tipo de ficheros). geometry() configura el ancho y el alto de la ventana. config(), entre otras acciones, nos permite cambiar el color del fondo. Modificando propiedades de la ventana. Hasta el momento, las ventanas requieren de la consola de Python para su funcionamiento. Si queremos que este sea independiente de ella, hemos de modificar la extensión de la aplicación de .py a .pyw.\nCódigo fuente El código fuente y los posibles ficheros externos generados correspondientes a esta lección se encuentran disponibles para su consulta en la carpeta /lecciones/42/ del repositorio.\nInterfaces Gráficas II Vídeo Notas personales Después de introducir, en la lección anterior, la raíz de una interfaz gráfica, en esta abordaremos la construcción y uso de frames. Comencemos recuperando el código fuente de la ‘‘aplicación’’ que generamos con anterioridad:\nfrom tkinter import Tk raiz = Tk() raiz.title(\u0026#34;Ventana de pruebas\u0026#34;) raiz.resizable(width=False, height=False) # raiz.resizable(0, 0) raiz.iconbitmap(\u0026#34;icon.ico\u0026#34;) raiz.geometry(\u0026#34;450x300\u0026#34;) raiz.config(bg=\u0026#34;lightblue\u0026#34;) raiz.mainloop() A continuación, crearemos un frame y lo empaquetaremos (ubicaremos) dentro de la raíz disponible a través del método pack(). Además, prescindiremos de la instrucción raiz.geometry(), para así estar en condiciones de configurar el tamaño del frame (la raíz se adaptará automáticamente al tamaño de sus elementos internos):\nfrom tkinter import Tk, Frame raiz = Tk() raiz.title(\u0026#34;Ventana de pruebas\u0026#34;) raiz.resizable(width=True, height=True) raiz.iconbitmap(\u0026#34;icon.ico\u0026#34;) raiz.config(bg=\u0026#34;lightblue\u0026#34;) frame = Frame() frame.pack() frame.config(bg=\u0026#34;tomato\u0026#34;, width=\u0026#34;450\u0026#34;, height=\u0026#34;300\u0026#34;) raiz.mainloop() A primera vista, al ejecutar el aterior bloque de código, da la sensación de que hemos perdido el color de fondo declarado para la aplicación (lightblue). No obstante, como ahora permitimos manipular el tamaño de la ventana (mediante la instrucción raiz.resizable(width=True, height=True)), al agrandarla comprobamos que todo funciona correctamente.\nLos dos colores de fondo siguen disponibles. Nota: en esta página podemos encontrar un buen recurso para acceder a una paleta de colores declarados por nombres y disponibles para la librería tkinter.\nPor otro lado, observamos que el frame tiene un tamaño fijo, por mucho que manipulemos el tamaño de la ventana, las dimensiones del frame no se alteran, así como su posición, que permanece centrada en la parte superior de la ventana de la aplicación. Este comportamiento es el dado por defecto, que podemos configurar de manera diferente, si así lo deseamos, a través del método …","date":1558306861,"expirydate":-62135596800,"kind":"section","lang":"es","lastmod":1558306861,"objectID":"c830c96cfa2624342d7f46b89c8ddf3b","permalink":"https://imalexissaez.github.io/python-basic/interfaces/","publishdate":"2019-05-20T00:01:01+01:00","relpermalink":"/python-basic/interfaces/","section":"python-basic","summary":"Introducción al estudio de las interfaces en Python.","tags":null,"title":"Interfaces gráficas","type":"book"},{"authors":null,"categories":null,"content":"Problemas resueltos Problema 1 Demuestra que, para cada $n\\in\\mathbb{N}$, con $n\\geq 1$,\n$$ 1 + 2 + \\cdots + n = \\dfrac{n(n+1)}{2}. $$\nSolución: generalmente, cuando abordamos problemas en los que tenemos que demostrar que cierta fórmula o afirmación se satisface, para un conjunto de índices de cardinal infinito (en esta ocasión hablaríamos del conjunto $n\\geq1$, con $n\\in\\mathbb{N}$), es recomendable que llevemos a cabo una primera aproximación a su resolución empleando el principio de inducción matemática.\nAsí pues, vamos a considerar la propiedad, que denotaremos por $P(n)$, dada en el enunciado del problema,\n$$ 1+2+\\cdots+n = \\dfrac{n(n+1)}{2}. $$\nPor lo que respecta al caso base, $P(1)$, rápidamente comprobamos que se verifica de manera trivial, ya que\n$$ 1 = \\dfrac{1\\cdot2}{2} = 1. $$\nAbordemos ahora el paso inductivo, para lo cual hemos de mostrar que si $P(n)$ se cumple, para un $n\\geq1$, entonces asimismo se satisface $P(n+1)$, cuya expresión es\n$$ 1+2+\\cdots+n+(n+1)=\\dfrac{(n+1)(n+2)}{2}. $$\nLa clave en este tipo de situaciones consiste en encontrar una manera acertada de manipular la conocida como hipótesis de inducción, $P(n)$, que nos ayude a verificar el resultado que estamos buscando comprobar.\nPor fortuna para nosotros, si nos fijamos en el miembro izquierdo de la ecuación de $P(n+1)$, apreciamos que directamente aparece la suma de los $n$ primeros números naturales, cuyo valor, por la hipótesis de inducción, es\n$$ \\dfrac{n(n+1)}{2}. $$\nEste hecho nos permite afirmar que\n$$ 1+2+\\cdots+n+(n+1) = \\dfrac{n(n+1)}{2} + (n+1). $$\nAhora, sumando algebraicamente ambos términos,\n$$ \\dfrac{n(n+1)}{2} + (n+1)= \\dfrac{n(n+1) + 2(n+1)}{2}= \\dfrac{(n+1)(n+2)}{2}, $$\nes decir, hemos llegado a mostrar que\n$$ 1+2+\\cdots+n+(n+1)=\\dfrac{(n+1)(n+2)}{2}, $$\ncompletando así el paso inductivo.\nAsí pues, por el principio de inducción matemática, podemos concluir que $P(n)$ se verifica para cada $n\\in\\mathbb{N}$, con $n\\geq 1$.\nProblema 2 Demuestra que, para cada $n\\in\\mathbb{N}$, con $n\\geq 1$,\n$$ \\sum_{k=1}^{n}{k^2} = \\dfrac{n(n+1)(2n+1)}{6}. $$\nSolución: ante nosotros se plantea la tarea de demostrar una propiedad (la identidad sugerida arriba), que supuestamente se satisface para una sucesión de índices enteros que conforman un conjunto cuyo cardinal es infinito ($n\\in\\mathbb{N}$, con $n\\geq 1$, en este caso). Entre las diferentes estrategias que tenemos a nuestra disposición para abordar esta empresa, el principio de inducción matemática quizá sea el instrumento más aconsejable para una primera aproximación a la resolución del problema.\nAsí pues, la manera en la que ahora procederemos será ciertamente similar a la seguida en el problema 1. Para empezar, a simple vista, podemos apreciar rápidamente que la igualdad se satisface de forma trivial para $n=1$, puesto que\n$$ 1 = \\sum_{k=1}^{1}{k^2} = \\dfrac{1\\cdot2\\cdot3}{6} = 1. $$\nActo seguido, asumimos verdadera la identidad para un cierto $n\\in\\mathbb{N}$, con $n\\geq 1$, es decir, que efectivamente se verifica que\n$$ \\sum_{k=1}^{n}{k^2} = \\dfrac{n(n+1)(2n+1)}{6}, $$\ny estudiamos si se satisface asimismo para $n+1$. Así pues, ahora comprobaremos si se cumple la igualdad\n$$ \\sum_{k=1}^{n+1}{k^2} = \\dfrac{(n+1)(n+2)(2n+3)}{6}. $$\nPara ello, apliquemos la hipótesis de inducción y llevemos a cabo algunas operaciones algebraicas elementales, de manera que\n$$ \\begin{aligned} \\sum_{k=1}^{n+1}{k^2} \u0026amp;= (n+1)^2 + \\sum_{k=1}^{n}{k^2}\\\\ \u0026amp; = (n+1)^2 + \\dfrac{n(n+1)(2n+1)}{6}\\\\ \u0026amp; = \\dfrac{6(n+1)^2 + n(n+1)(2n+1)}{6}\\\\ \u0026amp; = \\dfrac{(n+1)(6(n+1) + n(2n+1))}{6}\\\\ \u0026amp; = \\dfrac{(n+1)(2n^2+7n+6)}{6}\\\\ \u0026amp; = \\dfrac{(n+1)(n+2)(2n+3)}{6}, \\end{aligned} $$\ny, por tanto, la identidad se verifica para $n+1$. El principio de inducción matemática nos permite concluir que es cierta para cada $n\\in\\mathbb{N}$.\nProblema 3 Demuestra que, para cada $n\\in\\mathbb{N}$, con $n\\geq 1$,\n$$ 1^3 + 2^3 + \\cdots + n^3=(1+2+3+\\cdots+n)^2. $$\nSolución: para empezar, y de cara a aliviar ligeramente la escritura en un futuro, podemos plantear de manera más compacta la identidad dada en el enunciado del presente problema como sigue\n$$ 1^3 + 2^3 + \\cdots + n^3 = \\sum_{k=1}^{n}{k^3} = \\left(\\sum_{k=1}^{n}{k}\\right)^2 = (1+2+3+\\cdots+n)^2. $$\nEn esta ocasión, si optamos por una aproximación similar a la seguida en los problemas anteriores, la demostración puede volverse un tanto tediosa debido a los cálculos implicados. Es por ello que, utilizando el resultado probado en el problema 1, la igualdad que buscamos verificar aquí sería equivalente a\n$$ \\sum_{k=1}^{n}{k^3} = \\left(\\sum_{k=1}^{n}{k}\\right)^2 = \\left(\\dfrac{n(n+1)}{2}\\right)^2 = \\dfrac{n^2(n+1)^2}{4}. $$\nUna vez alcanzada una expresión más manejable para la identidad planteada, empleamos el principio de inducción matemática para probarla. Rápidamente comprobamos que se verifica de manera trivial para $n=1$, puesto que\n$$ 1 = 1^3 = \\dfrac{1^2\\cdot2^2}{4} = \\dfrac{4}{4} = 1. $$\nAhora, suponemos cierta la identidad para un número dado $n\\in\\mathbb{N}$, con $n\\geq …","date":1624057201,"expirydate":-62135596800,"kind":"section","lang":"es","lastmod":1624057201,"objectID":"ce7a090fddb52ed55275286bc8f113af","permalink":"https://imalexissaez.github.io/problemas-oposicion/induccion/","publishdate":"2021-06-19T00:00:01+01:00","relpermalink":"/problemas-oposicion/induccion/","section":"problemas-oposicion","summary":"Problemas matemáticos de inducción para la preparación de oposiciones al cuerpo de profesores de Enseñanza Secundaria, en la especialidad de matemáticas.","tags":null,"title":"Inducción","type":"book"},{"authors":null,"categories":null,"content":"En aquesta pàgina compilaré recursos útils a l’hora d’estudiar valencià per superar les proves que avaluen el nivell C1 del Marc Europeu Comú de Referència (MECR d’ara endavant) per a les llengües.\n1. Cursos 1.1. Punt per Punt En la següent graella trobem els enllaços a una excel·lent col·lecció de fascicles relacionats amb el valencià i agrupats segons els diferents nivells que proposa el MECR. En particular, els exercicis proposats per al nivell C1 ens ajudaran a preparar la corresponent prova, ja que són representatius d’aquesta.\nNivell Fascicles A2 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18. B1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18. B2 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18. C1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18. C2 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18. 1.2. Universitat Politècnica de València La Universitat Politècnica de València (UPV d’ara endavant) ha elaborat un parell de MOOC (Massive Online Open Course) gratuïts per als estudiants dels nivells B2, C1 i C2. Els podem trobar fàcilment en el seu portal en línia UPV[X]:\nPreparació nivell B2 (Intermedi) de Valencià. Preparació nivell C1 (Suficiència) de Valencià. Preparació nivell C2 (Superior) de Valencià. Hem d’anar amb cura, perquè no cobreixen la totalitat del temari, sinó aquelles parts d’aquest que resulten més complicades als alumnes.\nD’altra banda, si únicament estem interessats en els recursos audiovisuals dels esmentats MOOC, la majoria els trobem en el portal UPV[Media], agrupats sota l’etiqueta Aprèn valencià.\n2. Diccionaris i gramàtiques L’Acadèmia Valenciana de la Llengua (AVL d’ara endavant) comparteix en el seu portal els documents normatius que han de ser la nostra referència a l’hora d’estudiar valencià:\nDiccionari Normatiu Valencià (DNV). Diccionari ortogràfic i de pronunciació del valencià (DOPV). Gramàtica normativa valenciana (GNV). Gramàtica valenciana bàsica (GVB). A més a més, ens poden resultar d’utilitat els següents documents publicats per l’AVL:\nLa normativa ortogràfica del valencià. L’estàndard oral del valencià. Els gentilicis valencians. Altres recursos que ens ajudaran són:\nDiccionari de la llengua catalana (DIEC2). Diccionari de sinònims. Diccionari català-valencià-balear. Gramàtica essencial de la llengua catalana. Lèxic Obert Flexionat de Català: pàgina web que recull diversos diccionaris i respon a preguntes del tipus: com es conjuga el verb dirigir? Quin és el plural de llapis? Quin és el gentilici per a Àustria? Amb quines síl·labes es divideix la paraula abstrusament? Quantes síl·labes té intuïció? Quin substantiu s’utilitza per denominar l’acció del verb aclucar? De quina llengua prové el manlleu afrikaans? Optimot: cercador d’informació lingüística que ajuda a resoldre dubtes sobre la llengua catalana. Ortografia catalana. 3. Lèxics L’AVL té en la seua web oficial una sèrie de fitxes de vocabulari dels més diversos assumptes:\nd’activitats recreatives i a l’aire lliure, de l’astronomia, de l’automòbil, de la casa, de la carnisseria, de la cultura religiosa, de la ferreteria, de la imatge personal, de la música, de la religió catòlica, de la roba i complements, de la salut i la sanitat, de la xarcuteria, de les fruites i verdures, de les malalties, del carrer, del cos humà, del forn i de les pastisseries, del futbol, del joc de pilota, del peix i marisc, del restaurant, dels esports, dels instruments musicals i dels viatges. D’altra banda, en el portal gencat trobem:\n50 termes del món digital, 50 termes del món de l’empresa. 4. Jocs educatius Aquests recursos són útils per a reforçar l’ortografia, la gramàtica i el vocabulari:\nEnjogassa’t: t’esperen més de tres mil reptes i moltes sorpreses per a fornir el vocabulari, regar l’ortografia i enfortir la gramàtica. El valencià estarà més viu gràcies a tu i sentiràs l’energia de la teua llengua. Jugallengua: és una aplicació que ajuda a aprendre valencià de manera lúdica, ja que s’ha dissenyat com un joc de preguntes i respostes sobre llengua. Pràctic 2: és un programa que integra un conjunt d’activitats d’autoaprenentatge, de manera que l’usuari, gràcies al sistema d’autocorrecció, pot comprovar immediatament quin és el grau de coneixements de valencià que té assolit i a quins aspectes de la gramàtica ha de dedicar més esforços per a millorar els seus coneixements lingüístics. 5. Convocatòries d’exàmens En l’actualitat, hi ha tres entitats que acrediten els coneixements de valencià: la Comissió Interuniversitària d’Estandardització d’Acreditacions de Coneixements de Valencià (CIEACOVA), la Junta Qualificadora de Coneixements de Valencià (JQCV) i l’Escola Oficial d’Idiomes (EOI).\nLa inscripció per a les proves es fa amb mesos d’antelació, per la qual cosa hem de visitar amb freqüència les webs oficials de les esmentades entitats. Els exàmens i les corresponents preinscripcions tenen lloc, aproximadament, en:\nMes Entitat que acredita Preinscripció …","date":1563750001,"expirydate":-62135596800,"kind":"section","lang":"es","lastmod":1563750001,"objectID":"cddc06d8caa0cdc93a8a863db251d5de","permalink":"https://imalexissaez.github.io/valenciano/valenciano-c1/","publishdate":"2019-07-22T00:00:01+01:00","relpermalink":"/valenciano/valenciano-c1/","section":"valenciano","summary":"Recursos útils a l’hora d’estudiar valencià per superar les proves que avaluen el nivell C1 del Marc Europeu Comú de Referència (MECR d’ara endavant) per a les llengües.","tags":null,"title":"Valencià (nivell C1)","type":"book"},{"authors":null,"categories":null,"content":"Bases de datos I Vídeo Notas personales En esta lección, cambiamos de tercio y abordamos el tratamiento de las bases de datos (BBDD) en Python. Estudiaremos cómo crearlas, conectar con ellas e insertar registros en su interior.\nPython es capaz de gestionar la información que se encuentra almacenada en diferentes gestores de bases de datos, como, por ejemplo:\nSQL Server Oracle MySQL SQLite PostgreSQL En este curso trabajaremos, principalmente, con MySQL y SQLite debido a su popularidad. No obstante, ello requiere que tengamos unos mínimos conocimientos del lenguaje utilizado para realizar consultas en bases de datos: SQL (Structured Query Language).\nPor lo que respecta a SQLite:\nEs un sistema de gestión de BBDD relacional. Está escrito en C, siendo de código abierto. La BBDD forma parte integral del programa y se guarda como un único fichero en host. Así, entre sus ventajas, encontramos que ocupa muy poco espacio en disco y memoria, es muy eficiente y rápido, es multiplataforma, no requiere configuración o administración y es de dominio público, esto es, sin costo alguno añadido. Sin embargo, también posee asociadas una serie de desventajas, como que no admite cláusulas anidadas (de tipo where), no existen usuarios (no permite acceso simultáneo por parte de varios usuarios) y carece de clave foránea cuando se crea en modo consola.\nA continuación, los pasos a seguir para conectar con una BBDD son:\nAbrir (o crear) una conexión. Crear un puntero (o cursor). Ejecutar una consulta (query) SQL. Manejar los resultados de la consulta. Insertar, leer, actualizar, borrar (Create, Read, Update, Delete). Cerrar puntero. Cerrar conexión. En Python, comenzamos importando la librería sqlite3 para luego crear la conexión con la BBDD. La primera vez que realizamos este proceso, al no haber disponible ninguna, procederemos a su creación.\nimport sqlite3 mi_conexion = sqlite3.connect(\u0026#34;base-de-datos\u0026#34;) mi_conexion.close() Al ejecutar el anterior bloque de código, aparece en el correspondiente directorio una BBDD de datos vacía, de nombre base-de-datos. Veamos, acto seguido, cómo crear nuestra primera tabla:\nimport sqlite3 mi_conexion = sqlite3.connect(\u0026#34;base-de-datos\u0026#34;) mi_cursor = mi_conexion.cursor() mi_cursor.execute(\u0026#34;CREATE TABLE PRODUCTOS (NOMBRE_ARTICULO VARCHAR(50), PRECIO INTEGER, SECCION VARCHAR(20))\u0026#34;) mi_conexion.close() Tras crear el puntero o cursor, mi_cursor, lanzamos, a través de la función execute(), el comando SQL correspondiente a la creación de una tabla que poseerá tres columnas. Si ejecutamos el anterior bloque de código, observaremos que el tamaño del fichero base-de-datos se incrementa y deja de estar vacío.\nNota: podemos investigar qué contiene el archivo base-de-datos, de manera visual, mediante la herramienta DB Browser for SQLite.\nA continuación, analicemos cómo insertar información en la tabla que acabamos de crear. Para ello, comentamos la anterior línea de código, que precisamente generaba la tabla (porque ya existe y entonces Python arrojaría un error llegado a ese momento), y ejecutamos, a través del cursor, la instrucción de SQL apropiada. Tras ello, verificamos que deseamos realizar el cambio en la tabla, utiliando el método commit() asociado a la conexión:\nimport sqlite3 mi_conexion = sqlite3.connect(\u0026#34;base-de-datos\u0026#34;) mi_cursor = mi_conexion.cursor() mi_cursor.execute(\u0026#34;INSERT INTO PRODUCTOS VALUES(\u0026#39;BALÓN\u0026#39;, 15, \u0026#39;DEPORTES\u0026#39;)\u0026#34;) mi_conexion.commit() mi_conexion.close() Nota técnica: cuando trabajamos con cadenas de caracteres que poseen comillas anidadas, hemos de alternar los simbolos \u0026#39; y \u0026#34;.\nCódigo fuente El código fuente y los posibles ficheros externos generados correspondientes a esta lección se encuentran disponibles para su consulta en la carpeta /lecciones/55/ del repositorio.\nBases de datos II Vídeo Notas personales En esta lección, aprenderemos cómo insertar varios registros simultáneamente en nuestra base de datos (BBDD), así como después estudiaremos cómo recuperar información de la BBDD.\nEn primer lugar, importemos la librería sqlite3 y construyamos, tanto la conexión a la BBDD, como un cursor. Con tal objetivo en mente, tecleamos:\nimport sqlite3 mi_conexion = sqlite3.connect(\u0026#34;base-de-datos\u0026#34;) mi_cursor = mi_conexion.cursor() A continuación, mediante una lista de tuplas, establecemos los productos que nos interese insertar en la BBDD:\nproductos = [(\u0026#34;Camiseta\u0026#34;, 10, \u0026#34;Deportes\u0026#34;), (\u0026#34;Jarrón\u0026#34;, 90, \u0026#34;Cerámica\u0026#34;), (\u0026#34;Camión\u0026#34;, 20, \u0026#34;Juguetería\u0026#34;)] y con el método executemany() ejecutamos la instrucción SQL adecuada:\nmi_cursor.executemany(\u0026#34;INSERT INTO PRODUCTOS VALUES (?, ?, ?)\u0026#34;, productos) Nota técnica: en las instrucciones de SQL parametrizadas, hemos de insertar tantos interrogantes, ?, como campos posee cada registro.\nFinalmente, confirmamos los cambios y cerramos la conexión abierta:\nmi_conexion.commit() mi_conexion.close() Acto seguido, veamos cómo accedemos a la información registrada en la BBDD. Para ello, simplemente hemos de ejecutar, desde el cursor, una instrucción de SQL de tipo SELECT, para …","date":1559084461,"expirydate":-62135596800,"kind":"section","lang":"es","lastmod":1559084461,"objectID":"b233d951cf3928b6a8a8dfea77a7a248","permalink":"https://imalexissaez.github.io/python-basic/bases-de-datos/","publishdate":"2019-05-29T00:01:01+01:00","relpermalink":"/python-basic/bases-de-datos/","section":"python-basic","summary":"Introducción al estudio de las bases de datos en Python.","tags":null,"title":"Bases de datos","type":"book"},{"authors":null,"categories":null,"content":"Práctica guiada I Vídeo Notas personales En esta lección, y con el objetivo de reforzar los contenidos vistos hasta la fecha, comenzaremos a esbozar una aplicación gráfica de tipo CRUD. Mediante ella, conectaremos con una base de datos (BBDD) y podremos realizar las operaciones básicas: Create, Read, Update y Delete.\nEn el vídeo se explican los diferentes elementos y funcionalidades que caracterizan a la aplicación propuesta, por si queremos lanzarnos a su elaboración de antemano. No obstante, se procederá a su implementación en posteriores lecciones.\nPráctica guiada II Vídeo Notas personales En esta lección, comenzaremos a esbozar la interfaz gráfica de nuestra aplicación CRUD. Para ello, empezamos tecleando:\nfrom tkinter import Tk # Raíz de la aplicación root = Tk() root.title(\u0026#34;Aplicación CRUD\u0026#34;) root.iconbitmap(\u0026#34;icon.ico\u0026#34;) # Ejecución de la aplicación root.mainloop() A continuación, generamos la barra de menú superior:\n# Menú superior de la aplicación barra_menu = Menu(root) root.config(menu=barra_menu) bbdd_menu = Menu(barra_menu, tearoff=0) bbdd_menu.add_command(label=\u0026#34;Conectar\u0026#34;) bbdd_menu.add_separator() bbdd_menu.add_command(label=\u0026#34;Salir\u0026#34;) borrar_menu = Menu(barra_menu, tearoff=0) borrar_menu.add_command(label=\u0026#34;Borrar campos\u0026#34;) crud_menu = Menu(barra_menu, tearoff=0) crud_menu.add_command(label=\u0026#34;Crear\u0026#34;) crud_menu.add_command(label=\u0026#34;Leer\u0026#34;) crud_menu.add_command(label=\u0026#34;Actualizar\u0026#34;) crud_menu.add_command(label=\u0026#34;Borrar\u0026#34;) help_menu = Menu(barra_menu, tearoff=0) help_menu.add_command(label=\u0026#34;Licencia\u0026#34;) help_menu.add_separator() help_menu.add_command(label=\u0026#34;Acerca de...\u0026#34;) barra_menu.add_cascade(label=\u0026#34;BBDD\u0026#34;, menu=bbdd_menu) barra_menu.add_cascade(label=\u0026#34;Borrar\u0026#34;, menu=borrar_menu) barra_menu.add_cascade(label=\u0026#34;CRUD\u0026#34;, menu=crud_menu) barra_menu.add_cascade(label=\u0026#34;Ayuda\u0026#34;, menu=help_menu) Por lo que respecta al cuerpo de la aplicación, lo dividiremos en dos frames: uno superior para organizar los campos de introducción de datos y otro inferior para distribuir los cuatro botones que nos permitirán llevar a cabo acciones de tipo CRUD.\nAsí pues, si, por ejemplo, optamos por construir los diferentes campos de entrada que poseerá la aplicación, el bloque de código a escribir será:\n# Frame superior campos_frame = Frame(root) campos_frame.pack() id_entry = Entry(campos_frame) id_entry.grid(row=0, column=1, padx=2, pady=2) name_entry = Entry(campos_frame) name_entry.grid(row=1, column=1, padx=2, pady=2) lastname_entry = Entry(campos_frame) lastname_entry.grid(row=2, column=1, padx=2, pady=2) address_entry = Entry(campos_frame) address_entry.grid(row=3, column=1, padx=2, pady=2) password_entry = Entry(campos_frame) password_entry.grid(row=4, column=1, padx=2, pady=2) password_entry.config(show=\u0026#34;*\u0026#34;) comment_text = Text(campos_frame, width=15, height=5) comment_text.grid(row=5, column=1, padx=2, pady=2) comment_text_scrollvert = Scrollbar(campos_frame, command=comment_text.yview) comment_text_scrollvert.grid(row=5, column=2, sticky=\u0026#34;nsew\u0026#34;) comment_text.config(yscrollcommand=comment_text_scrollvert) Código fuente El código fuente y los posibles ficheros externos generados correspondientes a esta lección se encuentran disponibles para su consulta en la carpeta /lecciones/60/ del repositorio.\nPráctica guiada III Vídeo Notas personales En esta lección, una vez declarados los campos de introducción de datos en la anterior, nos centraremos en ubicar las etiquetas en la aplicación:\nid_label = Label(campos_frame, text=\u0026#34;ID:\u0026#34;) id_label.grid(row=0, column=0, sticky=\u0026#34;e\u0026#34;, padx=2, pady=2) name_label = Label(campos_frame, text=\u0026#34;Nombre:\u0026#34;) name_label.grid(row=1, column=0, sticky=\u0026#34;e\u0026#34;, padx=2, pady=2) lastname_label = Label(campos_frame, text=\u0026#34;Apellido:\u0026#34;) lastname_label.grid(row=2, column=0, sticky=\u0026#34;e\u0026#34;, padx=2, pady=2) address_label = Label(campos_frame, text=\u0026#34;Dirección:\u0026#34;) address_label.grid(row=3, column=0, sticky=\u0026#34;e\u0026#34;, padx=2, pady=2) password_label = Label(campos_frame, text=\u0026#34;Contraseña:\u0026#34;) password_label.grid(row=4, column=0, sticky=\u0026#34;e\u0026#34;, padx=2, pady=2) comment_label = Label(campos_frame, text=\u0026#34;Comentarios:\u0026#34;) comment_label.grid(row=5, column=0, sticky=\u0026#34;ne\u0026#34;, padx=2, pady=2) A continuación, ocupémonos de construir un frame en la parte inferior del ya disponible y disponer cuatro botones:\n# Frame inferior botones_frame = Frame(root) botones_frame.pack(expand=True) crear_button = Button(botones_frame, text=\u0026#34;Create\u0026#34;) crear_button.grid(row=0, column=0, sticky=\u0026#34;e\u0026#34;, padx=2, pady=2) read_button = Button(botones_frame, text=\u0026#34;Read\u0026#34;) read_button.grid(row=0, column=1, sticky=\u0026#34;e\u0026#34;, padx=2, pady=2) update_button = Button(botones_frame, text=\u0026#34;Update\u0026#34;) update_button.grid(row=0, column=2, sticky=\u0026#34;e\u0026#34;, padx=2, pady=2) delete_button = Button(botones_frame, text=\u0026#34;Delete\u0026#34;) delete_button.grid(row=0, column=3, sticky=\u0026#34;e\u0026#34;, padx=2, pady=2) Así, ya únicamente nos resta programar la funcionalidad de la aplicación, tanto para el menú, como para los botones recién creados.\nCódigo fuente El código fuente y los posibles ficheros externos generados correspondientes a esta …","date":1559343661,"expirydate":-62135596800,"kind":"section","lang":"es","lastmod":1559343661,"objectID":"eebc9a06c08e5b2789cb4d90ab80cd64","permalink":"https://imalexissaez.github.io/python-basic/practica/","publishdate":"2019-06-01T00:01:01+01:00","relpermalink":"/python-basic/practica/","section":"python-basic","summary":"Práctica guiada en Python.","tags":null,"title":"Práctica guiada","type":"book"},{"authors":null,"categories":null,"content":"Funciones lambda Vídeo Notas personales En esta lección, estudiaremos las funciones lambda. Una función lambda es una función anónima, y se utilizan en Python a la hora de programar para abreviar, ya que aligera la sintaxis del código. Además, no ocupan lugar en el espacio de nombres asociado a las funciones de una aplicación.\nCualquier tarea que llevemos a cabo con una función lambda se puede desarrollar mediante una función normal, pero no así a la inversa (sobre todo cuando su lógica es compleja).\nPor ejemplo, para calcular el área de un triángulo, podemos construir la función:\ndef area_triangulo(b, h): return b * h / 2 for b in range(1, 10, 5): for h in range(1, 10, 5): print( f\u0026#34;El área del triángulo de base {b} y altura {h} es {area_triangulo(b, h)}.\u0026#34; ) El área del triángulo de base 1 y altura 1 es 0.5. El área del triángulo de base 1 y altura 6 es 3.0. El área del triángulo de base 6 y altura 1 es 3.0. El área del triángulo de base 6 y altura 6 es 18.0. No obstante, una función tan sencilla puede ser abreviada como una función lambda.\narea_triangulo = lambda b, h: b * h / 2 for b in range(1, 10, 5): for h in range(1, 10, 5): print( f\u0026#34;El área del triángulo de base {b} y altura {h} es {area_triangulo(b, h)}.\u0026#34; ) El área del triángulo de base 1 y altura 1 es 0.5. El área del triángulo de base 1 y altura 6 es 3.0. El área del triángulo de base 6 y altura 1 es 3.0. El área del triángulo de base 6 y altura 6 es 18.0. Nota: las funciones lambda, generalmente, no se asignan a variables. En tales casos, conviene hacer uso de la instrucción def y definir una función tal y como estamos habituados.\nUsadas ‘‘al vuelo’’, su sintaxis queda como sigue:\nprint(\u0026#34;El cubo de 3 es \u0026#34; + str((lambda x:x**3) (3))) El cubo de 3 es 27 Código fuente El código fuente y los posibles ficheros externos generados correspondientes a esta lección se encuentran disponibles para su consulta en la carpeta /lecciones/66/ del repositorio.\nFilter Vídeo Notas personales En esta lección, estudiaremos la función filter(), que forma parte de un conjunto de funciones conocidas como ‘‘de orden superior’’ y nos permiten utilizar en Python el paradigma de programación funcional. La mencionada función verifica que los elementos de una secuencia cumplen una condición, devolviendo un iterador compuesto por aquellos que la satisfacen.\nPor ejemplo, podemos construir un programa que detecte qué números son pares y cuáles no lo son, devolviéndonos una lista compuesta por los que verifiquen dicha condición:\ndef numero_par(num): if num % 2 == 0: return True numeros = [17, 24, 7, 39, 8, 51, 92] print(filter(numero_par, numeros)) # objeto iterable print(list(filter(numero_par, numeros))) \u0026lt;filter object at 0x0000029E5BA262B0\u0026gt; [24, 8, 92] La función numero_par() la podemos abreviar un tanto como sigue:\ndef numero_par(num): return num % 2 == 0 Es más, como es tan sencilla, incluso podemos prescindir de ella utilizando una función lambda:\nnumeros = [17, 24, 7, 39, 8, 51, 92] print(list(filter(lambda x: x % 2 == 0, numeros))) [24, 8, 92] Habitualmente, utilizaremos la función filter() para filtrar objetos. Por ejemplo, supongamos que tenemos varias instancias de la clase Empleado y deseamos filtrarlas por el valor de uno de sus atributos:\nclass Empleado: def __init__(self, nombre, cargo, salario): self.nombre = nombre self.cargo = cargo self.salario = salario def __str__(self): return f\u0026#34;{self.nombre} trabaja como {self.cargo} y cobra {self.salario} €.\u0026#34; lista_empleados = [ Empleado(\u0026#34;Juan\u0026#34;, \u0026#34;Director\u0026#34;, 75000), Empleado(\u0026#34;Ana\u0026#34;, \u0026#34;Presidenta\u0026#34;, 85000), Empleado(\u0026#34;Antonio\u0026#34;, \u0026#34;Administrativo\u0026#34;, 25000), Empleado(\u0026#34;Sara\u0026#34;, \u0026#34;Secretaria\u0026#34;, 27000), Empleado(\u0026#34;Mario\u0026#34;, \u0026#34;Botones\u0026#34;, 21000) ] salarios_altos = filter(lambda e: e.salario \u0026gt; 50000, lista_empleados) [print(s.__str__()) for s in salarios_altos] Juan trabaja como Director y cobra 75000 €. Ana trabaja como Presidenta y cobra 85000 €. A modo de curiosidad, ya que me he avanzado y he utilizado comprensiones de listas (ver la última línea del bloque de código anterior), resulta que mediante ellas, en este ejemplo concreto, no es necesario recurrir al uso de la función filter():\nclass Empleado: def __init__(self, nombre, cargo, salario): self.nombre = nombre self.cargo = cargo self.salario = salario def __str__(self): return f\u0026#34;{self.nombre} trabaja como {self.cargo} y cobra {self.salario} €.\u0026#34; lista_empleados = [ Empleado(\u0026#34;Juan\u0026#34;, \u0026#34;Director\u0026#34;, 75000), Empleado(\u0026#34;Ana\u0026#34;, \u0026#34;Presidenta\u0026#34;, 85000), Empleado(\u0026#34;Antonio\u0026#34;, \u0026#34;Administrativo\u0026#34;, 25000), Empleado(\u0026#34;Sara\u0026#34;, \u0026#34;Secretaria\u0026#34;, 27000), Empleado(\u0026#34;Mario\u0026#34;, \u0026#34;Botones\u0026#34;, 21000) ] [print(e.__str__()) for e in lista_empleados if e.salario \u0026gt; 50000] Juan trabaja como Director y cobra 75000 €. Ana trabaja como Presidenta y cobra 85000 €. Código fuente El código fuente y los posibles ficheros externos generados correspondientes a esta lección se encuentran disponibles para su consulta en la carpeta /lecciones/67/ del repositorio.\nMap Vídeo Notas personales En esta lección, estudiaremos la función map(), que, como …","date":1559862061,"expirydate":-62135596800,"kind":"section","lang":"es","lastmod":1559862061,"objectID":"29f06b2bc76c261019dcd6dd8a6c3787","permalink":"https://imalexissaez.github.io/python-basic/temas-avanzados/","publishdate":"2019-06-07T00:01:01+01:00","relpermalink":"/python-basic/temas-avanzados/","section":"python-basic","summary":"Conceptos avanzados en Python.","tags":null,"title":"Temas avanzados","type":"book"},{"authors":null,"categories":null,"content":"Problemas resueltos Pendiente de resolución. Problemas propuestos Problema 1: convierte\n(a) $125_{(3}$ a base $10$. (b) $231$ a base $5$. (c) $0.11_{(2}$ a base $10$. (d) $\\frac{3}{4}$ a base $2$. (e) $0.\\overline{1}_{(3}$ a base $10$. (f) $\\frac{1}{2}$ a base $3$. (g) $0.\\overline{12}_{(3}$ a base $10$. Problema 2:\n(a) Halla la base en la que $3753_{(x} - 3586_{(x} = 189_{(x}$. (b) Una vez hallada, deduce el criterio de divisibilidad entre $x-1$ de dicha base. (c) Justifica si alguno de los números dados es divisible por $x-1$ en dicha base. (d) Convierte el primero de los números dados a base $9$. Problema 3: en la base $x$, $a=0.\\overline{37}$ y $b=0.\\overline{73}$, mientras que en la base $y$, $a=0.\\overline{25}$ y $b=0.\\overline{52}$. Halla $x+y$ en base $10$.\nProblema 4: demuestra que, en cualquier sistema de numeración, los números $10101$, $101010101$, $1010101010101,\\ldots$ no son primos.\nProblema 5: encuentra los criterios de divisibilidad por $4$ y por $13$. Aplica dichos criterios para determinar el mayor número de seis cifras divisible por $4$ y por $13$ simultáneamente.\nProblema 6: halla los dígitos $A$, $B$ y $C$, en base $10$, que satisfacen $AA = \\sqrt{BBCC}$.\nProblema 7: encuentra un número $abcd$, de $4$ cifras en base $12$, tal que es cuadrado perfecto y, además, los números $ab$ y $cd$ son consecutivos en base $12$.\nProblema 8: halla un número natural, cuadrado perfecto, tal que en base $7$ se escribe como $ab0cb$, siendo $a = c + 1$.\nProblema 9: en un sistema de numeración, cuya base se desconoce, dos números se escriben $302$ y $402$. El producto de ambos números es $75583$ en el sistema de numeración en base $9$. Halla la base desconocida.\nProblema 10: encuentra, en el sistema decimal, todos los números que en base $7$ se escriben con tres cifras y en base $9$ con las mismas cifras en orden inverso.\n","date":1624489201,"expirydate":-62135596800,"kind":"section","lang":"es","lastmod":1624489201,"objectID":"c8c3ea31247484bc1f527086f5460c46","permalink":"https://imalexissaez.github.io/problemas-oposicion/sistemas-de-numeracion/","publishdate":"2021-06-24T00:00:01+01:00","relpermalink":"/problemas-oposicion/sistemas-de-numeracion/","section":"problemas-oposicion","summary":"Problemas matemáticos de sistemas de numeración para la preparación de oposiciones al cuerpo de profesores de Enseñanza Secundaria, en la especialidad de matemáticas.","tags":null,"title":"Sistemas de numeración","type":"book"},{"authors":null,"categories":null,"content":"En aquesta pàgina compilaré diversos recursos i informació relacionats amb el Certificat de Capacitació en valencià (CC d’ara endavant). Cada universitat de la Comunitat Valenciana ofereix cursos per obtindre aquesta certificació (i també moltes acadèmies privades de la zona); no obstant això, ací em centraré específicament en les proves lliures, que són gratuïtes i es convoquen ordinàriament un parell de vegades a l’any (i extraordinàriament alguna volta més, sobretot quan s’apropen oposicions que requereixen el CC).\n1. Temari Per a preparar les esmentades proves, és recomanable utilitzar les unitats disponibles a la web del curs que ofereix el cefire.\nNúm. Títol 0 Qüestions de llengua oralitat, escriptura i sociolingüística. 1 El plurilingüisme en el sistema educatiu. El marc legal. 2 Teories sobre l’aprenentatge de segones llengües i enfocament TILC. 3 L’avaluació en el procés d’ensenyament i aprenentatge. 4 Materials i espais per a un ensenyament TILC. 2. Descripció de la prova La informació més rellevant es resumeix a continuació:\nLa prova durarà dos hores i mitja. Conté dos parts: una oral i una escrita. En la part escrita cal elaborar un text, de 250 paraules almenys, relacionat amb un dels dos temes proposats. A més a més, s’ha d’omplir un qüestionari de 20 preguntes: 10 d’opció múltiple i 10 de verdader o fals. En la part oral cal exposar un monòleg, que no serà gravat i durarà cinc minuts aproximadament, associat amb un dels dos temes proposats. S’ha de superar la part escrita i la part oral de manera independent. Aquest és un model de la prova.\n3. Criteris d’avaluació En relació amb la part escrita:\nEl text té una valoració màxima de 80 punts i es descompta un punt per cada errada gramatical o ortogràfica comesa. Els textos de menys de 250 paraules (una paraula és una unitat lingüística que se separa de la resta mitjançant un espai en blanc en l’escriptura) obtindran una qualificació de zero punts. En el qüestionari: Cada encert sumarà un punt. Cada errada restarà bé 0,5 punts (per a les qüestions de verdader o fals) bé 0,25 punts (per a les d’opció múltiple). Cada resposta en blanc ni sumarà ni restarà punts. S’obtindrà un apte en aquesta part si la qualificació total és superior a 60 punts\nPel que fa a la intervenció oral, aquesta té una valoració màxima de 30 punts, dividits com s’indica a continuació:\nPronunciació: 3 punts. Lèxic: 3 punts. Morfosintaxi: 3 punts. Cohesió i coherència textual: 3 punts. Adequació: 3 punts. Contingut: 15 punts. S’obtindrà un apte en aquesta part si la qualificació total és superior a 18 punts.\n4. Convocatòries Convé que revisem amb freqüència la pàgina web del Servei de Formació del Professorat associada amb l’oferta lingüística (i més concretament la corresponent a les proves de CC i DM). Els detalls de l’última convocatòria són els següents:\nConvocatòria de 27 de maig de 2019, de la Secretaria Autonòmica d’Educació i Investigació, per la qual es convoquen proves adreçades a l’obtenció de les titulacions administratives de Certificat de Capacitació per a l’Ensenyament en Valencià, Certificat de Capacitació per a l’Ensenyament en Llengua estrangera i del Diploma de Mestre de Valencià. Diagrama explicatiu del procediment. El termini d’inscripció d’aquesta ja està tancat, però els documents poden servir de referència i orientació per a futures convocatòries.\n5. Recursos addicionals El grup de Facebook ‘Opositores sin Capacitació en Valencià. Noticias y recursos’ (enllaç) és, possiblement, el millor lloc on estar al dia de totes les novetats relacionades amb el CC (notícies, cursos, proves, qualificacions…). Els seus membres comparteixen interessants recursos com ara:\nDirectori en Google Drive amb qüestionaris associats a les unitats 3 i 4, així com de caràcter general, que es proposen als cursos presencials del CEFIRE. Pel que fa a la convocatòria de maig d’enguany, la majoria de les preguntes eren idèntiques a les que figuren en aquest recurs. Un altre directori en Google Drive amb els apunts personals d’una integrant del grup de Facebook (qüestionaris, redaccions, esquemes…). D’altra banda, el canal de YouTube d’en Salva Pérez, Per no frenar, recull excel·lents consells de cara a les parts orals i escrites de les proves de la cieaCOVA, JQCV i EOI. Són una referència molt recomanable a tindre en compte per a fer un bon paper a les proves lliures de CC.\nA més a més, destaque els següents vídeos enfocats al CC d’enguany:\nAixí mateix, en deixe uns altres corresponents a les convocatòries de l’any 2018, però que encara són recomanables perquè la prova té la mateixa estructura:\n","date":1563750001,"expirydate":-62135596800,"kind":"section","lang":"es","lastmod":1563750001,"objectID":"8428ce5f4b711644403a469c89aa37b5","permalink":"https://imalexissaez.github.io/valenciano/capacitacion/","publishdate":"2019-07-22T00:00:01+01:00","relpermalink":"/valenciano/capacitacion/","section":"valenciano","summary":"Diversos recursos i informació relacionats amb el Certificat de Capacitació en valencià","tags":null,"title":"Capacitació","type":"book"},{"authors":null,"categories":null,"content":"Problemas resueltos Problema 1 (a) ¿De cuántas formas se pueden sentar ocho personas en una fila de ocho asientos? (b) ¿Cuántas palabras distintas de diez letras se pueden formar con las letras $A$, $B$, $C$ y $D$? (c) ¿De cuántas formas pueden huir diez niños de la policía en un cruce de calles? (d) ¿Cuántas distribuciones se pueden conseguir lanzando diez monedas? (e) ¿De cuántas formas se pueden obtener cinco caras y cinco cruces en el apartado anterior? (f) ¿Cuántos números de $4$ cifras se pueden formar con los dígitos $1,2,3,\\ldots, 9$? (g) ¿Cuántas distribuciones de cumpleaños pueden darse entre diez amigos? Solución: para el apartado (a), dado que el orden importa y utilizamos todos los elementos, sin que ninguno de ellos se repita, buscamos la cantidad de permutaciones de ocho elementos. Así, $P_8 = 8! = 40320$ es el número de formas en que se pueden sentar ocho personas en una fila de ocho asientos.\nEn el apartado (b), el orden vuelve a importar y, obviamente, hemos de permitir la repetición de las letras para conformar las palabras, por lo que ahora la herramienta adecuada para contar será el total de variaciones de cuatro elementos tomadas de diez en diez. Por tanto, hay\n$$ VR_{4,10} = 4^{10} = 1048576 $$\npalabras distintas de diez letras conformadas a partir de las letras $A$, $B$, $C$ y $D$.\nEn cuanto al apartado (c), hemos de ser cautos a la hora de escoger quién juega el papel de los ‘’elementos’’ para contabilizar el total de maneras en que realizar la acción. En esta ocasión, son las calles. Si consideramos un cruce estándar de cuatro de ellas (y las denotamos por $a$, $b$, $c$ y $d$), una posible forma de escapar de la policía consistiría en que todos los niños optasen por la calle $a$, generando así el valor $(a,a,\\ldots,a)$. Si el primer niño escogiese la calle $b$ y el resto la $a$, tendríamos el valor $(b,a,a,\\ldots,a)$, y así sucesivamente. Por tanto, como importa el orden y alguna de las calles estará repetida dentro de las opciones de la huida, buscamos el número de variaciones con repetición de cuatro elementos tomados de diez en diez. Como antes, $VR_{4,10} = 4^{10}$ es el número de formas en que pueden huir diez niños de la policía en un cruce de calles.\nPara el apartado (d), un tanto ambiguo, asumiremos que están interesados en conocer el número de secuencias de caras y cruces que se pueden encontrar lanzando diez monedas. Con esta reformulación, es claro que son dos los elementos protagonistas, cara y cruz, y consideraremos que el orden importa porque, suponemos, las monedas son distinguibles. Por tanto, buscamos el número de variaciones con repetición de dos elementos tomados de diez en diez, esto es, hay $VR_{2,10} = 2^{10} = 1024$ posibles secuencias de caras y cruces cuando se lanzan diez monedas.\nA continuación, en el apartado (e), como el orden continúa siendo importante y cada elemento se repite un número fijo de veces, estamos interesados en la cantidad de permutaciones con repetición de diez elementos, donde tanto un elemento, como el otro, se repite en cinco ocasiones. Es decir, hay\n$$ P(10;5,5) = PR_{10}^{5,5} = \\dfrac{10!}{5!\\cdot 5!} = \\dfrac{10\\cdot9\\cdot8\\cdot7\\cdot6}{5!} = 252 $$\nformas de obtener cinco caras y cinco cruces al lanzar diez monedas.\nEn el apartado (f) hemos de considerar dos opciones posibles, en función de si admitimos o no repetición de los números. En caso afirmativo, al importar el orden y permitir repetición de los números, estamos interesados en el número de variaciones con repetición de nueve elementos tomados de cuatro en cuatro, esto es, hay $VR_{9,4} = 9^4 = 6561$ números de cuatro cifras conformados a partir de los dígitos $1,2,3,\\ldots,9$ que pueden poseer, además, dígitos repetidos. En caso negativo, el orden continúa siendo importante, pero ahora no permitimos la repetición de cifras, por lo que estamos interesados en hallar el número de variaciones de nueve elementos tomados de cuatro en cuatro, es decir, $V_{9,4} = 9\\cdot8\\cdot7\\cdot6 = 3024$ posibilidades.\nFinalmente, en el apartado (g), si todos los amigos celebrasen su cumpleaños el primer día del año, se generaría el valor $(1,1,\\ldots,1)$. Si el primer amigo lo celebrase el quinto día del año y el resto el tercer día, se conformaría el valor $(5,3,3\\ldots,3)$. Así, vemos que los elementos son los días del año, $365$, que los vamos a tomar de diez en diez. Como admitimos la posibilidad de que dos amigos cumplan año el mismo día, esto es, de repetir elemento, e importa el orden, estamos interesados en hallar el número de variaciones con repetición de $365$ elementos tomados de diez en diez. Así, hay $VR_{365,10} = 365^{10}$ distribuciones de cumpleaños posibles entre los diez amigos.\nProblema 2 Considerando una baraja de póquer de $52$ cartas,\n(a) ¿cuántas manos de cinco cartas se pueden extraer? (b) De las manos anteriores, ¿cuántas tienen tres ases? (c) De estas últimas, ¿cuántas serán full? (d) En general, ¿cuántos full podemos extraer de la baraja? (e) ¿Y cuántas manos …","date":1624143601,"expirydate":-62135596800,"kind":"section","lang":"es","lastmod":1624143601,"objectID":"f03d5a7ae5c26e680ed7c212808a8d28","permalink":"https://imalexissaez.github.io/problemas-oposicion/combinatoria/","publishdate":"2021-06-20T00:00:01+01:00","relpermalink":"/problemas-oposicion/combinatoria/","section":"problemas-oposicion","summary":"Problemas matemáticos de combinatoria para la preparación de oposiciones al cuerpo de profesores de Enseñanza Secundaria, en la especialidad de matemáticas.","tags":null,"title":"Combinatoria","type":"book"},{"authors":null,"categories":null,"content":"Problemas resueltos Problema 1 Demuestra que todos los términos de la sucesión $\\{a_n\\}_{n\u0026gt;2}$ son múltiplos de $600$, siendo\n$$ a_n = (n^2-1)(n^2+1)(n^4-16)n^2. $$\nSolución: es más que razonable que, en una primera aproximación a la resolución de este problema, estemos tentados a probar la afirmación dada en el enunciado utilizando el principio de inducción matemática. Esta senda nos llevaría a definir, seguramente, $P(n)$ de forma similar a la siguiente: existe $k\\in\\mathbb{Z}$ tal que si $n\u0026gt;2$, entonces\n$$ a_n = (n^2-1)(n^2+1)(n^4-16)n^2 = 600k. $$\nEl caso base, $P(3)$ en esta ocasión, comprobamos rápidamente que se satisface, ya que\n$$ \\begin{aligned} a_3 \u0026amp;= (3^2-1)(3^2+1)(3^4-16)3^2\\\\ \u0026amp;= 2^3\\cdot (2\\cdot 5)\\cdot (5\\cdot 13)\\cdot 3^2\\\\ \u0026amp;= 2^3\\cdot 3\\cdot 5^2\\cdot (2\\cdot 3\\cdot 13)\\\\ \u0026amp;= 600\\cdot(2\\cdot 3\\cdot 13), \\end{aligned} $$\ny bastaría tomar $k = 2\\cdot 3\\cdot 13 = 78$ para concluir que $a_3$ es un múltiplo de $600$.\nSin embargo, es posible que nuestro barco escore a la hora de abordar el paso inductivo. Recordemos que ahora hemos de mostrar que si $P(n)$ se cumple, para un $n\u0026gt;2$, entonces asimismo se satisface $P(n+1)$, cuya expresión es\n$$ a_{n+1} = ((n+1)^2-1)((n+1)^2+1)((n+1)^4-16)(n+1)^2. $$\nA primera vista, es ciertamente complejo utilizar la información disponible en la hipótesis de inducción, $P(n)$, para verificar $P(n+1)$.\nEn este momento, deberíamos descartar por completo la opción de desarrollar ambas expresiones para compararlas, puesto que entre manos tenemos un producto de cuatro polinomios, donde uno de los cuales es de grado considerable. Es más, no quiero siquiera empezar a imaginar la posible cantidad de errores de cálculo en los que podemos caer desarrollando la expresión de $P(n+1)$. Estos problemas están diseñados para resolverse en un período de tiempo razonable, hecho que nos debe invitar a considerar estrategias de resolución alternativas a la propuesta en primer lugar.\nAsí pues, a continuación, optaremos por llevar a cabo un enfoque diferente. Si estudiamos con detalle la expresión de $a_n$, enseguida apreciaremos que en ella aparecen un par de términos de la forma $a^2 - b^2$, concretamente $n^2 - 1$ y $n^4 - 16$. Esta situación puede hacernos sospechar que la clave pase por factorizar la expresión de $a_n$, utilizando para ello la identidad notable $a^2 - b^2 = (a+b)(a-b)$. Aplicándola, podemos escribir\n$$ \\begin{aligned} n^2-1\u0026amp;=(n+1)(n-1),\\\\ n^4-16\u0026amp;=(n^2+4)(n^2-4)=(n^2+4)(n+2)(n-2), \\end{aligned} $$\nquedando entonces\n$$ a_n = (n+1)(n-1)(n^2+1)(n^2+4)(n+2)(n-2)n^2. $$\nNo parece que estemos avanzando en la buena dirección. Sin embargo, hay cuatro términos que habrán captado nuestra atención seguramente: $(n+1)$, $(n-1)$, $(n+2)$ y $(n-2)$. Quizá ayude reescribir $a_n$ de la siguiente manera:\n$$ a_n = (n-2)(n-1)(n+1)(n+2)(n^2+1)(n^2+4)n^2. $$\nNos faltaría una $n$ entre los términos $(n-1)$ y $(n+1)$ para tener en la primera parte de la expresión de $a_n$ cinco números naturales consecutivos, ya que, por hipótesis, $n\u0026gt;2$. No obstante, en realidad sí que tenemos a nuestro alcance dicha $n$, pues podemos escribir el término $n^2=n\\cdot n$, y nos quedaría entonces que\n$$ a_n = (n-2)(n-1)n(n+1)(n+2)n(n^2+1)(n^2+4). $$\nEsta situación nos invita a escribir $a_n = u\\cdot v$, con\n$$ \\begin{aligned} u\u0026amp;=(n-2)(n-1)n(n+1)(n+2),\\\\ v\u0026amp;=n(n^2+1)(n^2+4), \\end{aligned} $$\ny estudiar cada una de sus partes por separado\nTal y como hemos indicado arriba, como $n\u0026gt;2$, en $u$ observamos el producto de cinco números naturales consecutivos, por lo que siempre seremos capaces de encontrar entre ellos un múltiplo de $2$, uno de $3$, uno de $4$ y uno de $5$. Es decir, sabemos que existe $k\\in\\mathbb{N}$ de manera que podemos escribir la factorización en números primos de $u$ como\n$$ \\begin{aligned} u \u0026amp;= 2\\cdot3\\cdot4\\cdot5\\cdot k \\\\ \u0026amp;= 2^3\\cdot 3\\cdot 5\\cdot k\\\\ \u0026amp;= 120\\cdot k, \\end{aligned} $$\ny, por tanto, $u$ es un múltiplo de $120$.\nBastaría ahora que comprobásemos que\n$$ v=n(n^2+1)(n^2+4) $$\nes múltiplo de $5$ para que el enunciado del ejercicio propuesto se satisfaga. Llevaremos a cabo tal tarea utilizando restos potenciales módulo 5, de manera que analizaremos, acto seguido, todos y cada uno de los casos posibles que puede presentar $n$:\nSi $n\\equiv 0\\pmod{5}$, trivialmente $v$ es múltiplo de $5$, al ser $n$ uno de sus factores. Si $n\\equiv 1\\pmod{5}$, $(n^2+4)\\equiv (1+4)\\pmod{5}\\equiv 0\\pmod{5}$ y, por tanto, $v$ es múltiplo de 5, al ser $(n^2+4)$ uno de sus factores. Si $n\\equiv 2\\pmod{5}$, $(n^2+1)\\equiv (4+1)\\pmod{5}\\equiv 0\\pmod{5}$ y, por tanto, $v$ es múltiplo de 5, al ser $(n^2+1)$ uno de sus factores. Si $n\\equiv 3\\pmod{5}$, $(n^2+1)\\equiv (9+1)\\pmod{5}\\equiv 0\\pmod{5}$ y, por tanto, $v$ es múltiplo de 5, al ser $(n^2+1)$ uno de sus factores. Si $n\\equiv 4\\pmod{4}$, $(n^2+4)\\equiv (16+4)\\pmod{5}\\equiv 0\\pmod{5}$ y, por tanto, $v$ es múltiplo de 5, al ser $(n^2+4)$ uno de sus factores. Así pues, como $u$ es múltiplo de $120$, $v$ es múltiplo de $5$ y $120\\cdot 5=600$, podemos concluir …","date":1624143601,"expirydate":-62135596800,"kind":"section","lang":"es","lastmod":1624143601,"objectID":"63b1d23ebb782ea4fd0278486b18246a","permalink":"https://imalexissaez.github.io/problemas-oposicion/teoria-de-numeros/","publishdate":"2021-06-20T00:00:01+01:00","relpermalink":"/problemas-oposicion/teoria-de-numeros/","section":"problemas-oposicion","summary":"Problemas matemáticos de teoría de números para la preparación de oposiciones al cuerpo de profesores de Enseñanza Secundaria, en la especialidad de matemáticas.","tags":null,"title":"Teoría de números","type":"book"},{"authors":null,"categories":null,"content":"Problemas resueltos Pendiente de resolución. Problemas propuestos Problema 1: con un solo corte recto puedes dividir un pastel circular en dos partes. Un segundo corte, que atraviese al primero, producirá probablemente cuatro partes, y un tercer corte puede llegar a producir siete partes. ¿Cuál es el mayor número de trozos que puedes lograr con seis cortes rectos? ¿Y, en general, cuántos pedazos de tarta se obtienen con $n$ cortes?\nProblema 2: halla la suma de todas las fracciones irreducibles de denominador $3$ comprendidas entre $3$ y $6$. Generaliza el resultado para la suma de todas las fracciones irreducibles de denominador $3$ comprendidas entre los enteros $m$ y $n$, con $m \u0026lt; n$.\nProblema 3: calcula\n$$ \\lim_{n\\rightarrow\\infty}{\\frac{\\ln{(8n^4 + 3n^2 + 5)}}{\\ln{(5n^3 + n^2 + n - 4)}}}. $$\nProblema 4: calcula\n$$ \\lim_{n\\rightarrow\\infty}{\\frac{2^n + 5}{5^n + 5}}. $$\nProblema 5: calcula\n$$ \\lim_{n\\rightarrow\\infty}{\\frac{(3n^4 + n^2 - 3)(\\cos{\\left(\\frac{1}{n}\\right)} - 1)}{2n^2}}. $$\nProblema 6: calcula\n$$ \\lim_{n\\rightarrow\\infty}{\\frac{n}{3}\\ln{((n+a)(n+b)(n+c))} - \\ln{(n^n)}}. $$\nProblema 7: calcula\n$$ \\lim_{n\\rightarrow\\infty}{\\frac{2n + (-1)^n(n+2)}{7n+3}}. $$\nProblema 8: calcula\n$$ \\lim_{n\\rightarrow\\infty}{\\frac{\\sqrt{1} + \\sqrt{2} + \\sqrt{3} + \\cdots + \\sqrt{n}}{n\\sqrt{n}}}. $$\nProblema 9: calcula\n$$ \\lim_{n\\rightarrow\\infty}{\\sqrt[n]{\\left(1+\\frac{2}{n}\\right)\\left(1+\\frac{4}{n}\\right)\\left(1+\\frac{6}{n}\\right)\\cdots\\left(1+\\frac{2n}{n}\\right)}}. $$\nProblema 10: calcula\n$$ \\lim_{n\\rightarrow\\infty}{\\sqrt[n]{(an+b)(an+2b)(an+3b)\\cdots(an+nb)}}. $$\nProblema 11: sea la progresión geométrica $1,3,9,27,81,\\ldots$.\n(a) ¿Cuál es el término de lugar $n$? Demuestra que las diferencias primeras también forman una progresión geométrica. Generaliza el resultado para las diferencias de cualquier orden. (b) Calcula las siguientes sumas. ¿Qué forma toman cuando se hace $x=1$? ¿Cuál es el verdadero valor en $x=1$? $$ \\begin{aligned} A_n \u0026amp;= x + x^2 + x^3 + \\cdots + x^n,\\\\ B_n \u0026amp;= 1 + 2x + 3x^2 + \\cdots + nx^{n-1}. \\end{aligned} $$\n(c) Responde a las mismas preguntas del apartado anterior para las sumas $$ \\begin{aligned} C_n \u0026amp;= 1 + 3x^2 + 5x^4 + \\cdots + (2n+1)x^{2n},\\\\ D_n \u0026amp;= 1 + 4x + 9x^2 + \\cdots + n^2x^{n-1}. \\end{aligned} $$\nProblema 12: demuestra que la siguiente sucesión tiene límite y calcúlalo:\n$$ \\sqrt{1}, \\sqrt{1 + \\sqrt{1}}, \\sqrt{1 + \\sqrt{1 + \\sqrt{1}}},\\ldots. $$\nProblema 13: demuestra que la sucesión\n$$ a_1 = \\sqrt{k}, a_2 = \\sqrt{k + \\sqrt{k}}, a_3 = \\sqrt{k + \\sqrt{k + \\sqrt{k}}},\\ldots $$\ncon $k \u0026gt; 0$, es convergente y halla su límite.\nProblema 14: es fácil demostrar que\n$$ 3 = \\sqrt{6 + \\sqrt{6 + \\sqrt{6 + \\cdots}}}. $$\n¿Para cuántos valores naturales $x$, tales que $1\\leq x\\leq 1000$, se cumple que\n$$ \\sqrt{x + \\sqrt{x + \\sqrt{x + \\cdots}}} $$\nes un número natural?\nProblema 15: sea\n$$ x = \\sqrt{a + \\sqrt{a + \\sqrt{a + \\cdots}}}. $$\n(a) Halla $x$. (b) Halla una relación tal que a cada número natural le corresponde un valor $a$ tal que $x$ sea racional. (c) Demuestra que, para cada número natural $n$, $x = n+1$. Problema 16: dada la sucesión\n$$ x_{n+1} = 1 - \\sqrt{1 - x_n}, $$\nde manera que $0 \u0026lt; x_1 \u0026lt; 1$, estudia su convergencia y calcula\n$$ \\lim_{n\\rightarrow\\infty}{\\frac{x_{n+1}}{x_n}}. $$\nProblema 17: disponemos los números naturales en la forma siguiente:\n$$ \\begin{aligned} \u0026amp; \u0026amp; \u0026amp; \u0026amp; \u0026amp; \u0026amp; \u0026amp; 1 \u0026amp; \u0026amp; \u0026amp; \u0026amp; \u0026amp; \u0026amp;\\\\ \u0026amp; \u0026amp; \u0026amp; \u0026amp; \u0026amp; 2 \u0026amp; \u0026amp; 3 \u0026amp; \u0026amp; 4 \u0026amp; \u0026amp; \u0026amp; \u0026amp;\\\\ \u0026amp; \u0026amp; \u0026amp; 5 \u0026amp; \u0026amp; 6 \u0026amp; \u0026amp; 7 \u0026amp; \u0026amp; 8 \u0026amp; \u0026amp; 9 \u0026amp; \u0026amp;\\\\ \u0026amp; 10 \u0026amp; \u0026amp; 11 \u0026amp; \u0026amp; 12 \u0026amp; \u0026amp; 13 \u0026amp; \u0026amp; 14 \u0026amp; \u0026amp; 15 \u0026amp; \u0026amp; 16 \\end{aligned} $$\n(a) Calcula la suma $S_n$ de los números situados en la $n$-ésima fila. (b) Halle $$ \\lim_{n\\rightarrow\\infty}{\\left(\\sqrt[3]{S_{n+1}} - \\sqrt[3]{S_n}\\right)}. $$ ","date":1624662001,"expirydate":-62135596800,"kind":"section","lang":"es","lastmod":1624662001,"objectID":"4deaabaadb1b194078c84eb62cccce6e","permalink":"https://imalexissaez.github.io/problemas-oposicion/sucesiones/","publishdate":"2021-06-26T00:00:01+01:00","relpermalink":"/problemas-oposicion/sucesiones/","section":"problemas-oposicion","summary":"Problemas matemáticos de sucesiones para la preparación de oposiciones al cuerpo de profesores de Enseñanza Secundaria, en la especialidad de matemáticas.","tags":null,"title":"Sucesiones","type":"book"},{"authors":null,"categories":null,"content":"Problemas resueltos Problema 1 Dada una constante real positiva, $a$, y el conjunto\n$$ M_a = \\left\\{z\\in\\mathbb{C}^* : \\left|z+\\dfrac{1}{z}\\right|=a \\right\\}, $$\ndonde $\\mathbb{C}^* = \\mathbb{C}\\backslash{(0,0)}$, encuentre los valores mínimo y máximo de $|z|$ cuando $z\\in M_a$.\nSolución: hemos de ser capaces de extraer información sobre el módulo de $z$, $|z|$, a partir de la expresión de la ecuación que define al conjunto $M_a$. Por las propiedades de la conjugación, sabemos que $z\\overline{z} = |z|^2$, de manera que una posible estrategia a seguir sería elevar al cuadrado ambos miembros de la ecuación que define a $M_a$ y desarrollar la expresión resultante mediante las propiedades de la conjugación. Así,\n$$ \\begin{aligned} a^2 \u0026amp;= \\left|z+\\dfrac{1}{z}\\right|^2 = \\left(z+\\dfrac{1}{z}\\right)\\overline{\\left(z+\\dfrac{1}{z}\\right)} = \\left(z+\\dfrac{1}{z}\\right)\\left(\\overline{z}+\\dfrac{1}{\\overline{z}}\\right)\\\\ \u0026amp;= z\\overline{z} + \\dfrac{z}{\\overline{z}} + \\dfrac{\\overline{z}}{z} + \\dfrac{1}{z\\overline{z}} = z\\overline{z} + \\dfrac{z^2 + \\overline{z}^2}{\\overline{z}z} + \\dfrac{1}{z\\overline{z}}, \\end{aligned} $$\npero recordemos que $z\\overline{z} = |z|^2$, por lo que la anterior ecuación quedaría\n$$ a^2 = |z|^2 + \\dfrac{z^2+\\overline{z}^2}{|z|^2}+\\dfrac{1}{|z|^2}, $$\ny multiplicando ambos miembros por $|z|^2$, número que sabemos es distinto de cero porque $z\\in\\mathbb{C}^*$, tenemos\n$$ a^2|z|^2 = |z|^4 + z^2 + \\overline{z}^2 + 1. $$\nAhora bien, a primera vista, la anterior expresión parece que quiere conducirnos hacia alguna especie de ecuación bicuadrada en $|z|$. Efectivamente, si reordenamos los términos de manera adecuada, llegamos a\n$$ |z|^4 - a^2|z|^2 + 1 = - (z^2 + \\overline{z}^2) $$\ny si completamos el cuadrado del miembro derecho,\n$$ \\begin{aligned} |z|^4 - a^2|z|^2 + 1 \u0026amp;= - (z^2 + \\overline{z}^2 + 2z\\overline{z} - 2z\\overline{z})\\\\ \u0026amp;= - (z + \\overline{z})^2 + 2z\\overline{z}\\\\ \u0026amp;= - (z + \\overline{z})^2 + 2|z|^2, \\end{aligned} $$\nes decir,\n$$ |z|^4 - (a^2+2)|z|^2 + 1 = - (z+\\overline{z})^2 \\leq 0. $$\nPor lo tanto, tras realizar operaciones algebraicas sobre la ecuación que define al conjunto $M_a$, hemos llegado a que la expresión de cierta ecuación bicuadrada en $|z|$ debe ser menor o igual que cero. Investiguemos si de ella podemos extraer alguna condición sobre el módulo de $z$ que nos permita dar respuesta al problema planteado.\nResolviendo $|z|^4 - (a^2 + 2)|z|^2 + 1 = 0$ y teniendo en cuenta que es positivo el coeficiente asociado a $|z|^4$, tenemos que $|z|^4 - (a^2 + 2)|z|^2 + 1 \\leq 0$ si, y solo si,\n$$ |z|^2\\in \\left[ \\dfrac{2+a^2 - \\sqrt{a^4+4a^2}}{2}, \\dfrac{2+a^2 + \\sqrt{a^4+4a^2}}{2} \\right], $$\nque es equivalente a decir que\n$$ |z|\\in \\left[ \\dfrac{-a + \\sqrt{a^2+4}}{2}, \\dfrac{a + \\sqrt{a^2+4}}{2} \\right]. $$\nVeamos esta última equivalencia en detalle, pues puede no resultarnos trivial a primera vista. La idea aquí es representar ambos extremos del intervalo que hemos obtenido para $|z|^2$ como cuadrados de ciertas expresiones. Si somos capaces de llevar a cabo tal tarea, únicamente bastará aplicar la raíz cuadrada (que, recordemos, es una transformación monótona creciente) para, de esta manera, llegar a la conclusión obtenida para $|z|$.\nCentrémonos en la expresión del extremo inferior del intervalo definido para $|z|^2$ (el razonamiento a seguir sería análogo para el superior). Por un lado,\n$$ 2+a^2 - \\sqrt{a^4 + 4a^2} = 2+a^2 - a\\sqrt{a^2 + 4}, $$\nexpresión que nos invita a experimentar con el desarrollo de $(-a + \\sqrt{a^2 + 4})^2$. Así,\n$$ \\begin{aligned} (-a + \\sqrt{a^2+4})^2 \u0026amp;= a^2 + a^2 + 4 - 2a\\sqrt{a^2+4}\\\\ \u0026amp;= 2a^2+4 - 2a\\sqrt{a^2+4}\\\\ \u0026amp;= 2(a^2+2-a\\sqrt{a^2+4})\\\\ \u0026amp;= 2(a^2+2-\\sqrt{a^4+4a^2}), \\end{aligned} $$\nde forma que\n$$ \\dfrac{2+a^2 - \\sqrt{a^4+4a^2}}{2} = \\dfrac{(-a + \\sqrt{a^2+4})^2}{2\\cdot 2} = \\left(\\dfrac{-a + \\sqrt{a^2+4}}{2}\\right)^2. $$\nPor tanto, hemos llegado a que\n$$ \\begin{aligned} \\min{|z|} \u0026amp;= \\dfrac{-a+\\sqrt{a^2+4}}{2},\\\\ \\max{|z|} \u0026amp;= \\dfrac{a+\\sqrt{a^2+4}}{2}, \\end{aligned} $$\ny los valores extremos se alcanzarán cuando se dé la igualdad en la inecuación considerada, es decir, cuando $-(z+\\overline{z})^2 = 0$, que equivale a la condición $z=-\\overline{z}$. Así pues, los valores extremos se alcanzarán para los números complejos $z\\in M_a$ tales que $z=-\\overline{z}$.\nProblemas propuestos Problema 2: halla el conjunto de puntos de la variable compleja $z$ tal que $RE(z^2) \u0026gt; 2$.\nProblema 3: halla la curva definida por\n$$ RE\\left(\\frac{1}{z}\\right) = \\frac{1}{4}. $$\nProblema 4: calcula $\\sqrt{-15-8i}$.\nProblema 5: resuelve $z^2 + (2i - 3)z + 5-i = 0$.\nProblema 6: halla las raíces quintas de la unidad.\nProblema 7: sean $r_i$, con $i=1,\\ldots,5$, las raíces quintas de la unidad. Halla el valor de\n$$ A = r_1^n + r_2^n + r_3^n + r_4^n + r_5^n. $$\nProblema 8: calcula $(1+\\sqrt{3}i)^n + (1-\\sqrt{3}i)^n$.\nProblema 9: sea\n$$ z = \\left(\\frac{-1+\\sqrt{3}i}{2}\\right)^n + \\left(\\frac{-1-\\sqrt{3}i}{2}\\right)^n. $$\nPrueba que $z=2$ si $n$ es múltiplo de $3$ y $z=-1$ en …","date":1624143601,"expirydate":-62135596800,"kind":"section","lang":"es","lastmod":1624143601,"objectID":"c110351820d9c669693bb061cdada581","permalink":"https://imalexissaez.github.io/problemas-oposicion/complejos/","publishdate":"2021-06-20T00:00:01+01:00","relpermalink":"/problemas-oposicion/complejos/","section":"problemas-oposicion","summary":"Problemas matemáticos de números complejos para la preparación de oposiciones al cuerpo de profesores de Enseñanza Secundaria, en la especialidad de matemáticas.","tags":null,"title":"Números complejos","type":"book"},{"authors":null,"categories":null,"content":"Problemas resueltos Pendiente de resolución. Problemas propuestos Problema 1: dado el polinomio $P(x) = x^3 + 3x^2 - 7x + 1$, calcula $\\sum_{i=1}^{3}{x_i^2}$, donde $x_i$, con $i=1,2,3$, son las raíces de dicho polinomio.\nProblema 2: calcula el resto de dividir $x^{100} - 2x^{51} + 1$ entre $x^2-1$.\nProblema 3: determina $a$ y $b$ para que $(x-1)^2$ divida a $ax^4 + bx^3 + 1$.\nProblema 4: encuentra $a$ tal que $x=-1$ sea raíz múltiple de $x^5 - ax^2 - ax + 1$.\nProblema 5: halla los valores de $p$ y $q$ para que las ecuaciones\n$$ \\begin{aligned} x^3 - 6x^2 + px - 3 \u0026amp;= 0,\\\\ x^3 - x^2 + qx + 2 \u0026amp;=0, \\end{aligned} $$\ntengan dos raíces comunes.\nProblema 6: resuelve $2x^3 - 9x^2 + 32x + 75 = 0$, sabiendo que admite una raíz compleja de módulo $|z| = 5$.\nProblema 7: resuelve la ecuación $x^4 + 2x^3 + x^2 + 8x - 12 = 0$, sabiendo que tiene una raíz imaginaria pura.\nProblema 8: calcula $q$ para que las cuatro raíces de la ecuación $z^4 + 6z^3 - 7z^2 - 36z + q = 0$ formen una proporción.\nProblema 9: sea la ecuación $x^3 - 7x + \\theta = 0$.\n(a) Halla $\\theta$ para que una raíz sea el doble de la otra. (b) Resuelve la ecuación. Problema 10: un polinomio es tal que al dividirlo por $x+1$ y por $x-1$ da de resto $6$ y $2$, respectivamente. Además, es divisible por $x^2+1$.\n(a) Halla el resto al dividirlo por $x^4-1$. (b) Halla el polinomio de grado cinco que lo verifica y tal que, al dividirlo por $x^4-1$, los coeficientes de los términos de primer grado e independiente sean $3$ y $4$. Problema 11: un polinomio $P(x)$ dividido por $x-1$ da de resto $-8$; dividido por $x+2$ da de resto $25$, ¿qué resto dará al dividirlo por $x^2 + x - 2$? Halla $P(x)$ sabiendo que es de tercer grado y divisible por $x^2 - 9$.\nProblema 12: dada la ecuación $x^7 - 4x^6 + 8x^2 - 1 = 0$, encuentra la suma de los inversos de los cuadrados de las raíces.\nProblema 13: sea $P(x) = x^4 - 4x^3 + x^2 + 6x + n$.\n(a) Halla $Q_i(x)$ de manera que $P(x) = Q_i(x)^2 + mQ_i(x) + n$. (b) Calcula $n$ tal que si $R(x) = \\sum{Q_i^2(x)}$, entonces $R(x)$ tiene un máximo relativo en $x = n / 2$. (c) Para ese valor, halla las raíces de $P(x)$. Problema 14: halla las raíces de la ecuación $x^4 + 3x^3 - 30x^2 + 366x - 340 = 0$, sabiendo que una raíz es $3 + 5i$.\nProblema 15: determina $a$ y $b$ para que las raíces del polinomio $P(x) = x^4 - 8x^3 + 14x^2 + ax + b$ estén en progresión aritmética. Halla dichas raíces.\nProblema 16: en $\\mathbb{Z}_7$, halla $c$ y $d$ para que el polinomio $x^4 + 3x^3 + 5x^2 + cx + d$ sea un cuadrado perfecto. Indica de qué polinomio es cuadrado.\nProblema 17: halla la relación entre $p$ y $q$, de $\\mathbb{R}$, para que los afijos de las raíces de la ecuación $x^3 + px + q = 0$ sean los vértices de un triángulo rectángulo isósceles.\nProblema 18: halla el resto de la división del polinomio $P(x)$ por $(x^2 + 1)(x + 1)$ si al dividir $P(x)$ por $x^2+1$ el resto es $2x + 3$ y al dividirlo por $x+1$ el resto es $4$.\nProblema 19: halla el resto de la división dada por $(\\cosh{(a)} + x\\sinh{(a)})^n$ entre $x^2 - 1$.\nProblema 20: un polinomio $P(x)$ dividido por $x + 1$ da de resto $-45$ y dividido por $x-3$ da de resto $-165$.\n(a) Calcula el resto de $P(x)$ al dividirlo por $x^2 - 2x - 3$. (b) Halla $P(x)$ sabiendo que es de grado cuatro y divisible por $x(x^2 - 4)$. (c) Halla las raíces de $P(x) = 0$. ","date":1625094001,"expirydate":-62135596800,"kind":"section","lang":"es","lastmod":1625094001,"objectID":"56e024c0a22325b1bd2c6809521a00ed","permalink":"https://imalexissaez.github.io/problemas-oposicion/polinomios/","publishdate":"2021-07-01T00:00:01+01:00","relpermalink":"/problemas-oposicion/polinomios/","section":"problemas-oposicion","summary":"Problemas matemáticos de polinoios para la preparación de oposiciones al cuerpo de profesores de Enseñanza Secundaria, en la especialidad de matemáticas.","tags":null,"title":"Polinomios","type":"book"},{"authors":null,"categories":null,"content":"Problemas resueltos Problema 1 Resuelve\n(a) $a_{n+3} - 3a_{n+2} - 4a_{n+1} + 12a_n = 0$. (b) $a_{n+3} - 4a_{n+2} + 5a_{n+1} - 2a_n = 0$. Solución: en el apartado (a), encontramos la ecuación en diferencias lineal homogénea de orden 3 dada por $a_{n+3} - 3a_{n+2} - 4a_{n+1} + 12a_n = 0$, cuya ecuación característica asociada es\n$$ \\lambda^3-3\\lambda^2-4\\lambda+12=0. $$\nAhora bien, como $\\lambda^3 - 3\\lambda^2 - 4\\lambda + 12 = (\\lambda - 3)(\\lambda - 2)(\\lambda + 2)$, estamos ante el caso de raíces reales simples, de manera que la solución queda\n$$ a_h(n) = c_1(-2)^n + c_22^n + c_33^n, $$\ncon $c_1,c_2,c_3\\in\\mathbb{R}$.\nPara el apartado (b), $a_{n+3} - 4a_{n+2} + 5a_{n+1} - 2a_n = 0$ es homogénea de orden 3, con ecuación característica\n$$ \\lambda^3 - 4\\lambda^2 + 5\\lambda - 2 = 0. $$\nComo $\\lambda^3 - 4\\lambda^2 + 5\\lambda - 2 = (\\lambda - 2)(\\lambda - 1)^2$, $\\lambda=1$ es una raíz real de multiplicidad $m=2$, mientras que $\\lambda=2$ es una raíz real simple, por lo que la solución queda\n$$ a_h(n) = c_11^n + c_2n1^n + c_32^n = c_1+c_2n+c_32^n, $$\ncon $c_1,c_2,c_3\\in\\mathbb{R}$.\nProblema 2 Resuelve\n(a) $a_{n+3} - 3a_{n+2} + 4a_{n+1} - 12a_n = 0$. (b) $a_{n+4} + 2a_{n+2} + a_n = 0$. Solución: en el apartado (a), $a_{n+3} - 3a_{n+2} + 4a_{n+1} - 12a_n = 0$ es una ecuación en diferencias lineal homogénea de orden 3, que tiene por ecuación característica\n$$ \\lambda^3 - 3\\lambda^2 + 4\\lambda - 12 = 0. $$\nAhora bien, como $\\lambda^3 - 3\\lambda^2 + 4\\lambda - 12 = (\\lambda - 3)(\\lambda - 2i)(\\lambda + 2i)$, tenemos una raíz real simple y dos raíces complejas conjugadas simples, para las que $\\varrho = 2$ y $\\theta = \\pi/2$, de manera que la solución queda\n$$ a_h(n) = c_13^n + 2^n\\left(A\\cos{\\left(\\dfrac{\\pi}{2}n\\right)} + B\\sin{\\left(\\dfrac{\\pi}{2}n\\right)}\\right), $$\ncon $c_1, A, B\\in\\mathbb{R}$.\nA continuación, en el apartado (b), $a_{n+4} + 2a_{n+2} + a_n = 0$ es homogénea de orden 4, con ecuación característica\n$$ \\lambda^4 + 2\\lambda^2 + 1 = 0. $$\nEsta ecuación bicuadrada en $\\lambda$ la podemos resolver mediante el cambio de variable $t = \\lambda^2$, de forma que la ecuación queda como $t^2+2t+1=0$ y posee $t=-1$ como raíz real de multiplicidad $m=2$, es decir,\n$$ t^2+2t+1 = (t+1)^2. $$\nAsí, si deshacemos ahora el cambio de variable, resulta que\n$$ \\lambda^4 + 2\\lambda^2 + 1 = (\\lambda - i)^2(\\lambda + i)^2, $$\ncon lo cual tenemos dos raíces complejas conjugadas de multiplicidad $m=2$, para las que $\\varrho=1$ y $\\theta = \\pi/2$, por lo que la solución queda\n$$ \\begin{aligned} a_h(n) \u0026amp;= 1^n\\left( (An+B)cos{\\left(\\dfrac{\\pi}{2}n\\right)} + (Cn+D)\\sin{\\left(\\dfrac{\\pi}{2}n\\right)} \\right)\\\\ \u0026amp;= (An+B)cos{\\left(\\dfrac{\\pi}{2}n\\right)} + (Cn+D)\\sin{\\left(\\dfrac{\\pi}{2}n\\right)}, \\end{aligned} $$\ncon $A,B,C,D\\in\\mathbb{R}$.\nProblema 3 Resuelve\n(a) $a_{n+2}-5a_{n+1}+6a_n = 10$. (b) $a_{n+2}-3a_{n+1}+2a_n = 4$. Solución: en el apartado (a), encontramos la ecuación en diferencias lineal completa de orden 2,\n$$ a_{n+2}-5a_{n+1}+6a_n = 10. $$\nEmpecemos abordando su ecuación en diferencias lineal homogénea asociada,\n$$ a_{n+2}-5a_{n+1}+6a_n = 0, $$\ncuya ecuación característica correspondiente es\n$$ \\lambda^2 - 5\\lambda + 6 = 0. $$\nAhora, como $\\lambda^2 - 5\\lambda + 6=(\\lambda - 3)(\\lambda - 2)$, estamos en el caso de raíces reales simples, de manera que la solución para la ecuación anterior queda\n$$ a_h(n) = c_12^n + c_23^n, $$\ncon $c_1,c_2\\in\\mathbb{R}$.\nA continuación, de cara a encontrar una solución particular, $a_p(n)$, como $b(n)=10$ y $\\lambda=1$ no es raíz de la ecuación característica, proponemos $a_p(n) = k$, de forma que, sustituyendo esta en la ecuación inicial,\n$$ k - 5k + 6k = 10, $$\nes decir, $k=5$, con lo que\n$$ a_p(n)=5. $$\nFinalmente, la solución general para la ecuación inicial la obtenemos haciendo\n$$ a(n) = a_h(n) + a_p(n) = c_12^n + c_23^n + 5, $$\ncon $c_1,c_2\\in\\mathbb{R}$.\nEn el apartado (b), la ecuación en diferencias lineal\n$$ a_{n+2}-3a_{n+1}+2a_n = 4 $$\nes completa de orden 2. Procediendo como antes, abordamos su ecuación en diferencias lineal homogénea correspondiente\n$$ a_{n+2}-3a_{n+1}+2a_n = 0, $$\ncon ecuación característica asociada\n$$ \\lambda^2 - 3\\lambda + 2 = 0. $$\nComo $\\lambda^2 - 3\\lambda + 2 = (\\lambda - 2)(\\lambda - 1)$, volvemos a estar en el caso de raíces reales simples, por lo que la solución para la ecuación anterior queda\n$$ a_h(n) = c_11^n + c_22^n=c_1 + c_22^n, $$\ncon $c_1,c_2\\in\\mathbb{R}$.\nActo seguido, para encontrar una solución particular, $a_p(n)$, como $b(n)=4$ y $\\lambda=1$ es raíz simple ($m=1$) de la ecuación característica, proponemos $a_p(n) = kn^1 = kn$, de forma que, sustituyendo en la ecuación inicial,\n$$ k(n+2)-3k(n+1)+2kn = kn+2k-3kn-3k+2kn= -k = 4, $$\nes decir, $k = -4$, con lo que\n$$ a_p(n) = -4n. $$\nFinalmente, la solución general de la ecuación inicial la obtenemos haciendo\n$$ a(n) = a_h(n) + a_p(n) = c_1+c_22^n-4n, $$\ncon $c_1,c_2\\in\\mathbb{R}$.\nProblema 4 Resuelve\n(a) $a_{n+2}-3a_{n+1}-2a_n = 3^n$. (b) $a_{n+2}-3a_{n+1}+2a_n = 2^n$. Solución: en el …","date":1624489201,"expirydate":-62135596800,"kind":"section","lang":"es","lastmod":1624489201,"objectID":"899dc050dcf934382fc44f202fd4520a","permalink":"https://imalexissaez.github.io/problemas-oposicion/ecuaciones/","publishdate":"2021-06-24T00:00:01+01:00","relpermalink":"/problemas-oposicion/ecuaciones/","section":"problemas-oposicion","summary":"Problemas matemáticos de ecuaciones para la preparación de oposiciones al cuerpo de profesores de Enseñanza Secundaria, en la especialidad de matemáticas.","tags":null,"title":"Ecuaciones","type":"book"},{"authors":null,"categories":null,"content":"Problemas resueltos Problema 1 (a) Sea $c$ un número entero positivo tal que $10\\leq c\\leq 100$. ¿Cuál es el valor mínimo de $c$ para el cual la ecuación $84x+990y=c$ admite solución entera? (b) Un hombre compra caballos y vacas, pagando $1770$ euros. Una vaca cuesta $21$ euros y un caballo $31$ euros. ¿Cuántos caballos y vacas ha comprado? Solución: para el apartado (a), como\n$$ \\begin{aligned} 84 \u0026amp;= 2^2 \\cdot3\\cdot7,\\\\ 990 \u0026amp;= 2\\cdot 3^2 \\cdot5\\cdot11, \\end{aligned} $$\nentonces $mcd(84, 990) = 6$. Para que la ecuación diofántica planteada admita soluciones enteras, $6$ ha de dividir a $c$ y como buscamos el valor mínimo de $c$, nuestra tarea se reduce pues a encontrar el primer múltiplo de $6$ que pertenezca al intervalo $[10,100]$. La solución será, por tanto, $c=12$.\nEn cuanto al apartado (b), consideremos $x$ el número de vacas compradas e $y$ el total de caballos adquiridos. Dados sus respectivos precios y el importe total desembolsado, planteamos la ecuación diofántica\n$$ 21x + 31y = 1770. $$\nComo $mcd(21,31) = 1$ y $1|1770$, estamos en condiciones de asegurar que la anterior ecuación diofántica admite solución entera. Para aliviar cálculos, empecemos llevando a cabo el cambio de variable\n$$ \\begin{aligned} x \u0026amp;= 1770x^{\\prime},\\\\ y \u0026amp;= 1770y^{\\prime}, \\end{aligned} $$\ncon lo cual queda $21x^{\\prime} + 31y^{\\prime} = 1$. Despejando ahora la variable $x^{\\prime}$,\n$$ \\begin{aligned} x^{\\prime} = \\dfrac{1-31y^{\\prime}}{21} = -y^{\\prime} + \\dfrac{1 - 10y^{\\prime}}{21} = -y^{\\prime} + x^{\\prime\\prime}, \\end{aligned} $$\ncon\n$$ x^{\\prime\\prime} = \\dfrac{1-10y^{\\prime}}{21}, $$\nes decir, $21x^{\\prime\\prime} = 1-10y^{\\prime}$, y despejando ahora la variable $y^{\\prime}$,\n$$ y^{\\prime} = \\dfrac{1-21x^{\\prime\\prime}}{10}, $$\necuación para la que, por tanteo, rápidamente observamos que si $x^{\\prime\\prime} = 1$, entonces $y^{\\prime} = (-2)$. Deshaciendo ahora los cambios de variable realizados,\n$$ \\begin{aligned} x^{\\prime} \u0026amp;= -y^{\\prime} + x^{\\prime\\prime} = 2 + 1 = 3,\\\\ x \u0026amp;= 1770x^{\\prime} = 1770\\cdot3 = 5310,\\\\ y \u0026amp;= 1770y^{\\prime} = 1770\\cdot(-2) = -3540, \\end{aligned} $$\nllegamos a una solución particular de la ecuación diofántica propuesta. Así, su solución general queda\n$$ \\begin{aligned} x \u0026amp;= 5310 + 31t,\\\\ y \u0026amp;= (-3540) - 21t, \\end{aligned} $$\ncon $t$ número entero. El número de animales que ha comprado de cada clase ha de ser, necesariamente, mayor o igual que cero, por lo que planteamos las inecuaciones,\n$$ \\begin{aligned} 5310 + 31t \u0026amp;\\geq 0\\Rightarrow t\\geq -\\dfrac{5310}{31} = -171.29,\\\\ -3540-21t \u0026amp;\\geq 0\\Rightarrow t\\leq -\\dfrac{3540}{21} = -168.57. \\end{aligned} $$\nComo $t$ ha de ser entero, concluimos que $-171\\leq t\\leq -169$. Por tanto,\n$t$ $x$ (vacas) $y$ (caballos) $-171$ $9$ $51$ $-170$ $40$ $30$ $-169$ $71$ $9$ Siendo así la posible respuesta, al interrogante planteado en el enunciado del ejercicio, cualquiera de las anteriores tres posibilidades.\nProblema 2 Estudia cuáles de estas ecuaciones diofánticas tiene solución entera y, en su caso, calcúlala:\n(a) $25x+36y=10$. (b) $200x+1768y=8$. (c) $40x+50y=3$. (d) $213x+1123y=18$. (e) $14x+165y=1$. Solución: para el apartado (a), como $25=5^2$ y $36 = 2^2 \\cdot3^2$, entonces $mcd(25,36)=1$, y, dado que $1|10$, estamos en condiciones de asegurar que la ecuación diofántica propuesta admite solución entera. Empecemos despejando la variable $x$, por ser aquella cuyo coeficiente asociado es más reducido. Así,\n$$ x = \\dfrac{10-36y}{25} = -y + \\dfrac{10-11y}{25} = -y+x^{\\prime}, $$\ncon\n$$ x^{\\prime}=\\dfrac{10-11y}{25}, $$\nesto es, $25x^{\\prime} + 11y = 10$, luego\n$$ y = \\dfrac{10-25x^{\\prime}}{11} = -2x^{\\prime} + \\dfrac{10-3x^{\\prime}}{11} = -2x^{\\prime}+y^{\\prime}, $$\ncon\n$$ y^{\\prime}=\\dfrac{10-3x^{\\prime}}{11}, $$\nes decir, $3x^{\\prime} +11y^{\\prime} =10$. Finalmente,\n$$ x^{\\prime} = \\dfrac{10-11y^{\\prime}}{3}, $$\npor lo que basta probar para $y^{\\prime}$ valores pertenecientes al menor sistema completo de restos módulo $3$. Para $y^{\\prime} =2$, tenemos que $x^{\\prime} = (-4)$, y deshaciendo ahora los cambios de variable llevados a cabo anteriormente,\n$$ \\begin{aligned} y \u0026amp;= -2x^{\\prime} + y^{\\prime} = 8+2=10,\\\\ x \u0026amp;= -y + x^{\\prime} = (-10) - 4 = -14, \\end{aligned} $$\nesto es, una solución particular para la ecuación diofántica planteada es $(x_0,y_0) = ((-14), 10)$, mientras que su solución general queda\n$$ \\begin{aligned} x \u0026amp;= (-14) + 36t,\\\\ y \u0026amp;= 10 - 25t, \\end{aligned} $$\ncon $t$ número entero.\nDe cara al apartado (b), comencemos calculando el máximo común divisor de $200$ y $1768$ por el Algoritmo de Euclides. Tenemos que,\n$$ \\begin{aligned} 1768 \u0026amp;= 200\\cdot8 + 168,\\\\ 200 \u0026amp;= 168\\cdot1 + 32,\\\\ 168 \u0026amp;= 32\\cdot5 + 8,\\\\ 32 \u0026amp;= 8\\cdot4, \\end{aligned} $$\npor lo que $mcd(200,1768) = 8$ y, evidentemente, $8|8$, por lo que estamos en condiciones de asegurar que la ecuación diofántica propuesta en este apartado admite solución entera. Simplificando dicha ecuación por $8$ queda $25x + 221y = 1$. Despejemos la variable $x$, por ser aquella cuyo coeficiente es más …","date":1624489201,"expirydate":-62135596800,"kind":"section","lang":"es","lastmod":1624489201,"objectID":"b243781b48464872f1c6eb817abfc9e2","permalink":"https://imalexissaez.github.io/problemas-oposicion/ecuaciones-diofanticas/","publishdate":"2021-06-24T00:00:01+01:00","relpermalink":"/problemas-oposicion/ecuaciones-diofanticas/","section":"problemas-oposicion","summary":"Problemas matemáticos de ecuaciones diofánticas para la preparación de oposiciones al cuerpo de profesores de Enseñanza Secundaria, en la especialidad de matemáticas.","tags":null,"title":"Ecuaciones diofánticas","type":"book"},{"authors":null,"categories":null,"content":"Problemas resueltos Pendiente de resolución. Problemas propuestos Problema 1: dada la matriz\n$$ \\begin{aligned} A = \\begin{bmatrix} 0 \u0026amp; 0 \u0026amp; 0 \u0026amp; 0\\\\ 2 \u0026amp; 0 \u0026amp; 0 \u0026amp; 0\\\\ 2 \u0026amp; 2 \u0026amp; 0 \u0026amp; 0\\\\ 2 \u0026amp; 2 \u0026amp; 0 \u0026amp; 0 \\end{bmatrix}. \\end{aligned} $$\n(a) Halla las sucesivas potencias de $A$. (b) Si $B = I + A$, expresa $B^n$ en función de $I$, $A$ y $A^2$. (c) Demuestra que la inversa de $B$ es $I - A + A^2$. (d) Expresa $B^{-n}$ en función de $I$, $A$ y $A^2$. ","date":1624662001,"expirydate":-62135596800,"kind":"section","lang":"es","lastmod":1624662001,"objectID":"795b3d60a232db38148a4a9936afbd9f","permalink":"https://imalexissaez.github.io/problemas-oposicion/matrices/","publishdate":"2021-06-26T00:00:01+01:00","relpermalink":"/problemas-oposicion/matrices/","section":"problemas-oposicion","summary":"Problemas matemáticos de matrices para la preparación de oposiciones al cuerpo de profesores de Enseñanza Secundaria, en la especialidad de matemáticas.","tags":null,"title":"Matrices","type":"book"},{"authors":null,"categories":null,"content":"Problemas resueltos Problema 1 Sea $k$ un número natural no nulo y sea $f$ la función real de variable real dada por:\n$$ f(x) = \\begin{vmatrix} \\binom{1}{0} \u0026amp; 0 \u0026amp; 0 \u0026amp;\\ldots \u0026amp; 0 \u0026amp; x\\\\ \\binom{2}{0} \u0026amp; \\binom{2}{1} \u0026amp; 0 \u0026amp;\\ldots \u0026amp; 0 \u0026amp; x^2\\\\ \\binom{3}{0} \u0026amp; \\binom{3}{1} \u0026amp; \\binom{3}{2} \u0026amp; \\ldots \u0026amp; 0 \u0026amp; x^3\\\\ \\vdots \u0026amp; \\vdots \u0026amp; \\vdots \u0026amp; \\ddots \u0026amp; \\vdots \u0026amp; \\vdots\\\\ \\binom{k}{0} \u0026amp; \\binom{k}{1} \u0026amp; \\binom{k}{2} \u0026amp; \\ldots \u0026amp; \\binom{k}{k-1} \u0026amp; x^k\\\\ \\binom{k+1}{0} \u0026amp; \\binom{k+1}{1} \u0026amp; \\binom{k+1}{2} \u0026amp;\\ldots \u0026amp; \\binom{k+1}{k-1} \u0026amp; x^{k+1} \\end{vmatrix}. $$\na) Calcular $f(x + 1) - f(x)$.\nb) Expresar la suma $1^k + 2^k + \\cdots + n^k$ mediante esta función.\nSolución: en lugar de abordar directamente la resolución del primer apartado, detengámonos por un instante a analizar la expresión del determinante dado por la función $f(x)$. Los números combinatorios que aparecen y, sobre todo, la forma en que lo hacen, seguramente hayan captado nuestra atención. Resulta, cuanto menos, familiar ese patrón, ¿verdad? Parte de él es el que aparece en el famoso triángulo de Pascal, si expresamos sus componentes utilizando números combinatorios.\nAhora bien, de manera automática, y supongo que por deformación matemática, cuando viene a nuestra cabeza el triángulo de Pascal, enseguida pensamos en el teorema del binomio, que recordemos afirma que\n$$ \\begin{aligned} (x+y)^n \u0026amp;= \\sum_{k=0}^{n}{\\binom{n}{k}x^{n-k}y^k}\\\\ \u0026amp;= \\binom{n}{0}x^n + \\binom{n}{1}x^{n-1}y+\\cdots+\\binom{n}{n-1}xy^{n-1}+\\binom{n}{n}y^n. \\end{aligned} $$\nMerece la pena explorar la idea de una posible relación entre el teorema del binomio y la expresión de $f(x)$. Para empezar, en la última columna del determinante encontramos las potencias de $x$, pero no observamos la existencia de más potencias en el resto de los elementos de dicho determinante. Este hecho nos invita a pensar que quizá sea conveniente que particularmente estudiemos el desarrollo del binomio $(1+x)^n$, dado el valor de las potencias de uno. Además, si ahora echamos un vistazo rápido al enunciado del primer apartado, aparece un $(1+x)$, ¡puede que estemos sobre la pista de la senda correcta!\nDesarrollemos $(1+x)^n$, para algunos valores concretos de $n$, utilizando para ello el teorema del binomio:\n$$ \\begin{aligned} (1+x)^1 \u0026amp;= \\dbinom{1}{0} + \\dbinom{1}{1}x,\\\\ (1+x)^2 \u0026amp;= \\dbinom{2}{0} + \\dbinom{2}{1}x + \\dbinom{2}{2}x^2,\\\\ (1+x)^3 \u0026amp;= \\dbinom{3}{0} + \\dbinom{3}{1}x + \\dbinom{3}{2}x^2 + \\dbinom{3}{3}x^3,\\\\ (1+x)^4 \u0026amp;= \\dbinom{4}{0} + \\dbinom{4}{1}x + \\dbinom{4}{2}x^2 + \\dbinom{4}{3}x^3 + \\dbinom{4}{4}x^4. \\end{aligned} $$\nPara empezar, enseguida apreciamos que las potencias de $x$ vienen siempre acompañadas por un número combinatorio. No obstante, como dado $n\\in\\mathbb{N}$, tenemos que\n$$ \\binom{n}{n}=1, $$\npodemos reescribir la última columna del determinante dado por $f(x)$ de la siguiente manera:\n$$ f(x) = \\begin{vmatrix} \\binom{1}{0} \u0026amp; 0 \u0026amp; 0 \u0026amp;\\ldots \u0026amp; 0 \u0026amp; \\binom{1}{1}x^{\\phantom{1}}\\\\ \\binom{2}{0} \u0026amp; \\binom{2}{1} \u0026amp; 0 \u0026amp;\\ldots \u0026amp; 0 \u0026amp; \\binom{2}{2}x^2\\\\ \\binom{3}{0} \u0026amp; \\binom{3}{1} \u0026amp; \\binom{3}{2} \u0026amp; \\ldots \u0026amp; 0 \u0026amp; \\binom{3}{3}x^3\\\\ \\vdots \u0026amp; \\vdots \u0026amp; \\vdots \u0026amp; \\ddots \u0026amp; \\vdots \u0026amp; \\vdots\\\\ \\binom{k}{0} \u0026amp; \\binom{k}{1} \u0026amp; \\binom{k}{2} \u0026amp; \\ldots \u0026amp; \\binom{k}{k-1} \u0026amp; \\binom{k}{k}x^k\\\\ \\binom{k+1}{0} \u0026amp; \\binom{k+1}{1} \u0026amp; \\binom{k+1}{2} \u0026amp;\\ldots \u0026amp; \\binom{k+1}{k-1} \u0026amp; \\binom{k+1}{k+1}x^{k+1} \\end{vmatrix} $$\nAhora, centremos nuestra atención en la primera fila del determinante. Si sumamos el elemento que figura en la primera columna al que reside en la última, tendríamos\n$$ \\binom{1}{0} + \\binom{1}{1}x = (1+x)^1 = 1+x. $$\nEste hecho nos sugiere que llevemos a cabo la transformación sobre el determinante que consiste en sustituir la última columna por una combinación lineal de esta con la primera columna, que sabemos, por las propiedades de los determinantes, que no altera el valor de $f(x)$. Utilizando la notación habitual de operaciones sobre determinantes, estaríamos proponiendo llevar a cabo la transformación\n$$ C^{\\prime}_{k+1}\\rightarrow C_1 + C_{k+1}. $$\nPasemos, a continuación, a estudiar la segunda fila determinante. Con la idea del párrafo anterior en mente, ¿podemos llegar a conseguir el desarrollo del binomio $(1+x)^2$? En realidad, tenemos casi todos los elementos de dicho desarrollo, a falta de una $x$ que tendría que estar multiplicando al elemento que aparece en la segunda columna. No obstante, recordemos aquí que $x$ no es más que un número real, por lo que podríamos multiplicar toda la segunda columna por $x$ y sumarla, junto con la primera columna, a la última. Es decir, la idea es llevar a cabo la transformación\n$$ C^{\\prime}_{k+1}\\rightarrow C_1 + xC_2 + C_{k+1}, $$\nque permitiría que el elemento de la última columna fuese precisamente $(1+x)^2$.\nEmpezamos a atisbar un patrón aquí, ¿verdad? Analizando la tercera fila, llegaríamos a proponer la transformación\n$$ C^{\\prime}_{k+1}\\rightarrow C_1 + xC_2 + x^2C_3 + C_{k+1}, $$\ny, siguiendo con el razonamiento, la transformación que al final llevaremos a cabo sobre el determinante será …","date":1624057201,"expirydate":-62135596800,"kind":"section","lang":"es","lastmod":1624057201,"objectID":"ed4b2d1fc2dc0c54c2c560f8596933f2","permalink":"https://imalexissaez.github.io/problemas-oposicion/determinantes/","publishdate":"2021-06-19T00:00:01+01:00","relpermalink":"/problemas-oposicion/determinantes/","section":"problemas-oposicion","summary":"Problemas matemáticos de determinantes para la preparación de oposiciones al cuerpo de profesores de Enseñanza Secundaria, en la especialidad de matemáticas.","tags":null,"title":"Determinantes","type":"book"},{"authors":null,"categories":null,"content":"Problemas resueltos Pendiente de resolución. Problemas propuestos Problema 1: dado $x\u0026gt;0$, calcula\n$$ \\int{\\sqrt{\\frac{x^2+1}{x^2}}dx}. $$\n","date":1624489201,"expirydate":-62135596800,"kind":"section","lang":"es","lastmod":1624489201,"objectID":"718d49e941bceff8a603413257b80b33","permalink":"https://imalexissaez.github.io/problemas-oposicion/integracion/","publishdate":"2021-06-24T00:00:01+01:00","relpermalink":"/problemas-oposicion/integracion/","section":"problemas-oposicion","summary":"Problemas matemáticos de integración para la preparación de oposiciones al cuerpo de profesores de Enseñanza Secundaria, en la especialidad de matemáticas.","tags":null,"title":"Integración","type":"book"},{"authors":null,"categories":null,"content":"Problemas resueltos Pendiente de resolución. Problemas propuestos Problema 1: desde un punto exterior a un círculo se trazan dos secantes. El segmento interno (cuerda) de la primera secante mide $47$ m y el externo $9$ m. La cuerda de la segunda secante sobrepasa al segmento externo en $72$ m. Determina la longitud de la segunda secante.\nProblema 2: en el interior de un círculo de radio $13$ cm se da un punto $M$ que dista $5$ cm del centro del círculo. Por $M$ se traza una cuerda $AB$ que mide $25$ cm. Halla la longitud de los segmentos en que el punto $M$ divide a la cuerda $AB$.\nProblema 3: dada $x^2 + y^2 = 4$, halla la potencia del punto $(3, 3)$.\n","date":1625094001,"expirydate":-62135596800,"kind":"section","lang":"es","lastmod":1625094001,"objectID":"52f59f3c84280cbbb3932d9f0e9b84c3","permalink":"https://imalexissaez.github.io/problemas-oposicion/geometria-circunferencia/","publishdate":"2021-07-01T00:00:01+01:00","relpermalink":"/problemas-oposicion/geometria-circunferencia/","section":"problemas-oposicion","summary":"Problemas matemáticos de geometría de la circunferencia para la preparación de oposiciones al cuerpo de profesores de Enseñanza Secundaria, en la especialidad de matemáticas.","tags":null,"title":"Geometría de la circunferencia","type":"book"},{"authors":null,"categories":null,"content":"Problemas resueltos Pendiente de resolución. Problemas propuestos Problema 1: en una ciudad, el $55%$ de sus habitantes consume aceite del tipo $A$, el $30%$ del tipo $B$ y el $20%$ de ambos tipos de aceite. Se escoge una persona al azar.\n(a) Si esta consume aceite del tipo $A$, ¿cuál es la probabilidad de que consuma también del tipo $B$? (b) Si consume del tipo $B$, ¿cuál es la probabilidad de que no consuma del tipo $A$? (c) ¿Cuál es la probabilidad de que no consuma aceite del tipo $A$ ni del tipo $B$? Problema 2: para detectar la presencia de cierta enfermedad en un individuo perteneciente a una población determinada, se emplea un análisis tal que la probabilidad de que dé positivo, si el individuo analizado tiene realmente la enfermedad, es $0.96$. Se sabe que el $2\\%$ de los individuos de dicha población padecen la enfermedad; por otro lado, se ha llegado a establecer que, realizado el análisis sobre todos los individuos de la población, daría positivo en el $2.5\\%$ de los casos.\n(a) Calcula la probabilidad de que un individuo, cuyo análisis ha dado positivo, padezca la enfermedad en cuestión. (b) Calcula la probabilidad de que, al realizar el análisis a un individuo determinado, el diagnóstico resulte equivocado. ","date":1624662001,"expirydate":-62135596800,"kind":"section","lang":"es","lastmod":1624662001,"objectID":"88a985d8c36917e8fdb09b67e5a27f29","permalink":"https://imalexissaez.github.io/problemas-oposicion/probabilidad-condicionada/","publishdate":"2021-06-26T00:00:01+01:00","relpermalink":"/problemas-oposicion/probabilidad-condicionada/","section":"problemas-oposicion","summary":"Problemas matemáticos de probabilidad condicionada para la preparación de oposiciones al cuerpo de profesores de Enseñanza Secundaria, en la especialidad de matemáticas.","tags":null,"title":"Probabilidad condicionada","type":"book"},{"authors":null,"categories":null,"content":"Problemas resueltos Pendiente de resolución. Problemas propuestos Problema 1: calcula el valor de $\\sqrt[3]{8 + 3\\sqrt{21}} + \\sqrt[3]{8 - 3\\sqrt{21}}$.\nProblema 2: dada la figura, halla el valor de $x$.\nRepresentación gráfica de la situación planteada en el enunciado. Problema 3: dado un cuadrado, cuyo lado mide una unidad, halla la longitud del segmento $x$ que aparece en la figura, tangente a la semicircunferencia inscrita.\nRepresentación gráfica de la situación planteada en el enunciado. ","date":1624748401,"expirydate":-62135596800,"kind":"section","lang":"es","lastmod":1624748401,"objectID":"e3cdd3dcd5240fe34765c8598d6cea8c","permalink":"https://imalexissaez.github.io/problemas-oposicion/myd/","publishdate":"2021-06-27T00:00:01+01:00","relpermalink":"/problemas-oposicion/myd/","section":"problemas-oposicion","summary":"Problemas matemáticos de 'Mind your decisiones' para la preparación de oposiciones al cuerpo de profesores de Enseñanza Secundaria, en la especialidad de matemáticas.","tags":null,"title":"Mind your decisions","type":"book"},{"authors":["Alexis Sáez"],"categories":["Programación"],"content":" Índice 1. Introducción 2. Referencias 3. Historial de versiones del artículo 1. Introducción A estas alturas, he claudicado y me he resignado a que, seguramente, acabe el verano y no haya sido capaz de completar el curso de fundamentos de The Odin Project. ¡Es imposible! Hay una infinidad de “rabbit holes” en los que caer que son realmente tentadores. Aunque en el propio curso recomienda esquivarlos, mi capacidad para mirar hacia otro lado parece ser muy limitada.\nDe esta forma, una vez que he logrado salir del asociado a los comandos de la terminal de Linux, le ha tocado el turno a Git. Aunque es una herramienta que he estado utilizando durante más de un año, sí que es cierto que mi manejo de esta es muy básico. Utilizo únicamente el flujo de comandos git add, git commit y git push, desaprovechando así las tremendas posibilidades que sé que ofrece, pero que nunca me he esforzado por aprender.\nAsí pues, durante las siguientes semanas voy a trabajar este aspecto utilizando un recurso de la plataforma Udemy: el curso The Git \u0026amp; GitHub Bootcamp, que viene de la mano de Colt Steele. El instructor hace las sesiones muy amenas y el temario que cubre el curso, a primera vista y desde cierto desconocimiento, parece bastante completo. En mi caso, a partir de la cuarta sección de este, los conceptos y comandos que se nombran me resultan desconocidos.\nFinalmente, como estoy tomando apuntes en Obsidian mientras visualizo las lecciones (es todo un espectáculo ver la cantidad de aplicaciones que tengo abiertas a la hora de seguir cualquier curso), seguramente inicie una serie de entradas en el blog relacionadas con Git.\n2. Referencias The Git \u0026amp; GitHub Bootcamp The Odin Project 3. Historial de versiones del artículo 2023.06.25: Escribe la sección de introducción ","date":1687644001,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1687644001,"objectID":"bfb5984713db9b728ed145a2114ef5a0","permalink":"https://imalexissaez.github.io/2023/06/25/curso-de-git-y-github/","publishdate":"2023-06-25T00:00:01+02:00","relpermalink":"/2023/06/25/curso-de-git-y-github/","section":"post","summary":"En este curso aprenderemos a utilizar la herramienta de control de versiones más popular actualmente: Git. Además, examinaremos la plataforma GitHub, que facilita enormemente la posibilidad de trabajar de manera colaborativa.","tags":["Git","GitHub","The Odin Project"],"title":"Curso de Git y GitHub","type":"post"},{"authors":["Alexis Sáez"],"categories":["Programación"],"content":" Índice 1. Introducción 2. Navegando por el sistema de ficheros 3. Edición básica de archivos 4. Una breve mirada a Vim 5. Moviendo y renombrando archivos 6. Configurando la terminal 7. El archivo .bashrc original 8. Abordando el uso de alias 9. Introducción a los permisos en Linux 10. Examinando el uso de recursos del sistema 11. Gestionando los paquetes 12. Gestionando procesos en Linux 13. Revisando ‘’logs’’ 14. Gestionando usuarios 15. Examinando el historial de la terminal 16. Redirecciones 17. Streams 18. Variables 19. El comando find 20. Cambiando permisos numéricamente 21. Referencias 22. Historial de versiones del artículo 1. Introducción Esta semana he estado echando un vistazo a la plataforma The Odin Project y más concretamente a su curso de fundamentos, Foundations. Este es el punto de partida común que comparten las dos especializaciones de desarrollo web ofrecidas en este sitio: una basada en Ruby y otra en JavaScript.\nSu primera sección, ‘‘Introduction’’, es ciertamente interesante, pues trata temas tan variados como el aprendizaje en sí, la gestión de la frustración o la manera de realizar preguntas adecuadamente para obtener ayuda útil. Es un aspecto que la mayoría de los cursos no aborda y los recursos que ofrece esta plataforma son muy interesantes.\nCompletada dicha sección, la siguiente lleva por título ‘‘Prerequisites’’ y se centra en el funcionamiento básico de los ordenadores y de Internet. Además, es donde empezamos a configurar nuestro entorno de desarrollo para trabajar a lo largo de este curso. Como no podía ser de otra manera, sin ni tan siquiera haber generado un solo fichero, ya comienzan a aparecer los retos (que, por otra parte, bienvenidos sean tras las conclusiones que se extraen de las charlas que figuran en la sección ‘‘Introduction’’):\nThe Odin Project no da soporte oficial para Windows. ¿Qué sistema operativo utiliza un servidor? Efectivamente, Windows. No obstante, la plataforma no nos deja de lado y ofrece alternativas muy bien detalladas para seguir los contenidos de la especialización. A la hora de escribir estas líneas, estoy probando la emulación de una distribución de Linux, Xubuntu, a través de Oracle VM VirtualBox (he tenido hasta que trastear la BIOS para permitir la emulación en mi ordenador). La propia plataforma nos aconseja no caer en ‘‘rabbit holes’’ que nos distraigan y centrarnos en seguir sus contenidos. La misma plataforma, casi en cada uno de sus apartados, nos enseña docenas de tentadores ‘‘rabbit holes’’ en los que perdernos. De hecho, esta serie de artículos para el blog son fruto de haber caído en uno de ellos, pues una vez instalado Xubuntu recomiendan aprender los principales comandos que se emplean en su terminal. Para ello enlazan a una lista de reproducción en YouTube de 24 vídeos del canal LearnLinuxTV.\nA continuación, comparto las notas tomadas durante el cuarto vídeo, que corresponde al primero del curso en el cual se empieza a utilizar la terminal.\n2. Navegando por el sistema de ficheros Para empezar, el comando ls muestra el contenido del directorio actual de trabajo (ls es la abreviatura de ‘’list storage’’). Así, al iniciar una nueva terminal, accederíamos con él a los contenidos de la carpeta del usuario.\nSi tecleamos ls / accedemos a los contenidos almacenados en la raíz del sistema (/). Asimismo, con ls /home se muestran las carpetas habilitadas para los distintos usuarios del sistema. En mi caso, tras la instalación de Xubuntu siguiendo las instrucciones de la plataforma, únicamente aparece la carpeta alexis.\nPor comodidad, para limpiar la terminal y dejar de mostrar la información acumulada hasta el momento, podemos emplear el comando clear o, en ocasiones, dependiendo de la distribución de Linux que tengamos en nuestro sistema, la combinación de teclas Ctrl + L. Por otra parte, podemos añadir atributos a un comando de la terminal. Por ejemplo, si tecleamos ls -l / obtendremos mucha más información que antes de cada una de las carpetas y de los ficheros ubicados en la raíz del sistema (el atributo -l indica ‘’long listing’’). Además, cada carpeta o fichero aparece en su propia línea. Al inicio de cada una de las mencionadas líneas aparece una extraña secuencia de caracteres que, en su mayor parte, recoge los permisos asociados a la correspondiente carpeta o archivo. De momento, si nos centramos únicamente en el primer carácter:\nd: indica directorio o carpeta. -: indica que es un archivo. l: indica un enlace a otro archivo. Una alternativa a la combinación ls -l es el comando ll. En la raíz del sistema encontramos algunos directorios de vital importancia. Aunque de momento no entraremos en profundidad en los detalles de cada uno de ellos, para hacernos una idea resulta que:\nbin: es el directorio que contiene los programas ejecutables del sistema. boot: es el directorio que contiene los archivos necesarios para iniciar el sistema operativo. home: es el directorio asociado a los usuarios del sistema. etc: es el directorio que …","date":1685916001,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1686520801,"objectID":"10b818af7ea554cf416cbeee469cc628","permalink":"https://imalexissaez.github.io/2023/06/05/curso-de-comandos-de-linux/","publishdate":"2023-06-05T00:00:01+02:00","relpermalink":"/2023/06/05/curso-de-comandos-de-linux/","section":"post","summary":"En este curso aprenderemos a utilizar la terminal de *Linux* empezando desde los comandos más básicos y con el objetivo de emplear esta herramienta de una forma eficiente para realizar las operaciones cotidianas.","tags":["Linux","Terminal","The Odin Project"],"title":"Curso de comandos de Linux","type":"post"},{"authors":["Alexis Sáez"],"categories":["Reflexiones"],"content":"Antes de comenzar a escribir este artículo, me gustaría desear un Feliz Año Nuevo y un próspero 2023 a toda aquella persona que se adentre en estas líneas.\nRevisando el blog, encuentro que su último artículo data de septiembre de 2021. Como me sucede con otros proyectos personales, mi interés fluye al ritmo de extrañas mareas y se suceden períodos de frenética actividad, con etapas dignas de recibir el calificativo de hibernación. Si bien es cierto que ocasionalmente he actualizado el proyecto que recoge enlaces a artículos de opinión asociados con Educación, no puedo negar que el sitio web en sí ha sufrido un abandono de proporciones épicas.\nCon esta entrada tampoco quiero proclamar el advenimiento de tiempos de constante actualización, ni mucho menos. Todavía encuentro complicado gestionar el malabar que supone evitar que el trabajo me absorba por completo, ofrecer una atención a los estudiantes que no se ajuste a unos estándares demasiado elevados (a juicio de observadores externos…) y, además, compaginar todo ello con cierta normalidad en mi convivencia del día a día con mi pareja.\nRetahíla de quejas al margen, resulta que en una conversación con un compañero de departamento en esos eternos días previos a las Navidades, surgió una idea interesante. En la actualidad, se encarga de una optativa de 4º de la ESO y se ha animado a realizar una introducción a la programación utilizando Python. A este caldo de cultivo hay que añadir que, pocos días atrás, había caído en mis manos una copia de la tercera edición del libro Python Crash Course, de Eric Matthes y publicado por la curiosa editorial No Starch Press (sus libros no tienen desperdicio alguno y están escritos con un lenguaje muy ameno).\nPortada del libro en Amazon. Al ojear el índice de dicho libro, había observado que el autor dedica tres capítulos a implementar un juego utilizando la librería Pygame, un módulo desconocido para mí y que siempre me ha despertado curiosidad. Así pues, no tuve idea más brillante que comentar la posibilidad de escribir una adaptación de esos tres capítulos para desarrollarse durante la optativa.\nDe esta forma, buena parte de mis Navidades ha estado dedicada a una lectura activa del libro, reescribiendo los ejemplos y abordando todos los ejercicios que el autor propone, que no son pocos. El libro en sí hace honor a su título y pretende enseñar al lector una gran variedad de conceptos en el mínimo espacio y tiempo posible. Eso conlleva que, aunque se recomiende como lectura para principiantes, el ritmo propuesto sea un tanto elevado y algunas ideas requerirían quizá unas cuantas páginas adicionales. Si resulta el texto escogido para una primera aproximación a la programación, en algunos momentos no dudo que el lector experimente instantes de ‘’¿qué tipo de brujería es esta?’’.\nMientras he ido revisando sus páginas, he tenido siempre esa sensación que aparece cuando alguien lee de nuevo un libro. A medida que he avanzado, la mayoría de conceptos me resultan familiares, pero han quedado relegados al olvido. En Python, por falta de constancia principalmente, es cierto que no paso de ser un eterno principiante y como propósito de Año Nuevo me he establecido como meta intentar alcanzar un nivel intermedio. Quizá construir alguna aplicación gráfica, diseñar alguna página web desde cero… es decir, salir del nivel teórico del bloque ‘‘condicionales-bucles-funciones-clases’’ y trabajar con ellos a un nivel más aplicado.\nCon esta idea en mente, algunas búsquedas asociadas y unos anuncios personalizados que me conocen mejor que yo mismo, hace unos días aproveché una especie de rebajas que el portal Udemy ha ofrecido a sus usuarios. He de confesar que siempre me he decantado por adquirir libros antes que cursos a distancia. No obstante, algunas ofertas ofrecían tal cantidad de contenido, por un precio sumamente reducido, que ha sido muy difícil resistir la tentación.\nPor tanto, además de libro de Eric Matthes, he adquirido los siguientes cursos de Udemy:\n100 Days of Code: The Complete Python Pro Bootcamp for 2023 The Complete 2023 Web Development Bootcamp Ambos siguen ese formato bootcamp que tan de moda parece que está últimamente. Al momento de escribir estas líneas, ando enzarzado con el primero de ellos y he conseguido completar cuatro de las cien secciones que lo componen. Las sensaciones son buenas y los ejercicios que proponen me están resultando bastante amenos.\nQuizá vuelque parte del aprendizaje en el sitio web, aunque todavía no he pensado cómo lo llevaría a cabo. Cruzo los dedos para que el propósito de Año Nuevo tenga más éxito que el de acudir a un gimnasio.\n","date":1673128801,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1673128801,"objectID":"6578ddefee3529023b969f1f0716837b","permalink":"https://imalexissaez.github.io/2023/01/08/extranos-propositos-de-ano-nuevo/","publishdate":"2023-01-08T00:00:01+02:00","relpermalink":"/2023/01/08/extranos-propositos-de-ano-nuevo/","section":"post","summary":"Una conversación, un libro y unas *Navidades* llenas de código.","tags":["Python","Udemy"],"title":"Extraños propósitos de Año Nuevo","type":"post"},{"authors":["Alexis Sáez"],"categories":["Recursos"],"content":"El objetivo de esta entrada no es otro que listar cronológicamente una serie de artículos publicados en la prensa digital o en blogs personales relacionados bien con las matemáticas (tanto en su faceta educativa como en la divulgativa), bien con la educación en general.\nEn la medida de lo posible, intentaré incluir únicamente aquellos que puedan consultarse libremente o bien los pertenecientes a sitios webs con restricciones, pero que ofrezcan la posibilidad de acceder gratuitamente a cierto número de artículos en un período de tiempo dado.\nFecha Artículo 06/09/2022 Herramientas TIC para el curso 2022-23 04/09/2022 Currículo de mínimos y competencias básicas 04/09/2022 ¿Quién está destrozando la enseñanza secundaria? 02/09/2022 El método cooperativo en la enseñanza de Matemáticas funciona… en Nigeria 30/08/2022 La justicia paraliza la obligación de los ámbitos en Valencia y Educación intenta una solución de compromiso 25/08/2022 Amenazas y coacciones en la educación valenciana 25/08/2022 El “efecto dominó” de la decisión judicial sobre los ámbitos en la ESO 25/08/2022 El imperio de los mediocres 24/08/2022 El TSJ mantiene la suspensión cautelar de la obligatoriedad de los ámbitos en 1º de ESO 22/08/2022 Educación por ámbitos: La cruzada contra las explicaciones 21/08/2022 Analiza en su trabajo fin de grado la diferencia entre las matemáticas de Bachillerato y las impartidas en universidad 20/08/2022 Antes de jugar el comodín de la educación en Finlandia… ¡informaos! 19/08/2022 Sobre los ámbitos en 1º de la ESO 15/08/2022 Ahora somos un país de genios 10/08/2022 Selectividad ‘woke’ 04/08/2022 Debate: ¿Por qué las matemáticas son tan difíciles de aprender? 01/08/2022 La Educación que viene (y no deseo) (3) 31/07/2022 Una Selectividad que dé sentido a lo aprendido: compleja de diseñar e igual de exigente para los alumnos 27/07/2022 Así es la nueva selectividad (EBAU) que propone Educación: menos exámenes y un ejercicio de madurez que llegará a contar un 75% 27/07/2022 El Gobierno diseña una nueva Selectividad más fácil para los alumnos, con menos exámenes y una prueba de “madurez académica” 27/07/2022 El Gobierno revoluciona la Selectividad con la mitad de exámenes y una prueba de madurez académica 21/07/2022 ¿Por qué me inspira más el Panfleto Antipedagógico de Ricardo Moreno que una charla de alguno de esos que todos conocemos? 15/07/2022 La Educación que viene (y no deseo) (2) 01/07/2022 La Educación que viene (y no deseo) (1) 18/06/2022 Sin plan para septiembre: los retrasos con la Ley de Educación dejan en el aire las novedades del próximo curso 17/06/2022 Edujugadores de doble baraja 13/06/2022 Informe EE. La brecha de género invertida: por qué los chicos son peores estudiantes que las chicas y a nadie le importa 30/05/2022 Un fin de curso esperpéntico 11/04/2022 Los principios educativos de la UNESCO 04/04/2022 Catherine L’Ecuyer: “La escuela no es una agencia de colocación laboral” 02/04/2022 Gauss en la ESO: en torno a un decreto 01/04/2022 «Tirar la toalla de educar es el preámbulo a todos los desastres sociales» 31/03/2022 Cuando el conocimiento es magistral 27/03/2022 Altas capacidades: una condición llena de estereotipos, de casos sin identificar y donde también hay sesgo de género 25/03/2022 Aquello que no les damos 24/03/2022 Privatització encoberta 22/03/2022 La «Flipped Education» o el vuelco educativo 15/03/2022 Educación: ¿dónde están los héroes? 14/03/2022 Onofre Monzó, presidente de la FESPM: «Para enseñar matemáticas tienes que saber bastante más de lo que tienes que enseñar» 11/03/2022 La decadencia de la educación 10/03/2022 ¿Y si la inclusión educativa fuera algo muy diferente a lo que se nos obliga a hacer en los centros educativos? 06/03/2022 Sobre las ideas que expuso Carlos Monereo en el ‘Planta Baixa’ de TV3 05/03/2022 ¿Qué significa realmente la autonomía curricular de centro? 04/03/2022 Educación 451 26/02/2022 La educación devastada 25/02/2022 Macrogranjas de alumnado 23/02/2022 Sacad vuestra sucia burocracia de nuestras escuelas 23/02/2022 Un manifest contra el populisme antipedagògic 20/02/2022 “El fin de la educación” de Xavier Massó Aguadé 20/02/2022 Ojalá fueran malvados 17/02/2022 “La LOMLOE tiene muy preocupado a buena parte del profesorado” 13/02/2022 A vueltas con la evaluación: la obsesión de los ideólogos de la ’nueva educación’ con las notas y los exámenes 12/02/2022 ¿Ha bajado el nivel del alumnado? 11/02/2022 Alarma por la brecha de género educativa: la proporción de mujeres cae cada curso en Matemáticas, Informática y Tecnología 11/02/2022 ¿Por qué Castilla y León tiene la mejor educación de España? 11/02/2022 Sin estereotipos y con referentes femeninos: así se fomentan las vocaciones científicas en niñas y adolescentes 09/02/2022 Catherine L’Ecuyer: “Creo en la educación basada en las evidencias y no en las ocurrencias” 07/02/2022 Los deberes excesivos ahondan en la brecha social de los alumnos: “Hay padres que pueden ayudar; otros, no” 02/02/2022 La …","date":1640988001,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1640988001,"objectID":"3cec169e1d082abbc8ea0b0ba00055dd","permalink":"https://imalexissaez.github.io/2022/01/01/recorte-de-prensa-y-blogs-2022/","publishdate":"2022-01-01T00:00:01+02:00","relpermalink":"/2022/01/01/recorte-de-prensa-y-blogs-2022/","section":"post","summary":"El objetivo de esta entrada no es otro que listar *cronológicamente* una serie de artículos publicados en la prensa digital o en blogs personales relacionados bien con las matemáticas (tanto en su faceta educativa como en la divulgativa), bien con la educación en general.","tags":["Prensa"],"title":"Recorte de prensa y blogs (año 2022)","type":"post"},{"authors":["Alexis Sáez"],"categories":["Recursos"],"content":"El curso académico pasado tuve, entre mis materias a impartir, un taller de profundización de matemáticas en 4º de ESO. Una vez finalizado, he estado pensando durante este verano qué actividades incluir de cara a futuras iteraciones de esta asignatura (sea o no yo el responsable de impartir dicho taller). Una de las primeras ideas que acudió a mi mente fue explorar la posibilidad del uso de juegos de lógica e ingenio para desarrollar el pensamiento lógico-deductivo.\nAfortunadamente, en Internet existe una variedad impresionante de generadores de juegos de lógica e ingenio. Por ejemplo, destacaría la familia de juegos a los que podemos acceder desde esta web.\nEl siguiente paso por dar consistía en explorar las posibilidades que ofrece LaTeX de cara a generar, con el menor esfuerzo posible, fichas de este tipo de pasatiempos para ofrecérselas a los alumnos. A este respecto, existe un paquete de LaTeX que incorpora plantillas predeterminadas para una cantidad numerosa de juegos de lógica e ingenio y, además, permite la opción de extender, de manera relativamente sencilla, el paquete para que incluya otros juegos no contemplados. Se trata de logicpuzzle, cuya documentación es simplemente maravillosa. Para cada juego de lógica e ingenio que incorpora, lista los comandos particulares que lo genera y ofrece un ejemplo completo de código, tanto para el enunciado, como para la solución de dicho juego.\nPersonalmente, me he aventurado con algunos, como 2D-Sudoku, Battleship, Bokkusu, Bridges, Hitori, Kendoku o Killer Sudoku. He organizado los documentos a doble columna, dejando una de ellas de ancho reducido para incluir las instrucciones del juego y las de entrega de la ficha y otra columna más extensa que recoge los enunciados de los juegos en sí. El aspecto final de algunas de ellas se muestra a continuación:\nEjemplo de ficha para el juego Hashiwokakero. Ejemplo de ficha para el juego Shikaku. Ejemplo de ficha para el juego Kakurasu. Ejemplo de ficha para el juego Hitori. Ejemplo de ficha para el juego Killer Sudoku. Ejemplo de ficha para el juego Kenken. Ejemplo de ficha para el juego Sudoku. Ejemplo de ficha para el juego Bimaru. Si bien es cierto que unos juegos son algo más tediosos de escribir en LaTeX que otros, una vez te familiarizas con las instrucciones, las fichas se generan relativamente rápido. Así, nos queda un excelente recurso para materias de tipo taller o para esos días previos a cualquier periodo vacacional.\nFinalmente, mi intención es compartir todas las fichas en formato PDF (hasta la fecha, tengo doce generadas) en un proyecto cuando la disponibilidad de tiempo me lo permita.\n","date":1631916001,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1631916001,"objectID":"b495cb5c0b7bf8d308abd3356ec4b17b","permalink":"https://imalexissaez.github.io/2021/09/18/juegos-de-logica-e-ingenio-en-latex/","publishdate":"2021-09-18T00:00:01+02:00","relpermalink":"/2021/09/18/juegos-de-logica-e-ingenio-en-latex/","section":"post","summary":"¿Buscas cómo desarrollar el pensamiento lógico-deductivo en tu alumnado? ¿Qué te parecería conseguirlo a través de clásicos pasatiempos? ¿Y si, además, puedes hacerlo fácilmente empleando LaTeX?","tags":["LaTeX"],"title":"Juegos de lógica e ingenio en LaTeX","type":"post"},{"authors":["Alexis Sáez"],"categories":["Recursos"],"content":"Durante estas vacaciones de verano, de cara a elaborar materiales para mis cursos, he dedicado algunos momentos a investigar las posibilidades de ciertas plantillas y clases de LaTeX. Si por algo se caracteriza este lenguaje de marcado es por brindarte la excusa perfecta para procrastinar, pues siempre existe algún detalle a modificar o cierta característica que admite margen de mejora en nuestros documentos.\nExámenes Por lo que respecta a la elaboración de exámenes, me han resultado extremadamente atractivas las posibilidades que ofrece la clase exam. Su documentación es maravillosa, con multitud de ejemplos para la miríada de opciones que nos presenta a la hora de generar un examen en LaTeX. De entre ellas destacaría:\nLa tabla de puntuaciones, gestionada automáticamente a través de la propia clase. Las posibilidades de personalización de los distintos tipos de preguntas, incluyendo los entornos de solución de cuestiones. La gestión de cabeceras y pies de página es realmente cómoda. No obstante, es una clase preparada para generar exámenes con puntuaciones enteras no negativas (aunque admite fácilmente la posibilidad de añadir medios puntos). Acostumbrado como estoy a elaborar exámenes sobre $10$ puntos, donde la calificación de ciertos apartados asciende, por ejemplo, a $0.25$ puntos, $0.75$ puntos o $1.25$ puntos, no es sencillo incorporar esta funcionalidad a la clase exam. Si bien es cierto que es posible implementarla, según las opciones que uno desee para las preguntas de sus exámenes, puede suponer una cantidad considerable de modificaciones en la clase original.\nDurante este curso académico experimentaré con la opción de plantear exámenes sobre $100$ puntos a los alumnos, confiando que no les suponga mayor dificultad esta decisión.\nPor otro lado, recomiendo emplear la clase multicol junto a esta, pues el papel queda bastante bien aprovechado. Inspirándome en este ejemplo disponible en Overleaf, he adaptado alguno de los exámenes del curso académico anterior y resultado me parece bastante agradable a la vista. Por ejemplo, para la unidad didáctica de funciones de 3º de la E.S.O.,\nEjemplo de examen generado con la clase exam. Listas de ejercicios En el centro donde trabajo actualmente los alumnos no utilizan un libro de texto al uso de matemáticas en determinados niveles. Si bien esto no supone inconveniente alguno a la hora de impartir clase, pues vamos elaborando los apuntes de la materia día a día durante las diferentes sesiones, es un tanto incómodo cuando llega el momento de proponer actividades a los alumnos.\nDurante el curso pasado exploré las opciones disponibles para generar listas de ejercicios y, al final, me decanté por emplear la clase IEEEtran. Al igual que sucede con la clase exam, esta está también muy bien documentada y su organización en doble columna para una de sus opciones disponibles me permite incluir una buena cantidad de ejercicios por hoja, aprovechando así bastante el papel.\nEste verano, en un ejercicio de temeridad significativa, incluso me he animado a configurar algunos aspectos muy concretos de esta clase (espaciados en algunas partes del documento principalmente). No obstante, dadas sus múltiples opciones y el código remanente de versiones anteriores, hablamos de navegar por un archivo de más de $6000$ líneas de código. Cuanto menos, ha sido entretenido y, como bien indicaba al principio del artículo, me ha permitido procrastinar tareas de mayor calado.\nPor ejemplo, para la unidad didáctica de estadística de 4º de la E.S.O. esta sería la primera página de la lista de ejercicios:\nEjemplo de lista de ejercicios con la clase IEEEtran. Apuntes El hecho de no seguir libro de texto de matemáticas en algunos niveles me tienta poderosamente a elaborar mis propias notas de clase empleando LaTeX. No obstante, este es un proyecto a medio plazo que todavía no he iniciado (quizá este curso académico me anime, quizá no…), pero sí tengo claro que cuando llegue el momento empleare una de las siguientes plantillas:\nThe Legrand Orange Book: el aspecto visual de los documentos que genera esta plantilla es simplemente espectacular. Si bien es cierto que ya he dedicado tiempo a preparar la plantilla para que funcione todo adecuadamente en nuestro idioma y he estado investigando algunas de sus opciones, cada compilación que realizo de prueba refuerza mi impresión de que los libros que se elaboran con esta plantilla no son del todo adecuados para la E.S.O. o el Bachillerato. El resultado se acerca bastante más a la concepción que tengo en mi cabeza para un libro de texto universitario. kaobook: una plantilla que se inspira poderosamente en la famosa Tufte, con generosos márgenes para realizar anotaciones. Esta versión ofrece algunos añadidos interesantes sobre la original e incorpora de serie entornos de marco para matemáticas. Además, con ella no es muy complejo generar un documento que se asemeje al clásico libro de texto, pues nos permite tener una columna central de contenidos, una …","date":1630447201,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1630447201,"objectID":"9e143c1ea77987f15b57882f12c8bc1a","permalink":"https://imalexissaez.github.io/2021/09/01/algunas-plantillas-de-latex-interesantes/","publishdate":"2021-09-01T00:00:01+02:00","relpermalink":"/2021/09/01/algunas-plantillas-de-latex-interesantes/","section":"post","summary":"Recopilación de enlaces a diferentes plantillas (o clases) interesantes para elaborar exámenes, listas de ejercicios o apuntes utilizando LaTeX.","tags":["LaTeX"],"title":"Algunas plantillas de LaTeX interesantes","type":"post"},{"authors":["Alexis Sáez"],"categories":["Reflexiones"],"content":"Tras un período de inactividad bastante prolongado, me he animado a retomar Infinitos Contrastes y dedicarle un poco tiempo durante las próximas semanas. Así pues, he revisado qué novedades ha ido introduciendo la plantilla que empleo para generarla y ha habido una que ha llamado poderosamente mi atención: la página tipo “book”. El cambio que más me ha gustado, sin duda alguna, es la mejora en la gestión de los índices, permitiéndome organizarlos por pesos, en lugar de alfabéticamente, que era la única opción disponible antes.\nDe esta manera, he decidido fusionar dos de los proyectos existentes hasta la fecha en la web: el de problemas de oposición resueltos y el de problemas de oposición propuestos. Además, en lugar de tener cada pieza de ellos desperdigada en artículos del blog, quedan así recogidos como si fueran las páginas de un libro en línea, un resultado más coherente con la filosofía de esta idea. Se puede acceder al resultado a través de este enlace. Si bien es cierto que la extensión de algunas páginas es considerable (véase la relativa a teoría de números o la asociada a combinatoria), en general, estoy más que satisfecho con el aspecto final del nuevo proyecto y la idea es continuar extendiéndolo sin prisa, pero sin pausa.\nPágina de presentación del proyecto Problemas (Oposición) En la misma línea, le he dado también un lavado de cara a la recopilación de notas del curso introductorio a Python. De igual forma, en lugar de forzar una navegación sobre cerca de ochenta páginas, he agrupado los contenidos por temáticas, compactándolos así. Tal y como sucede como con el anterior proyecto, algunos de sus apartados son ciertamente extensos (véase el asociado a la programación orientada a objetos), pero el aspecto final (que se puede consultar a través de este enlace), en mi opinión, es mucho más agradable que presentado hasta la fecha.\nPágina de presentación del proyecto Curso Python (Nivel básico) Además, los dos proyectos relacionados con el valenciano que estaban disponibles en la página web han sido fusionados en uno único (que se puede consultar a través de este enlace). Si bien es cierto que ha quedado obsoleta la sección referida a la capacitación en valenciano, como continúa siendo material en valenciano y está relacionado con la educación, he decidido conservarla.\nPágina de presentación del proyecto Valencià Finalmente, he reorganizado los módulos de la página inicial, dando prioridad a aquellos relacionados con el contenido en lugar de a los asociados con mi currículo.\n","date":1625263201,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1625263201,"objectID":"92b6167062e5405a40f256032674f730","permalink":"https://imalexissaez.github.io/2021/07/03/retomando-la-pagina-web/","publishdate":"2021-07-03T00:00:01+02:00","relpermalink":"/2021/07/03/retomando-la-pagina-web/","section":"post","summary":"Tras un período de inactividad bastante prolongado, me he animado a retomar Infinitos Contrastes y dedicarle un poco tiempo durante las próximas semanas. Así pues, he revisado qué novedades ha ido introduciendo la plantilla que empleo para generarla y ha habido una que ha llamado poderosamente mi atención: la página tipo book.","tags":["Blog","Proyectos"],"title":"Retomando la página web","type":"post"},{"authors":null,"categories":null,"content":"","date":1624057201,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1624143601,"objectID":"9f70c2fabd2468be39c9ca0649379279","permalink":"https://imalexissaez.github.io/proyecto/problemas-de-oposicion/","publishdate":"2021-06-19T00:00:01+01:00","relpermalink":"/proyecto/problemas-de-oposicion/","section":"project","summary":"Recopilación de diversos problemas matemáticos (tanto resueltos, como propuestos) de cara a la preparación de la parte práctica de las oposiciones al cuerpo de profesores de Enseñanza Secundaria, en la especialidad de matemáticas.","tags":["Matemáticas","Oposición"],"title":"Problemas (Oposición)","type":"project"},{"authors":["Alexis Sáez"],"categories":["Recursos"],"content":"El objetivo de esta entrada no es otro que listar cronológicamente una serie de artículos publicados en la prensa digital o en blogs personales relacionados bien con las matemáticas (tanto en su faceta educativa como en la divulgativa), bien con la educación en general.\nEn la medida de lo posible, intentaré incluir únicamente aquellos que puedan consultarse libremente o bien los pertenecientes a sitios webs con restricciones, pero que ofrezcan la posibilidad de acceder gratuitamente a cierto número de artículos en un período de tiempo dado.\nFecha Artículo 31/12/2021 Existen infinitos más grandes que otros: Las desconcertantes propiedades del infinito 31/12/2021 ¡¡Felices Fiestas y Feliz Año Esfénico 2022!! 30/12/2021 Acosados por ser educados 26/12/2021 L’educació per àmbits punxa en segon d’ESO 24/12/2021 ¿Cómo calcular el volumen de un cubo? Un viaje a la cuarta dimensión 21/12/2021 Contra la LOMLOE/1: Titular Bachillerato con suspensos y la nueva dominación social 15/12/2021 Contra el nuevo absolutismo educativo 13/12/2021 Trigonometría, el puente que une todas las matemáticas 11/12/2021 Granada desvela los secretos matemáticos del Al-Ándalus 09/12/2021 «Hay que empezar a pensar en nuestro renacimiento intelectual» 09/12/2021 Los nuevos currículos priorizan la educación socioemocional en la escuela: “El que se siente bien, aprende mejor” 06/12/2021 La clave del éxito de la educación en Estonia no es la innovación 05/12/2021 Así se ha convertido Estonia en la nueva Finalandia 05/12/2021 Becky Francis: “Si dejas una clase de 30 alumnos en 15 ves un gran impacto en el resultado de los estudiantes” 03/12/2021 Innovadoramente tradicionales 02/12/2021 Problemas educativos más importantes que el currículo y las ratios: Bitcoins, NFT, Instagram y acoso en red 02/12/2021 Sobre el nuevo ‘curriculum’: ¿qué pasará con la sintaxis en la clase de lengua de secundaria? 01/12/2021 Paseando entre árboles de Pitágoras 26/11/2021 El “acoso” de las familias es la principal preocupación de los docentes 25/11/2021 Trabajo por ámbitos: el destrozo educativo de la Comunitat Valenciana 22/11/2021 Educar en una sociedad crédula 21/11/2021 Pasar de curso 20/11/2021 Las inteligencias múltiples, con las evidencias que tenemos actualmente, NO existen 19/11/2021 Así se contiene ahora la tensión en las aulas 19/11/2021 Manadas en el aula 19/11/2021 Las otras consecuencias de pasar de curso con suspensos: «Estamos generando una sociedad manipulable» 18/11/2021 Pascual Gil: «Hay que vaciar las facultades de Educación de pseudociencias» 17/11/2021 Evaluación, promoción (y si se tercia, titulación) en Primaria, ESO, Bachillerato y FP 15/11/2021 Gregorio Luri: “Creo que en pedagogía reflexionamos mal” 15/11/2021 Los padres abandonan la pedagogía moderna 14/11/2021 Qué está pasando con la educación en Finlandia: “Los profesores piensan en dejarlo” 12/11/2021 La imposició dels àmbits al País Valencià 09/11/2021 Deseducación y determinismo social 08/11/2021 Las matemáticas del ojo: un estudio descubre que la pupila percibe información numérica 08/11/2021 ¿Por qué los buenos docentes no son asesores educativos? 03/11/2021 Catherine L’Ecuyer: «Cuanta más educación hay en las aulas parece que menos haya en los alumnos» 01/11/2021 ¿Expertos educativos o fugitivos de la tiza? 31/10/2021 Igualitarismo educativo 30/10/2021 La vida es lo que empieza después del trabajo 30/10/2021 “Por el camino se quedan más mujeres matemáticas que hombres” 28/10/2021 Desaparece Filosofía en la ESO, aparecen los siervos 28/10/2021 Los alumnos podrán hacer el Bachillerato en tres cursos y llegar con un suspenso a Selectividad 28/10/2021 Menos Filosofía, menos Historia de España, menos Matemáticas, menos Educación Física,… así será la nueva distribución de Bachillerato 28/10/2021 Nace “ARRECIFE”, la revista digital de APIA 28/10/2021 Todo lo que se va a estudiar en bachillerato: así son las 42 asignaturas y el reparto de horarios diseñado por el Gobierno 27/10/2021 Axiomas naturales para las matemáticas y el problema del continuo 26/10/2021 Arte y matemáticas en los mosaicos de la Alhambra 26/10/2021 Kurt Gödel: racionalidad inconsistente 21/10/2021 Los nuevos currículos de Secundaria, una “revolución” que deja elegir a los docentes el contenido de las asignaturas 18/10/2021 Finlandia, un sistema educativo en caída libre 18/10/2021 Lista de evidencias que sugieren que las pantallas no mejoran la educación (de hecho, la empeoran) 15/10/2021 El nuevo currículo de la ESO no menciona los logaritmos en Matemáticas y reduce la historia literaria 15/10/2021 Propuestas para mejorar los estudios de Matemáticas 11/10/2021 El modelo educativo de Estonia y Finlandia 08/10/2021 El borrador del nuevo diseño de la ESO: más práctica, más autonomía para los institutos y con perspectiva de género 08/10/2021 Estos son los contenidos y horas que tendrán todas las asignaturas de la ESO: de feminismo y derechos LGTBI a alfabetización digital 04/10/2021 ¿Democracia o “dictablanda” en el aula? …","date":1609452001,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1609452001,"objectID":"516add215d87c5986dd7f7fe8d001661","permalink":"https://imalexissaez.github.io/2021/01/01/recorte-de-prensa-y-blogs-2021/","publishdate":"2021-01-01T00:00:01+02:00","relpermalink":"/2021/01/01/recorte-de-prensa-y-blogs-2021/","section":"post","summary":"El objetivo de esta entrada no es otro que listar *cronológicamente* una serie de artículos publicados en la prensa digital o en blogs personales relacionados bien con las matemáticas (tanto en su faceta educativa como en la divulgativa), bien con la educación en general.","tags":["Prensa"],"title":"Recorte de prensa y blogs (año 2021)","type":"post"},{"authors":["Alexis Sáez"],"categories":["Recursos"],"content":"A través de YouTube, tenemos la oportunidad de disfrutar de las ponencias que se han desarrollado en la XXI edición del Encuentro Nacional de Estudiantes de Matemáticas (ENEM). Podemos acceder al canal desde este enlace y a la página web del evento desde este enlace.\nA continuación, a modo de recurso personal, listo las diferentes charlas que han tenido lugar:\nInauguración Mesa redonda: “Docencia e investigación online vs docencia e investigación presencial” Matemáticas en tiempos de pandemia Detección y corrección de datos atípicos en alta dimensionalidad Matemáticas, lenguas y otros asuntos ¿Podemos programar usando únicamente bucles for? La realeza de las matemáticas ¿Qué hace una matemática como tú en un instituto como este? Las matemáticas y las TIC: una relación de futuro $\\pi$ está en todas partes Desafíos matemáticos para la Inteligencia Artificial Las matemáticas: una cuestión de cabeza… y corazón Álgebra en el museo Las matemáticas de la teoría de la conspiración Detección de las emociones mediante el Aprendizaje Automático $1 + 2 + 3 + \\ldots = -1 / 12$: cómo sumar cosas que me dijeron que no se podían sumar Matemáticas en la arquitectura de ayer y de hoy Regularidades, sorpresas y excepciones: una excursión a través de las dimensiones Un teorema poético Cazando el espacio a lazo ¿Puede la Inteligencia Artificial detectar el cyberbullying? Análisis estadístico aplicado al fútbol femenino Hábitos de vida saludable y rendimiento académico en alumnado universitario. Una investigación mediante encuesta La calculadora desde Primaria a Bachillerato: un recurso desconocido Divulgando matemáticas Por qué te vas a equivocar Viaje al centro de Google La belleza de la simulación numérica, sus matemáticas y matemáticos Algunas de las salidas profesionales más demandadas para perfiles matemáticos Un problema con final feliz Problemas y formula(ciones) mágicas La transformada de Fourier te ayuda a entender cómo funciona Shazam Estructura y aleatoriedad de los números primos Despedida y premios ","date":1596319201,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1596319201,"objectID":"b9e7b37a72d1649ba4adcd5c31190875","permalink":"https://imalexissaez.github.io/2020/08/02/videos-del-xxi-enem-en-valladolid-2020/","publishdate":"2020-08-02T00:00:01+02:00","relpermalink":"/2020/08/02/videos-del-xxi-enem-en-valladolid-2020/","section":"post","summary":"En este artículo se enlazan diferentes vídeos correspondientes a las ponencias de este año del Encuentro Nacional de Estudiantes de Matemáticas celebrado en Valladolid.","tags":["ENEM","Valladolid","YouTube"],"title":"Vídeos del XXI ENEM en Valladolid (2020)","type":"post"},{"authors":["Alexis Sáez"],"categories":["Recursos"],"content":"La Sociedad de Educación Matemática de la Comunidad Valenciana (SEMCV) Al-Khwarizmi nos ofrece la posibilidad de disfrutar, en diferido, de unos talleres de GeoGebra llevados a cabo entre los días 20 y 24 de julio. El comunicado oficial está disponible en este enlace, de donde, a continuación, adjunto el cartel anunciador de los mencionados talleres y sus correspondientes vídeos.\nCartel anunciador para los talleres de GeoGebra. La belleza de las matemáticas (José Antonio Mora) GeoGebra 3D (Bernat Ancochea Millet) Construcción de flores (Debora Pereiro Carbajo) Estadística con GeoGebra (Alejandro Gallardo) Aplicaciones en el AULA con GeoGebra (Lluís Bonet) ","date":1595973601,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1595973601,"objectID":"97f9ba1a8ef6f7f12b2265071856ae2c","permalink":"https://imalexissaez.github.io/2020/07/29/videos-de-los-talleres-de-geogebra-2020-de-la-semcv/","publishdate":"2020-07-29T00:00:01+02:00","relpermalink":"/2020/07/29/videos-de-los-talleres-de-geogebra-2020-de-la-semcv/","section":"post","summary":"En este artículo se enlazan diferentes vídeos correspondientes a los talleres de este año sobre GeoGebra que ha organizado la SEMCV.","tags":["Al-Khwarizmi","GeoGebra","SEMCV","YouTube"],"title":"Vídeos de los talleres de GeoGebra 2020 de la SEMCV","type":"post"},{"authors":["Alexis Sáez"],"categories":["Recursos"],"content":"El 11 de febrero es el Día internacional de la mujer y la niña en la ciencia y con motivo de su celebración podemos acudir a esta excelente web, que cuenta con un número abrumador de recursos para trabajar en el aula (además de recomendaciones a realizar fuera de ella).\nEs fácil perderse durante horas y horas navegando por los distintos enlaces disponibles, por lo que me gustaría destacar dos de sus apartados:\nMateriales para actividades: autoexplicativo. Pioneras: breves biografías de mujeres científicas. Por mi parte, tengo en mente que el alumnado de 1º de la ESO visualice la siguiente charla propuesta, que combina la vertiente histórica el tema con ilustraciones y estimo les resultará atractivo este enfoque:\nPara después utilizar alguno de los juegos recomendados en la web. Todavía estoy en fase de exploración, por lo que aún no me he decantado por ninguno.\n","date":1580940001,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1580940001,"objectID":"597e1d7dee09d57de6fd4c1e8eab9ad0","permalink":"https://imalexissaez.github.io/2020/02/06/11f-dia-internacional-de-la-mujer-y-la-nina-en-la-ciencia/","publishdate":"2020-02-06T00:00:01+02:00","relpermalink":"/2020/02/06/11f-dia-internacional-de-la-mujer-y-la-nina-en-la-ciencia/","section":"post","summary":"En este artículo se enlazan diferentes recursos interesantes relacionados con la celebración del 11F.","tags":["11F","YouTube"],"title":"11F: Día internacional de la mujer y la niña en la ciencia","type":"post"},{"authors":["Alexis Sáez"],"categories":["Recursos"],"content":"La Fundación Española para la Ciencia y la Tecnología publicó hace unos días un interesante calendario con el propósito de divulgar la cultura científica en las aulas y, además, visibilizar a las mujeres científicas y tecnólogas.\nPortada del calendario. Podemos acceder a él a través de este enlace y entre sus puntos fuertes destacaría:\nSu disponibilidad en cinco lenguas: castellano, gallego, euskera, catalán y asturiano. La guía didáctica que lo acompaña, que cuenta con diferentes actividades sugeridas. Están organizadas en función de la etapa educativa en la que se encuentre el alumnado con el que deseemos trabajar este recurso. No obstante, en mi opinión, tras una rápida primera visualización, encuentro que la organización del calendario presenta una considerable cantidad de espacio desaprovechado (sobre todo en la parte asociada al final de cada mes). De cara a su posible impresión, me habría gustado un enfoque más clásico, que utilizara únicamente una página por mes.\n","date":1580508001,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1580508001,"objectID":"2d24173d2ff0eb649d8b2a6cc7f0df7c","permalink":"https://imalexissaez.github.io/2020/02/01/calendario-cientifico-escolar-2020-fecyt/","publishdate":"2020-02-01T00:00:01+02:00","relpermalink":"/2020/02/01/calendario-cientifico-escolar-2020-fecyt/","section":"post","summary":"Recurso muy completo (y publicado en varias lenguas) para divulgar la ciencia a través del uso de un calendario.","tags":["Calendario","FECYT"],"title":"Calendario científico escolar 2020 (FECYT)","type":"post"},{"authors":["Alexis Sáez"],"categories":["Recursos"],"content":"La Universidad de Sevilla pone a nuestra disposición un interesante recurso ahora que se aproxima el Día Internacional de la Mujer: “Científicas, el cómic”.\nPortada del cómic y protagonistas. Se puede acceder a él a través de este enlace e incluso disponemos de una guía didáctica con actividades sugeridas relacionadas con el tema. La calidad de las ilustraciones es excelente y el contenido está seleccionado y diseñado de una forma que hace que resulte una lectura muy amena.\nNo obstante, me gustaría destacar que el cómic no es más que uno de los apartados de la propia web, que “esconde” otro recurso maravilloso: un corto que resume la obra de teatro. Su duración es de apenas 20 minutos, de manera que es factible que el alumnado lo visualice en una sesión y después la complementemos, por ejemplo, con algunas de las actividades disponibles en la propia web.\n","date":1580335201,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1580335201,"objectID":"82ac25f1bc17785a0e9656d3011b0f0f","permalink":"https://imalexissaez.github.io/2020/01/30/cientificas-pasado-presente-y-futuro-comic-y-corto/","publishdate":"2020-01-30T00:00:01+02:00","relpermalink":"/2020/01/30/cientificas-pasado-presente-y-futuro-comic-y-corto/","section":"post","summary":"Gran iniciativa de la Universidad de Sevilla para dar visibilidad a la presencia de mujeres en la ciencia en todas las épocas.","tags":["Cómic","Teatro","Universidad de Sevilla","YouTube"],"title":"Científicas: pasado, presente y futuro (cómic + corto)","type":"post"},{"authors":["Alexis Sáez"],"categories":["Recursos"],"content":"Me acaban de recomendar un más que interesante vídeo del canal de YouTube LemnisMath, que introduce la conocida paradoja de la costa y se convierte así en un excelente recurso para introducir al alumnado en el mundo de los fractales (previo paso por el método exhaustivo).\nSu duración es inferior a diez minutos, por lo que da pie a una breve discusión posterior y plantear alguna actividad relacionada con los dos temas principales que aparecen. Además, comentan que es el principio de una serie, por lo que conviene que estemos atentos (o más bien suscritos) al canal para disfrutar de futuros contenidos.\n","date":1580248801,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1580248801,"objectID":"c384cda07cde3c1ba09f7d2cb160d934","permalink":"https://imalexissaez.github.io/2020/01/29/la-paradoja-de-la-costa/","publishdate":"2020-01-29T00:00:01+02:00","relpermalink":"/2020/01/29/la-paradoja-de-la-costa/","section":"post","summary":"En este artículo se recoge un más que interesante vídeo que podemos utilizar en el aula para introducir el método exhaustivo y el tema de los fractales.","tags":["Fractales","LemnisMath","Método exhaustivo","YouTube"],"title":"La paradoja de la costa","type":"post"},{"authors":["Alexis Sáez"],"categories":["Reflexiones"],"content":"Por desgracia, en la última versión del tema Academic, los desarrolladores han decidido cambiar el tipo de Markdown que hasta la fecha venía incorporado en la plantilla.\nEl principal efecto de tal acción para esta página web reside en las expresiones matemáticas, que han dejado de mostrarse adecuadamente en los artículos.\nDado que su número es significativo, aprovecharé paulatinamente este período vacacional que se aproxima para ir revisando, uno por uno, la correcta visualización de los artículos afectados.\nActualización: revisados todos los artículos afectados hasta la fecha.\n","date":1576274401,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1576274401,"objectID":"b5511a2234c1289d9786e47552382806","permalink":"https://imalexissaez.github.io/2019/12/14/una-dolorosa-incidencia-con-el-tema/","publishdate":"2019-12-14T00:00:01+02:00","relpermalink":"/2019/12/14/una-dolorosa-incidencia-con-el-tema/","section":"post","summary":"La última actualización ha cambiado la versión de Markdown utilizada y ahora las expresiones matemáticas no se muestran adecuadamente.","tags":["Incidencia","Markdown"],"title":"Una dolorosa incidencia con el tema","type":"post"},{"authors":["Alexis Sáez"],"categories":["Programación"],"content":"1. Funciones lambda 1.1. Vídeo 1.2. Notas personales En esta lección, estudiaremos las funciones lambda. Una función lambda es una función anónima, y se utilizan en Python a la hora de programar para abreviar, ya que aligera la sintaxis del código. Además, no ocupan lugar en el espacio de nombres asociado a las funciones de una aplicación.\nCualquier tarea que llevemos a cabo con una función lambda se puede desarrollar mediante una función normal, pero no así a la inversa (sobre todo cuando su lógica es compleja).\nPor ejemplo, para calcular el área de un triángulo, podemos construir la función:\ndef area_triangulo(b, h): return b * h / 2 for b in range(1, 10, 5): for h in range(1, 10, 5): print( f\u0026#34;El área del triángulo de base {b} y altura {h} es {area_triangulo(b, h)}.\u0026#34; ) El área del triángulo de base 1 y altura 1 es 0.5. El área del triángulo de base 1 y altura 6 es 3.0. El área del triángulo de base 6 y altura 1 es 3.0. El área del triángulo de base 6 y altura 6 es 18.0. No obstante, una función tan sencilla puede ser abreviada como una función lambda.\narea_triangulo = lambda b, h: b * h / 2 for b in range(1, 10, 5): for h in range(1, 10, 5): print( f\u0026#34;El área del triángulo de base {b} y altura {h} es {area_triangulo(b, h)}.\u0026#34; ) El área del triángulo de base 1 y altura 1 es 0.5. El área del triángulo de base 1 y altura 6 es 3.0. El área del triángulo de base 6 y altura 1 es 3.0. El área del triángulo de base 6 y altura 6 es 18.0. Nota: las funciones lambda, generalmente, no se asignan a variables. En tales casos, conviene hacer uso de la instrucción def y definir una función tal y como estamos habituados.\nUsadas ‘‘al vuelo’’, su sintaxis queda como sigue:\nprint(\u0026#34;El cubo de 3 es \u0026#34; + str((lambda x:x**3) (3))) El cubo de 3 es 27 1.3. Código fuente El código fuente y los posibles ficheros externos generados correspondientes a esta lección se encuentran disponibles para su consulta en la carpeta /lecciones/66/ del repositorio.\n2. Filter 2.1. Vídeo 2.2. Notas personales En esta lección, estudiaremos la función filter(), que forma parte de un conjunto de funciones conocidas como ‘‘de orden superior’’ y nos permiten utilizar en Python el paradigma de programación funcional. La mencionada función verifica que los elementos de una secuencia cumplen una condición, devolviendo un iterador compuesto por aquellos que la satisfacen.\nPor ejemplo, podemos construir un programa que detecte qué números son pares y cuáles no lo son, devolviéndonos una lista compuesta por los que verifiquen dicha condición:\ndef numero_par(num): if num % 2 == 0: return True numeros = [17, 24, 7, 39, 8, 51, 92] print(filter(numero_par, numeros)) # objeto iterable print(list(filter(numero_par, numeros))) \u0026lt;filter object at 0x0000029E5BA262B0\u0026gt; [24, 8, 92] La función numero_par() la podemos abreviar un tanto como sigue:\ndef numero_par(num): return num % 2 == 0 Es más, como es tan sencilla, incluso podemos prescindir de ella utilizando una función lambda:\nnumeros = [17, 24, 7, 39, 8, 51, 92] print(list(filter(lambda x: x % 2 == 0, numeros))) [24, 8, 92] Habitualmente, utilizaremos la función filter() para filtrar objetos. Por ejemplo, supongamos que tenemos varias instancias de la clase Empleado y deseamos filtrarlas por el valor de uno de sus atributos:\nclass Empleado: def __init__(self, nombre, cargo, salario): self.nombre = nombre self.cargo = cargo self.salario = salario def __str__(self): return f\u0026#34;{self.nombre} trabaja como {self.cargo} y cobra {self.salario} €.\u0026#34; lista_empleados = [ Empleado(\u0026#34;Juan\u0026#34;, \u0026#34;Director\u0026#34;, 75000), Empleado(\u0026#34;Ana\u0026#34;, \u0026#34;Presidenta\u0026#34;, 85000), Empleado(\u0026#34;Antonio\u0026#34;, \u0026#34;Administrativo\u0026#34;, 25000), Empleado(\u0026#34;Sara\u0026#34;, \u0026#34;Secretaria\u0026#34;, 27000), Empleado(\u0026#34;Mario\u0026#34;, \u0026#34;Botones\u0026#34;, 21000) ] salarios_altos = filter(lambda e: e.salario \u0026gt; 50000, lista_empleados) [print(s.__str__()) for s in salarios_altos] Juan trabaja como Director y cobra 75000 €. Ana trabaja como Presidenta y cobra 85000 €. A modo de curiosidad, ya que me he avanzado y he utilizado comprensiones de listas (ver la última línea del bloque de código anterior), resulta que mediante ellas, en este ejemplo concreto, no es necesario recurrir al uso de la función filter():\nclass Empleado: def __init__(self, nombre, cargo, salario): self.nombre = nombre self.cargo = cargo self.salario = salario def __str__(self): return f\u0026#34;{self.nombre} trabaja como {self.cargo} y cobra {self.salario} €.\u0026#34; lista_empleados = [ Empleado(\u0026#34;Juan\u0026#34;, \u0026#34;Director\u0026#34;, 75000), Empleado(\u0026#34;Ana\u0026#34;, \u0026#34;Presidenta\u0026#34;, 85000), Empleado(\u0026#34;Antonio\u0026#34;, \u0026#34;Administrativo\u0026#34;, 25000), Empleado(\u0026#34;Sara\u0026#34;, \u0026#34;Secretaria\u0026#34;, 27000), Empleado(\u0026#34;Mario\u0026#34;, \u0026#34;Botones\u0026#34;, 21000) ] [print(e.__str__()) for e in lista_empleados if e.salario \u0026gt; 50000] Juan trabaja como Director y cobra 75000 €. Ana trabaja como Presidenta y cobra 85000 €. 2.3. Código fuente El código fuente y los posibles ficheros externos generados correspondientes a esta lección se encuentran disponibles para su consulta en la carpeta /lecciones/67/ del repositorio.\n3. Map 3.1. Vídeo 3.2. Notas personales En esta …","date":1567828779,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1567828779,"objectID":"5ea29b6311d17216a5749a2bb495684d","permalink":"https://imalexissaez.github.io/2019/09/07/curso-de-python-12-nivel-basico/","publishdate":"2019-09-07T05:59:39+02:00","relpermalink":"/2019/09/07/curso-de-python-12-nivel-basico/","section":"post","summary":"Temas avanzados","tags":["Python"],"title":"Curso de Python #12 (Nivel básico)","type":"post"},{"authors":["Alexis Sáez"],"categories":["Programación"],"content":"1. Práctica guiada I 1.1. Vídeo 1.2. Notas personales En esta lección, y con el objetivo de reforzar los contenidos vistos hasta la fecha, comenzaremos a esbozar una aplicación gráfica de tipo CRUD. Mediante ella, conectaremos con una base de datos (BBDD) y podremos realizar las operaciones básicas: Create, Read, Update y Delete.\nEn el vídeo se explican los diferentes elementos y funcionalidades que caracterizan a la aplicación propuesta, por si queremos lanzarnos a su elaboración de antemano. No obstante, se procederá a su implementación en posteriores lecciones.\n2. Práctica guiada II 2.1. Vídeo 2.2. Notas personales En esta lección, comenzaremos a esbozar la interfaz gráfica de nuestra aplicación CRUD. Para ello, empezamos tecleando:\nfrom tkinter import Tk # Raíz de la aplicación root = Tk() root.title(\u0026#34;Aplicación CRUD\u0026#34;) root.iconbitmap(\u0026#34;icon.ico\u0026#34;) # Ejecución de la aplicación root.mainloop() A continuación, generamos la barra de menú superior:\n# Menú superior de la aplicación barra_menu = Menu(root) root.config(menu=barra_menu) bbdd_menu = Menu(barra_menu, tearoff=0) bbdd_menu.add_command(label=\u0026#34;Conectar\u0026#34;) bbdd_menu.add_separator() bbdd_menu.add_command(label=\u0026#34;Salir\u0026#34;) borrar_menu = Menu(barra_menu, tearoff=0) borrar_menu.add_command(label=\u0026#34;Borrar campos\u0026#34;) crud_menu = Menu(barra_menu, tearoff=0) crud_menu.add_command(label=\u0026#34;Crear\u0026#34;) crud_menu.add_command(label=\u0026#34;Leer\u0026#34;) crud_menu.add_command(label=\u0026#34;Actualizar\u0026#34;) crud_menu.add_command(label=\u0026#34;Borrar\u0026#34;) help_menu = Menu(barra_menu, tearoff=0) help_menu.add_command(label=\u0026#34;Licencia\u0026#34;) help_menu.add_separator() help_menu.add_command(label=\u0026#34;Acerca de...\u0026#34;) barra_menu.add_cascade(label=\u0026#34;BBDD\u0026#34;, menu=bbdd_menu) barra_menu.add_cascade(label=\u0026#34;Borrar\u0026#34;, menu=borrar_menu) barra_menu.add_cascade(label=\u0026#34;CRUD\u0026#34;, menu=crud_menu) barra_menu.add_cascade(label=\u0026#34;Ayuda\u0026#34;, menu=help_menu) Por lo que respecta al cuerpo de la aplicación, lo dividiremos en dos frames: uno superior para organizar los campos de introducción de datos y otro inferior para distribuir los cuatro botones que nos permitirán llevar a cabo acciones de tipo CRUD.\nAsí pues, si, por ejemplo, optamos por construir los diferentes campos de entrada que poseerá la aplicación, el bloque de código a escribir será:\n# Frame superior campos_frame = Frame(root) campos_frame.pack() id_entry = Entry(campos_frame) id_entry.grid(row=0, column=1, padx=2, pady=2) name_entry = Entry(campos_frame) name_entry.grid(row=1, column=1, padx=2, pady=2) lastname_entry = Entry(campos_frame) lastname_entry.grid(row=2, column=1, padx=2, pady=2) address_entry = Entry(campos_frame) address_entry.grid(row=3, column=1, padx=2, pady=2) password_entry = Entry(campos_frame) password_entry.grid(row=4, column=1, padx=2, pady=2) password_entry.config(show=\u0026#34;*\u0026#34;) comment_text = Text(campos_frame, width=15, height=5) comment_text.grid(row=5, column=1, padx=2, pady=2) comment_text_scrollvert = Scrollbar(campos_frame, command=comment_text.yview) comment_text_scrollvert.grid(row=5, column=2, sticky=\u0026#34;nsew\u0026#34;) comment_text.config(yscrollcommand=comment_text_scrollvert) 2.3. Código fuente El código fuente y los posibles ficheros externos generados correspondientes a esta lección se encuentran disponibles para su consulta en la carpeta /lecciones/60/ del repositorio.\n3. Práctica guiada III 3.1. Vídeo 3.2. Notas personales En esta lección, una vez declarados los campos de introducción de datos en la anterior, nos centraremos en ubicar las etiquetas en la aplicación:\nid_label = Label(campos_frame, text=\u0026#34;ID:\u0026#34;) id_label.grid(row=0, column=0, sticky=\u0026#34;e\u0026#34;, padx=2, pady=2) name_label = Label(campos_frame, text=\u0026#34;Nombre:\u0026#34;) name_label.grid(row=1, column=0, sticky=\u0026#34;e\u0026#34;, padx=2, pady=2) lastname_label = Label(campos_frame, text=\u0026#34;Apellido:\u0026#34;) lastname_label.grid(row=2, column=0, sticky=\u0026#34;e\u0026#34;, padx=2, pady=2) address_label = Label(campos_frame, text=\u0026#34;Dirección:\u0026#34;) address_label.grid(row=3, column=0, sticky=\u0026#34;e\u0026#34;, padx=2, pady=2) password_label = Label(campos_frame, text=\u0026#34;Contraseña:\u0026#34;) password_label.grid(row=4, column=0, sticky=\u0026#34;e\u0026#34;, padx=2, pady=2) comment_label = Label(campos_frame, text=\u0026#34;Comentarios:\u0026#34;) comment_label.grid(row=5, column=0, sticky=\u0026#34;ne\u0026#34;, padx=2, pady=2) A continuación, ocupémonos de construir un frame en la parte inferior del ya disponible y disponer cuatro botones:\n# Frame inferior botones_frame = Frame(root) botones_frame.pack(expand=True) crear_button = Button(botones_frame, text=\u0026#34;Create\u0026#34;) crear_button.grid(row=0, column=0, sticky=\u0026#34;e\u0026#34;, padx=2, pady=2) read_button = Button(botones_frame, text=\u0026#34;Read\u0026#34;) read_button.grid(row=0, column=1, sticky=\u0026#34;e\u0026#34;, padx=2, pady=2) update_button = Button(botones_frame, text=\u0026#34;Update\u0026#34;) update_button.grid(row=0, column=2, sticky=\u0026#34;e\u0026#34;, padx=2, pady=2) delete_button = Button(botones_frame, text=\u0026#34;Delete\u0026#34;) delete_button.grid(row=0, column=3, sticky=\u0026#34;e\u0026#34;, padx=2, pady=2) Así, ya únicamente nos resta programar la funcionalidad de la aplicación, tanto para el menú, como para los botones recién creados.\n3.3. Código fuente El código fuente y los posibles …","date":1567310379,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1567310379,"objectID":"a419e0bab6d7c4dafa11c0fab9ff065d","permalink":"https://imalexissaez.github.io/2019/09/01/curso-de-python-11-nivel-basico/","publishdate":"2019-09-01T05:59:39+02:00","relpermalink":"/2019/09/01/curso-de-python-11-nivel-basico/","section":"post","summary":"Práctica guiada","tags":["Python"],"title":"Curso de Python #11 (Nivel básico)","type":"post"},{"authors":["Alexis Sáez"],"categories":["Programación"],"content":"1. Bases de datos I 1.1. Vídeo 1.2. Notas personales En esta lección, cambiamos de tercio y abordamos el tratamiento de las bases de datos (BBDD) en Python. Estudiaremos cómo crearlas, conectar con ellas e insertar registros en su interior.\nPython es capaz de gestionar la información que se encuentra almacenada en diferentes gestores de bases de datos, como, por ejemplo:\nSQL Server Oracle MySQL SQLite PostgreSQL En este curso trabajaremos, principalmente, con MySQL y SQLite debido a su popularidad. No obstante, ello requiere que tengamos unos mínimos conocimientos del lenguaje utilizado para realizar consultas en bases de datos: SQL (Structured Query Language).\nPor lo que respecta a SQLite:\nEs un sistema de gestión de BBDD relacional. Está escrito en C, siendo de código abierto. La BBDD forma parte integral del programa y se guarda como un único fichero en host. Así, entre sus ventajas, encontramos que ocupa muy poco espacio en disco y memoria, es muy eficiente y rápido, es multiplataforma, no requiere configuración o administración y es de dominio público, esto es, sin costo alguno añadido. Sin embargo, también posee asociadas una serie de desventajas, como que no admite cláusulas anidadas (de tipo where), no existen usuarios (no permite acceso simultáneo por parte de varios usuarios) y carece de clave foránea cuando se crea en modo consola.\nA continuación, los pasos a seguir para conectar con una BBDD son:\nAbrir (o crear) una conexión. Crear un puntero (o cursor). Ejecutar una consulta (query) SQL. Manejar los resultados de la consulta. Insertar, leer, actualizar, borrar (Create, Read, Update, Delete). Cerrar puntero. Cerrar conexión. En Python, comenzamos importando la librería sqlite3 para luego crear la conexión con la BBDD. La primera vez que realizamos este proceso, al no haber disponible ninguna, procederemos a su creación.\nimport sqlite3 mi_conexion = sqlite3.connect(\u0026#34;base-de-datos\u0026#34;) mi_conexion.close() Al ejecutar el anterior bloque de código, aparece en el correspondiente directorio una BBDD de datos vacía, de nombre base-de-datos. Veamos, acto seguido, cómo crear nuestra primera tabla:\nimport sqlite3 mi_conexion = sqlite3.connect(\u0026#34;base-de-datos\u0026#34;) mi_cursor = mi_conexion.cursor() mi_cursor.execute(\u0026#34;CREATE TABLE PRODUCTOS (NOMBRE_ARTICULO VARCHAR(50), PRECIO INTEGER, SECCION VARCHAR(20))\u0026#34;) mi_conexion.close() Tras crear el puntero o cursor, mi_cursor, lanzamos, a través de la función execute(), el comando SQL correspondiente a la creación de una tabla que poseerá tres columnas. Si ejecutamos el anterior bloque de código, observaremos que el tamaño del fichero base-de-datos se incrementa y deja de estar vacío.\nNota: podemos investigar qué contiene el archivo base-de-datos, de manera visual, mediante la herramienta DB Browser for SQLite.\nA continuación, analicemos cómo insertar información en la tabla que acabamos de crear. Para ello, comentamos la anterior línea de código, que precisamente generaba la tabla (porque ya existe y entonces Python arrojaría un error llegado a ese momento), y ejecutamos, a través del cursor, la instrucción de SQL apropiada. Tras ello, verificamos que deseamos realizar el cambio en la tabla, utiliando el método commit() asociado a la conexión:\nimport sqlite3 mi_conexion = sqlite3.connect(\u0026#34;base-de-datos\u0026#34;) mi_cursor = mi_conexion.cursor() mi_cursor.execute(\u0026#34;INSERT INTO PRODUCTOS VALUES(\u0026#39;BALÓN\u0026#39;, 15, \u0026#39;DEPORTES\u0026#39;)\u0026#34;) mi_conexion.commit() mi_conexion.close() Nota técnica: cuando trabajamos con cadenas de caracteres que poseen comillas anidadas, hemos de alternar los simbolos \u0026#39; y \u0026#34;.\n1.3. Código fuente El código fuente y los posibles ficheros externos generados correspondientes a esta lección se encuentran disponibles para su consulta en la carpeta /lecciones/55/ del repositorio.\n2. Bases de datos II 2.1. Vídeo 2.2. Notas personales En esta lección, aprenderemos cómo insertar varios registros simultáneamente en nuestra base de datos (BBDD), así como después estudiaremos cómo recuperar información de la BBDD.\nEn primer lugar, importemos la librería sqlite3 y construyamos, tanto la conexión a la BBDD, como un cursor. Con tal objetivo en mente, tecleamos:\nimport sqlite3 mi_conexion = sqlite3.connect(\u0026#34;base-de-datos\u0026#34;) mi_cursor = mi_conexion.cursor() A continuación, mediante una lista de tuplas, establecemos los productos que nos interese insertar en la BBDD:\nproductos = [(\u0026#34;Camiseta\u0026#34;, 10, \u0026#34;Deportes\u0026#34;), (\u0026#34;Jarrón\u0026#34;, 90, \u0026#34;Cerámica\u0026#34;), (\u0026#34;Camión\u0026#34;, 20, \u0026#34;Juguetería\u0026#34;)] y con el método executemany() ejecutamos la instrucción SQL adecuada:\nmi_cursor.executemany(\u0026#34;INSERT INTO PRODUCTOS VALUES (?, ?, ?)\u0026#34;, productos) Nota técnica: en las instrucciones de SQL parametrizadas, hemos de insertar tantos interrogantes, ?, como campos posee cada registro.\nFinalmente, confirmamos los cambios y cerramos la conexión abierta:\nmi_conexion.commit() mi_conexion.close() Acto seguido, veamos cómo accedemos a la información registrada en la BBDD. Para ello, simplemente hemos de ejecutar, desde el cursor, una instrucción …","date":1566964779,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1566964779,"objectID":"59b9d7c67167fdc93375b159599036fe","permalink":"https://imalexissaez.github.io/2019/08/28/curso-de-python-10-nivel-basico/","publishdate":"2019-08-28T05:59:39+02:00","relpermalink":"/2019/08/28/curso-de-python-10-nivel-basico/","section":"post","summary":"Bases de datos","tags":["Python"],"title":"Curso de Python #10 (Nivel básico)","type":"post"},{"authors":["Alexis Sáez"],"categories":["Programación"],"content":"1. Interfaces Gráficas I 1.1. Vídeo 1.2. Notas personales En esta lección, comenzamos el estudio de las interfaces gráficas en Python, analizando para ello la librería Tkinter. Las interfaces gráficas, también denominadas GUI, son intermediarios entre el programa y el usuario. Están formadas por un conjunto de gráficos como ventanas, botones, menús, casillas de verificación, etc.\nAdemás de la mencionada, existen otras librerías alternativas para trabajar con interfaces gráficas:\nWxPython PyQT PyGTK Tkinter es un ‘‘puente’’ entre Python y la librería TCL / TK.\nLa estructura de una interfaz gráfica en Python es:\nRaíz: la ventana de la aplicación propiamente dicha. Frame: estructura que agrupa diversos elementos. Widgets: elementos de la aplicación. En ocasiones, al frame también se le considera un widget más. A continuación, veamos cómo construir la raíz:\nfrom tkinter import Tk raiz = Tk() raiz.mainloop() Al ejecutar el anterior bloque de código aparece una ventana en blanco en nuestro escritorio, con algunos botones que permiten interactuar con ella a la manera que estamos habituados.\nPrimera ventana. Para que una ventana pueda mantenerse en ejecución, debe estar en una especie de ‘‘bucle infinito’’ (a la espera o escucha de eventos), estado que conseguimos a través de la función mainloop(), que, por el momento, habrá de estar siempre al final de nuestros programas.\nLa documentación para la librería Tkinter la podemos encontrar siguiendo este enlace.\nModifiquemos algunas de las características que esta ventana posee por defecto:\nfrom tkinter import Tk raiz = Tk() raiz.title(\u0026#34;Ventana de pruebas\u0026#34;) raiz.resizable(width=False, height=False) # raiz.resizable(0, 0) raiz.iconbitmap(\u0026#34;icon.ico\u0026#34;) raiz.geometry(\u0026#34;450x300\u0026#34;) raiz.config(bg=\u0026#34;lightblue\u0026#34;) raiz.mainloop() Notas:\ntitle() nos permite cambiar el título de la ventana generada. resizable() acepta dos valores booleanos para indicar si permitimos que se modifique la anchura o la altura de la ventana. Según los argumentos escogidos, incluso queda deshabilitado el botón de maximizar ventana. iconbitmap() nos da la posibilidad de cambiar el icono de la ventana generada, que, por defecto, es una especie de pluma. Para ello, hemos de almacenar en el directorio de la aplicación (o tener bien localizada su ruta) un archivo de extensión .ico (buscar en Google ‘‘conversor .ico’’ para acceder a aplicaciones online que nos generen este tipo de ficheros). geometry() configura el ancho y el alto de la ventana. config(), entre otras acciones, nos permite cambiar el color del fondo. Modificando propiedades de la ventana. Hasta el momento, las ventanas requieren de la consola de Python para su funcionamiento. Si queremos que este sea independiente de ella, hemos de modificar la extensión de la aplicación de .py a .pyw.\n1.3. Código fuente El código fuente y los posibles ficheros externos generados correspondientes a esta lección se encuentran disponibles para su consulta en la carpeta /lecciones/42/ del repositorio.\n2. Interfaces Gráficas II 2.1. Vídeo 2.2. Notas personales Después de introducir, en la lección anterior, la raíz de una interfaz gráfica, en esta abordaremos la construcción y uso de frames. Comencemos recuperando el código fuente de la ‘‘aplicación’’ que generamos con anterioridad:\nfrom tkinter import Tk raiz = Tk() raiz.title(\u0026#34;Ventana de pruebas\u0026#34;) raiz.resizable(width=False, height=False) # raiz.resizable(0, 0) raiz.iconbitmap(\u0026#34;icon.ico\u0026#34;) raiz.geometry(\u0026#34;450x300\u0026#34;) raiz.config(bg=\u0026#34;lightblue\u0026#34;) raiz.mainloop() A continuación, crearemos un frame y lo empaquetaremos (ubicaremos) dentro de la raíz disponible a través del método pack(). Además, prescindiremos de la instrucción raiz.geometry(), para así estar en condiciones de configurar el tamaño del frame (la raíz se adaptará automáticamente al tamaño de sus elementos internos):\nfrom tkinter import Tk, Frame raiz = Tk() raiz.title(\u0026#34;Ventana de pruebas\u0026#34;) raiz.resizable(width=True, height=True) raiz.iconbitmap(\u0026#34;icon.ico\u0026#34;) raiz.config(bg=\u0026#34;lightblue\u0026#34;) frame = Frame() frame.pack() frame.config(bg=\u0026#34;tomato\u0026#34;, width=\u0026#34;450\u0026#34;, height=\u0026#34;300\u0026#34;) raiz.mainloop() A primera vista, al ejecutar el aterior bloque de código, da la sensación de que hemos perdido el color de fondo declarado para la aplicación (lightblue). No obstante, como ahora permitimos manipular el tamaño de la ventana (mediante la instrucción raiz.resizable(width=True, height=True)), al agrandarla comprobamos que todo funciona correctamente.\nLos dos colores de fondo siguen disponibles. Nota: en esta página podemos encontrar un buen recurso para acceder a una paleta de colores declarados por nombres y disponibles para la librería tkinter.\nPor otro lado, observamos que el frame tiene un tamaño fijo, por mucho que manipulemos el tamaño de la ventana, las dimensiones del frame no se alteran, así como su posición, que permanece centrada en la parte superior de la ventana de la aplicación. Este comportamiento es el dado por defecto, que podemos configurar de manera diferente, si así lo …","date":1566359979,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1566359979,"objectID":"693660684abc84e845aeae502ac33aec","permalink":"https://imalexissaez.github.io/2019/08/21/curso-de-python-09-nivel-basico/","publishdate":"2019-08-21T05:59:39+02:00","relpermalink":"/2019/08/21/curso-de-python-09-nivel-basico/","section":"post","summary":"Interfaces","tags":["Python"],"title":"Curso de Python #09 (Nivel básico)","type":"post"},{"authors":["Alexis Sáez"],"categories":["Programación"],"content":"1. Cadenas 1.1. Vídeo 1.2. Notas personales Examinemos algunos de los métodos disponibles en Python a la hora de trabajar con cadenas de texto, que son objetos de tipo String. Entre los más habituales encontramos:\nupper() lower() capitalize() count() find() isdigit() isalum() isalpha() split() strip() replace() rfind() Para obtener más información sobre su utilización, conviene que visitemos esta página.\nVeamos algunos ejemplos sencillos que ilustren el uso de algunos de los anteriores métodos:\nnombre_usuario = input(\u0026#34;Introduce tu nombre de usuario: \u0026#34;) print(\u0026#34;El nombre es:\u0026#34;, nombre_usuario) print(\u0026#34;El nombre es:\u0026#34;, nombre_usuario.upper()) print(\u0026#34;El nombre es:\u0026#34;, nombre_usuario.lower()) print(\u0026#34;El nombre es:\u0026#34;, nombre_usuario.capitalize()) Introduce tu nombre de usuario: Alexis Sáez El nombre es: Alexis Sáez El nombre es: ALEXIS SÁEZ El nombre es: alexis sáez El nombre es: Alexis sáez Algunas de estas funciones resultan útiles a la hora de validar los datos que un usuario proporciona a nuestros programas:\nedad = input(\u0026#34;Introduce la edad: \u0026#34;) while not edad.isdigit(): print(\u0026#34;Por favor, introduce un valor numérico.\u0026#34;) edad = input(\u0026#34;Introduce la edad: \u0026#34;) if int(edad) \u0026lt; 18: print(\u0026#34;No puede pasar.\u0026#34;) else: print(\u0026#34;Puede pasar.\u0026#34;) Introduce la edad: 8iu9 Por favor, introduce un valor numérico. Introduce la edad: o9098 Por favor, introduce un valor numérico. Introduce la edad: 99 Puede pasar. Ejercicio: crea un programa que pida introducir una dirección de email por teclado. El programa debe imprimir en consola si la dirección de email es correcta o no en función de si esta tiene el símbolo @. Si tiene una @ la dirección será correcta. Si tiene más de una o ninguna @ la dirección será errónea. Si la @ está al comienzo de la dirección de email o al final, la dirección también será errónea\nemail = input(\u0026#34;Introduce email: \u0026#34;) if email.count(\u0026#34;@\u0026#34;) == 1 and email.count(\u0026#34;@\u0026#34;, 1, len(email) - 1) == 1: print(\u0026#34;La dirección de correo es correcta.\u0026#34;) else: print(\u0026#34;La dirección de correo es incorrecta.\u0026#34;) 1.3. Código fuente El código fuente y los posibles ficheros externos generados correspondientes a esta lección se encuentran disponibles para su consulta en la carpeta /lecciones/33/ del repositorio.\n2. Módulos 2.1. Vídeo 2.2. Notas personales Un módulo es un archivo con extensión .py, .pyc (Python compilado) o fichero escrito en C para CPython, que posee su propio espacio de nombres y que puede contener variables, funciones, clases e incluso otros módulos.\nSirve para organizar y reutilizar el código (modularización y reutilización). Se genera uno creando un archivo con extensión .py (o .pyc o archivo en C) y guardándolo donde nos interese.\nVamos a crear un módulo que, siguiendo la organización del repositorio de código, se llamará modulo_matematicas.py. En su interior tecleamos las siguientes líneas:\ndef sumar(op1, op2): print(\u0026#34;El resultado de la suma es:\u0026#34;, op1 + op2) def restar(op1, op2): print(\u0026#34;El resultado de la resta es:\u0026#34;, op1 - op2) def multiplicar(op1, op2): print(\u0026#34;El resultado de la multiplicación es:\u0026#34;, op1 * op2) Ahora, generamos otro archivo, script_1.py, e importamos el anterior módulo, utilizando para ello la instrucción import:\nimport modulo_matematicas as modulo modulo.sumar(5, 7) modulo.restar(9, 5) modulo.multiplicar(4, 9) El resultado de la suma es: 12 El resultado de la resta es: 4 El resultado de la multiplicación es: 36 Como el nombre del módulo generado es un tanto extenso, he utilizado la instrucción as, que permite reescribir dicho nombre y, en mi caso, abreviarlo para que su uso sea más cómodo.\nUna alternativa a esta estrategia la encontramos en el fichero script_2.py, donde se utiliza from ... import ...:\nfrom modulo_matematicas import sumar sumar(5, 7) El resultado de la suma es: 12 En el bloque de código anterior, únicamente hemos importado la función sumar() de nuestro módulo. Podemos añadir más funciones separándolas mediante comas o importar todo el contenido del módulo utilizando el carácter *:\nfrom modulo_matematicas import sumar, restar sumar(5, 7) restar(12, 6) El resultado de la suma es: 12 El resultado de la resta es: 6 from modulo_matematicas import * sumar(5, 7) restar(12, 6) multiplicar(12, 12) El resultado de la suma es: 12 El resultado de la resta es: 6 El resultado de la multiplicación es: 144 No obstante, es peligroso actuar así, pues, en ocasiones, podemos reescribir métodos de manera accidental y arribar a resultados no deseados. Además, en aplicaciones complejas, por motivos de optimización, utilizar el carácter * provoca que se reserve demasiado espacio en memoria al tener que almacenar todo el contenido del módulo importado.\nCreemos un módulo, modulo_vehiculos.py con las clases utilizadas en la lección de herencia asociada al apartado de programación orientada a objetos:\nclass Vehiculo(): def __init__(self, marca, modelo): self.marca = marca self.modelo = modelo self.enmarcha = False self.acelera = False self.frena = False def arrancar(self): self.enmarcha = True def acelerar(self): …","date":1565755179,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1565755179,"objectID":"8134a9498a94addf2688b5b4c44f8acc","permalink":"https://imalexissaez.github.io/2019/08/14/curso-de-python-08-nivel-basico/","publishdate":"2019-08-14T05:59:39+02:00","relpermalink":"/2019/08/14/curso-de-python-08-nivel-basico/","section":"post","summary":"Métodos y archivos","tags":["Python"],"title":"Curso de Python #08 (Nivel básico)","type":"post"},{"authors":["Alexis Sáez"],"categories":["Programación"],"content":"1. Programación OO I 1.1. Vídeo 1.2. Notas personales Python es un lenguaje de programación orientado a objetos (POO). Existen, principalemente, dos paradigmas de programación:\nProgramación orientada a procedimientos. Programación orientada a objetos. 1.3. Programación OP Algunos ejemplos de lenguajes de programación que siguen este paradigma son: Fortan, Cobol, Basic…\nEntre sus principales desventajas encontramos:\nLas unidades de código son muy grandes en aplicaciones complejas (resultando en un número de líneas significativamente elevado). En aplicaciones complejas, el código resulta difícil de descifrar. Las aplicaciones generadas suelen ser poco reutilizables. Si existen fallos en alguna línea del código, es muy probable que el programa caiga en su totalidad. Aparición frecuente de código espaguetti (saltos en el flujo de ejecución del programa). Es difícil de depurar el código por otros programadores en caso de necesidad o error. 1.4. Programación OO La programación orientada a objetos consiste en trasladar el comportamiento que tienen los objetos en la vida real al código de programación. Los objetos tienen un estado, un comportamiento (¿qué puede hacer?) y unas propiedades.\nPor ejemplo, pensemos en el objeto ‘‘coche’’:\n¿Cuál es el estado de un coche? Puede estar parado, circulando, aparcado… ¿Qué propiedades tiene un coche? Tiene un color, un peso, un tamaño… ¿Qué comportamiento tiene un coche? Puede arrancar, frenar, acelerar, girar… Objeto Coche Propiedades (atributos) Color, peso, alto, largo… Comportamiento Arrancar, frenar, girar, acelerar… Algunos ejemplos de lenguajes de programación que emplean este paradigma son: C++, Java, VisualNet…\nEntre las principales ventajas encontramos:\nLos programas están divididos en ‘’trozos’’, ‘‘partes’’, ‘‘módulos’’ o ‘‘clases’’, es decir, existe modularización. El código es muy reutilizable. Aparece en el concepto de herencia. Si existen fallos en alguna línea del código, el programa es posible que continue con su funcionamiento, debido al control de excepciones. Surge el concepto de encapsulamiento. El vocabulario más frecuente de este paradigma de programación incluye palabras o expresiones como:\nClase. Objeto. Ejemplar de clase. Instancia de clase. Ejemplarizar una clase. Instanciar una clase. Modularización. Encapsulamiento / encapsulación. Herencia. Polimorfismo. 2. Programación OO II 2.1. Vídeo 2.2. Notas personales Una clase es un modelo donde se redactan las características comunes de un grupo de objetos.\nUna instancia (o ejemplar u objeto) es un miembro concreto de una clase.\nLa modularización surge cuando un programa está compuesto de diversas clases. Cada una de ellas funciona de manera independiente (facilitando así enormemente su mantenimiento y control de excepciones) y es posible su reutilización en otros programas.\nLa encapsulación nos permite proteger el funcionamiento interno de cierto bloque de código, para que no pueda accederse o alterarse desde el exterior de manera inadecuada. No obstante, todas las clases de un programa estarán ‘‘conectadas’’ entre sí de cierta manera (mediante métodos de acceso a ciertas características de cada una de las clases).\nEl mencionado acceso se llevará a cabo empleando la nomenclatura del punto. Por ejemplo, supongamos que hemos creado un objeto, de la clase coche, llamado miCoche. Para acceder a sus propiedades, utilizaremos la sintaxis:\nmiCoche.color = \u0026#39;\u0026#39;rojo\u0026#39;\u0026#39; miCoche.peso = 1500 miCoche.ancho = 2000 miCoche.alto = 900 De forma similar, el acceso al comportamiento de este objeto se realizará mediante la mencionada nomenclatura:\nmiCoche.arranca() miCoche.frena() miCoche.gira() miCoche.acelera() 3. Programación OO III 3.1. Vídeo 3.2. Notas personales Traslademos a código fuente algunos de los conceptos examinados en las dos lecciones anteriores. La sintaxis para crear la clase Coche sería:\nclass Coche(): instrucciones Empecemos declarando las propiedades de la clase Coche:\nclass Coche(): largo_chasis = 250 ancho_chasis = 120 ruedas = 4 en_marcha = False Definamos comportamientos para los futuros objetos que pertenezcan a esta clase, que vienen determinados por distintos métodos:\nclass Coche(): largo_chasis = 250 ancho_chasis = 120 ruedas = 4 en_marcha = False def function(self): pass En Sublime Text 3 cuando empezamos a escribir def nos ofrece dos opciones, crear una función o un método. La principal diferencia radica en que la primera no pertenece a ninguna clase, al contrario que la segunda. Podemos, a través de los cursores, escoger en el editor la opción que apunta a un método y se nos proporciona la sintaxis de uno por defecto, como el que se muestra arriba.\nUna vez editado, el código queda:\nclass Coche(): largo_chasis = 250 ancho_chasis = 120 ruedas = 4 en_marcha = False def arrancar(self): pass Nota: self hace referencia al propio objeto perteneciente a la clase, es decir, a la instancia perteneciente a la clase.\nConstruyamos un objeto de la clase Coche y veamos cómo acceder a sus propiedades:\nmi_coche …","date":1565150379,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1565150379,"objectID":"042b9a5051da3f76d8a8cfae21b9d7cb","permalink":"https://imalexissaez.github.io/2019/08/07/curso-de-python-07-nivel-basico/","publishdate":"2019-08-07T05:59:39+02:00","relpermalink":"/2019/08/07/curso-de-python-07-nivel-basico/","section":"post","summary":"Programación orientada a objetos","tags":["Python"],"title":"Curso de Python #07 (Nivel básico)","type":"post"},{"authors":["Alexis Sáez"],"categories":["Programación"],"content":"1. Excepciones I 1.1. Vídeo 1.2. Notas personales Una excepción es un error que acontece durante la ejecución de un programa. La sintaxis del código es correcta, pero, en el momento de ejecutarse el algoritmo, sucede ‘‘algo inesperado’’.\nPara ilustrar la aparición de excepciones, trabajemos con el siguiente código:\ndef suma(num1, num2): return num1 + num2 def resta(num1, num2): return num1 - num2 def multiplica(num1, num2): return num1 * num2 def divide(num1, num2): return num1 / num2 op1 = (int(input(\u0026#34;Introduce el primer número: \u0026#34;))) op2 = (int(input(\u0026#34;Introduce el segundo número: \u0026#34;))) print(\u0026#34;Operaciones disponibles: \u0026#34;) print(\u0026#34;- Suma\u0026#34;) print(\u0026#34;- Resta\u0026#34;) print(\u0026#34;- Multiplica\u0026#34;) print(\u0026#34;- Divide\u0026#34;) operacion = input(\u0026#34;Introduce la operación a realizar: \u0026#34;) if operacion == \u0026#34;Suma\u0026#34;: print(suma(op1, op2)) elif operacion == \u0026#34;Resta\u0026#34;: print(resta(op1, op2)) elif operacion == \u0026#34;Multiplica\u0026#34;: print(multiplica(op1, op2)) elif operacion == \u0026#34;Divide\u0026#34;: print(divide(op1, op2)) else: print(\u0026#34;Operación no contemplada.\u0026#34;) print(\u0026#34;Operación ejecutada. Continuación de ejecución del programa \u0026#34;) Un posible ejemplo de ejecución sería:\nIntroduce el primer número: 16 Introduce el segundo número: 4 Operaciones disponibles: - Suma - Resta - Multiplica - Divide Introduce la operación a realizar: Multiplica 64 Operación ejecutada. Continuación de ejecución del programa Sin embargo, si por accidente intentamos realizar una división entre 0:\nIntroduce el primer número: 2 Introduce el segundo número: 0 Operaciones disponibles: - Suma - Resta - Multiplica - Divide Introduce la operación a realizar: Divide Traceback (most recent call last): File \u0026#34;prac21_excepciones1_1.py\u0026#34;, line 35, in \u0026lt;module\u0026gt; print(divide(op1, op2)) File \u0026#34;prac21_excepciones1_1.py\u0026#34;, line 14, in divide return num1 / num2 ZeroDivisionError: division by zero De forma que el código se detiene en el preciso instante de la llamada a la función divide() y deja de ejecutar las restantes líneas (la instrucción print() final en esta ocasión), cuya importancia puede ser vital para nosotros.\nEste tipo de situaciones se aborda mediante una captura o control de excepción. La idea es intentar realizar un bloque de código y, en el caso de no poderse llevar a cabo dicha acción, que al menos el resto de programa siga adelante.\nSi nos fijamos en la pila de llamadas que nos muestran antes de arrojar el error:\nTraceback (most recent call last): File \u0026#34;prac21_excepciones1_1.py\u0026#34;, line 35, in \u0026lt;module\u0026gt; print(divide(op1, op2)) File \u0026#34;prac21_excepciones1_1.py\u0026#34;, line 14, in divide return num1 / num2 ZeroDivisionError: division by zero Leyendo de abajo hacia arriba, la instrucción return num1 / num2, ubicada en la línea 14 del código, arroja un error de división por cero (ZeroDivisionError). Para controlar esta circunstancia, usaremos un bloque de tipo:\ntry: instrucciones except error: instrucciones Así, nuestra función divide() la podríamos reescribir como sigue:\ndef divide(num1, num2): try: return num1 / num2 except ZeroDivisionError: print(\u0026#34;No se puede dividir entre 0.\u0026#34;) return \u0026#34;Operación errónea.\u0026#34; De manera que, replicando el anterior conflictivo ejemplo:\nIntroduce el primer número: 2 Introduce el segundo número: 0 Operaciones disponibles: - Suma - Resta - Multiplica - Divide Introduce la operación a realizar: Divide No se puede dividir entre 0. Operación errónea. Operación ejecutada. Continuación de ejecución del programa Apreciamos que la última línea de código, aquel print() final, ahora efectivamente sí llega a ejecutarse.\nPor desgracia, no es el único punto conflictivo que presenta el código mostrado. Por ejemplo, ¿qué sucede si introducimos una cadena de texto en lugar de un número?\nIntroduce el primer número: 3 Introduce el segundo número: a Traceback (most recent call last): File \u0026#34;prac21_excepciones1_1.py\u0026#34;, line 22, in \u0026lt;module\u0026gt; op2 = (int(input(\u0026#34;Introduce el segundo número: \u0026#34;))) ValueError: invalid literal for int() with base 10: \u0026#39;a\u0026#39; Python arroja un error de tipo ValueError que también habríamos de controlar a través de un bloque try - except.\n1.3. Código fuente El código fuente y los posibles ficheros externos generados correspondientes a esta lección se encuentran disponibles para su consulta en la carpeta /lecciones/21/ del repositorio.\n2. Excepciones II 2.1. Vídeo 2.2. Notas personales Recordemos el código final de la lección anterior:\ndef suma(num1, num2): return num1 + num2 def resta(num1, num2): return num1 - num2 def multiplica(num1, num2): return num1 * num2 def divide(num1, num2): try: return num1 / num2 except ZeroDivisionError: print(\u0026#34;No se puede dividir entre 0.\u0026#34;) return \u0026#34;Operación errónea.\u0026#34; op1 = (int(input(\u0026#34;Introduce el primer número: \u0026#34;))) op2 = (int(input(\u0026#34;Introduce el segundo número: \u0026#34;))) print(\u0026#34;Operaciones disponibles: \u0026#34;) print(\u0026#34;- Suma\u0026#34;) print(\u0026#34;- Resta\u0026#34;) print(\u0026#34;- Multiplica\u0026#34;) print(\u0026#34;- Divide\u0026#34;) operacion = input(\u0026#34;Introduce la operación a realizar: \u0026#34;) if operacion == \u0026#34;Suma\u0026#34;: print(suma(op1, op2)) elif operacion == \u0026#34;Resta\u0026#34;: print(resta(op1, op2)) elif operacion == \u0026#34;Multiplica\u0026#34;: …","date":1564631979,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1564631979,"objectID":"38244f8135b459139b9429e18b7a95d4","permalink":"https://imalexissaez.github.io/2019/08/01/curso-de-python-06-nivel-basico/","publishdate":"2019-08-01T05:59:39+02:00","relpermalink":"/2019/08/01/curso-de-python-06-nivel-basico/","section":"post","summary":"Excepciones","tags":["Python"],"title":"Curso de Python #06 (Nivel básico)","type":"post"},{"authors":["Alexis Sáez"],"categories":["Recursos"],"content":"En aquesta pàgina compilaré diversos recursos i informació relacionats amb el Certificat de Capacitació en valencià (CC d’ara endavant). Cada universitat de la Comunitat Valenciana ofereix cursos per obtindre aquesta certificació (i també moltes acadèmies privades de la zona); no obstant això, ací em centraré específicament en les proves lliures, que són gratuïtes i es convoquen ordinàriament un parell de vegades a l’any (i extraordinàriament alguna volta més, sobretot quan s’apropen oposicions que requereixen el CC).\n1. Temari Per a preparar les esmentades proves, és recomanable utilitzar les unitats disponibles a la web del curs que ofereix el cefire.\nNúm. Títol 0 Qüestions de llengua oralitat, escriptura i sociolingüística. 1 El plurilingüisme en el sistema educatiu. El marc legal. 2 Teories sobre l’aprenentatge de segones llengües i enfocament TILC. 3 L’avaluació en el procés d’ensenyament i aprenentatge. 4 Materials i espais per a un ensenyament TILC. 2. Descripció de la prova La informació més rellevant es resumeix a continuació:\nLa prova durarà dos hores i mitja. Conté dos parts: una oral i una escrita. En la part escrita cal elaborar un text, de 250 paraules almenys, relacionat amb un dels dos temes proposats. A més a més, s’ha d’omplir un qüestionari de 20 preguntes: 10 d’opció múltiple i 10 de verdader o fals. En la part oral cal exposar un monòleg, que no serà gravat i durarà cinc minuts aproximadament, associat amb un dels dos temes proposats. S’ha de superar la part escrita i la part oral de manera independent. Aquest és un model de la prova.\n3. Criteris d’avaluació En relació amb la part escrita:\nEl text té una valoració màxima de 80 punts i es descompta un punt per cada errada gramatical o ortogràfica comesa. Els textos de menys de 250 paraules (una paraula és una unitat lingüística que se separa de la resta mitjançant un espai en blanc en l’escriptura) obtindran una qualificació de zero punts. En el qüestionari: Cada encert sumarà un punt. Cada errada restarà bé 0,5 punts (per a les qüestions de verdader o fals) bé 0,25 punts (per a les d’opció múltiple). Cada resposta en blanc ni sumarà ni restarà punts. S’obtindrà un apte en aquesta part si la qualificació total és superior a 60 punts\nPel que fa a la intervenció oral, aquesta té una valoració màxima de 30 punts, dividits com s’indica a continuació:\nPronunciació: 3 punts. Lèxic: 3 punts. Morfosintaxi: 3 punts. Cohesió i coherència textual: 3 punts. Adequació: 3 punts. Contingut: 15 punts. S’obtindrà un apte en aquesta part si la qualificació total és superior a 18 punts.\n4. Convocatòries Convé que revisem amb freqüència la pàgina web del Servei de Formació del Professorat associada amb l’oferta lingüística (i més concretament la corresponent a les proves de CC i DM). Els detalls de l’última convocatòria són els següents:\nConvocatòria de 27 de maig de 2019, de la Secretaria Autonòmica d’Educació i Investigació, per la qual es convoquen proves adreçades a l’obtenció de les titulacions administratives de Certificat de Capacitació per a l’Ensenyament en Valencià, Certificat de Capacitació per a l’Ensenyament en Llengua estrangera i del Diploma de Mestre de Valencià. Diagrama explicatiu del procediment. El termini d’inscripció d’aquesta ja està tancat, però els documents poden servir de referència i orientació per a futures convocatòries.\n5. Recursos addicionals El grup de Facebook ‘Opositores sin Capacitació en Valencià. Noticias y recursos’ (enllaç) és, possiblement, el millor lloc on estar al dia de totes les novetats relacionades amb el CC (notícies, cursos, proves, qualificacions…). Els seus membres comparteixen interessants recursos com ara:\nDirectori en Google Drive amb qüestionaris associats a les unitats 3 i 4, així com de caràcter general, que es proposen als cursos presencials del CEFIRE. Pel que fa a la convocatòria de maig d’enguany, la majoria de les preguntes eren idèntiques a les que figuren en aquest recurs. Un altre directori en Google Drive amb els apunts personals d’una integrant del grup de Facebook (qüestionaris, redaccions, esquemes…). D’altra banda, el canal de YouTube d’en Salva Pérez, Per no frenar, recull excel·lents consells de cara a les parts orals i escrites de les proves de la cieaCOVA, JQCV i EOI. Són una referència molt recomanable a tindre en compte per a fer un bon paper a les proves lliures de CC.\nA més a més, destaque els següents vídeos enfocats al CC d’enguany:\nAixí mateix, en deixe uns altres corresponents a les convocatòries de l’any 2018, però que encara són recomanables perquè la prova té la mateixa estructura:\n","date":1564372779,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1564372779,"objectID":"4aa2466004674669cc905506dcaf1135","permalink":"https://imalexissaez.github.io/2019/07/29/recursos-valencia-capacitacio/","publishdate":"2019-07-29T05:59:39+02:00","relpermalink":"/2019/07/29/recursos-valencia-capacitacio/","section":"post","summary":"En aquesta pàgina compilaré diversos recursos i informació relacionats amb el *Certificat de Capacitació* en valencià (CC d'ara endavant).","tags":["Capacitació","Valencià"],"title":"Recursos de valencià (capacitació)","type":"post"},{"authors":["Alexis Sáez"],"categories":["Programación"],"content":"1. Generadores I 1.1. Vídeo 1.2. Notas personales Un generador es una estructura que extrae valores de una función y los almacena, de uno en uno, en objetos iterables (que se pueden recorrer). Cada vez que un generador almacena un valor, permanece en un estado pausado hasta que se solicita el siguiente, característica que se conoce como suspensión de estado.\nLa utilidad de los generadores reside en que:\nson más eficientes que las funciones tradicionales (sobretodo en consumo de recursos y tiempo, al no tener que construir ‘’estructuras completas de datos’’); resultan muy útiles con listas de valores infinitos; y bajo determinados escenarios, será recomendable que un generador devuelva los valores de uno en uno. Su sintaxis es:\ndef nombre(): yield Creemos un programa que nos genere una lista de números pares, primero a través de una función y luego utilizando generadores:\ndef genera_pares(limite): num = 1 lista_pares = [] while num \u0026lt; limite: lista_pares.append(num * 2) num += 1 return lista_pares print(genera_pares(10)) # [2, 4, 6, 8, 10, 12, 14, 16, 18] def genera_pares(limite): num = 1 while num \u0026lt; limite: yield num * 2 num += 1 # Creo el objeto iterable que genera la función devuelve_pares = genera_pares(10) # Recorro el objeto iterable con, por ejemplo, un bucle for for i in devuelve_pares: print(i) # 2 # 4 # 6 # 8 # 10 # 12 # 14 # 16 # 18 Imaginemos ahora que nuestro objetivo es imprimir en la consola únicamente los tres primeros números pares. Con el método next() podemos solicitar valores de uno en uno al objeto iterable fruto del generador:\ndef genera_pares(limite): num = 1 while num \u0026lt; limite: yield num * 2 num += 1 # Creo el objeto iterable que genera la función devuelve_pares = genera_pares(10) print(next(devuelve_pares)) # 2 print(\u0026#34;Aquí podría ir más código.\u0026#34;) print(next(devuelve_pares)) # 4 print(\u0026#34;Aquí podría ir más código.\u0026#34;) print(next(devuelve_pares)) # 6 1.3. Código fuente El código fuente y los posibles ficheros externos generados correspondientes a esta lección se encuentran disponibles para su consulta en la carpeta /lecciones/19/ del repositorio.\n2. Generadores II 2.1. Vídeo 2.2. Notas personales Estudiemos el uso de la instrucción yield from, cuya utilidad reside en la simplificación del código de los generadores en el caso de utilizar bucles anidados.\nPor ejemplo, elaboremos un generador que nos devuelva ciudades:\ndef devuelve_ciudades(*ciudades): for elemento in ciudades: yield elemento # Creamos objeto generador ciudades_devueltas = devuelve_ciudades(\u0026#34;Madrid\u0026#34;, \u0026#34;Barcelona\u0026#34;, \u0026#34;Bilbao\u0026#34;, \u0026#34;Valencia\u0026#34;) print(next(ciudades_devueltas)) # Madrid print(next(ciudades_devueltas)) # Barcelona Nota: en Python, cuando colocamos un * delante de un parámetro, estamos indicando que podemos pasar un número indeterminado de argumentos, que los recibirá en forma de tupla.\nImaginemos que ahora deseamos acceder a los elementos de cada una de las ciudades (sus letras en este caso):\ndef devuelve_ciudades(*ciudades): for elemento in ciudades: for sub_elemento in elemento: yield sub_elemento # Creamos objeto generador ciudades_devueltas = devuelve_ciudades(\u0026#34;Madrid\u0026#34;, \u0026#34;Barcelona\u0026#34;, \u0026#34;Bilbao\u0026#34;, \u0026#34;Valencia\u0026#34;) print(next(ciudades_devueltas)) # M print(next(ciudades_devueltas)) # a El anterior ejemplo lo podemos simplificar utilizando la instrucción yield from:\ndef devuelve_ciudades(*ciudades): for elemento in ciudades: yield from elemento # Creamos objeto generador ciudades_devueltas = devuelve_ciudades(\u0026#34;Madrid\u0026#34;, \u0026#34;Barcelona\u0026#34;, \u0026#34;Bilbao\u0026#34;, \u0026#34;Valencia\u0026#34;) print(next(ciudades_devueltas)) # M print(next(ciudades_devueltas)) # a 2.3. Código fuente El código fuente y los posibles ficheros externos generados correspondientes a esta lección se encuentran disponibles para su consulta en la carpeta /lecciones/20/ del repositorio.\n","date":1564286379,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1564286379,"objectID":"e6b83bcfcd30c38afe1c579bb5e13530","permalink":"https://imalexissaez.github.io/2019/07/28/curso-de-python-05-nivel-basico/","publishdate":"2019-07-28T05:59:39+02:00","relpermalink":"/2019/07/28/curso-de-python-05-nivel-basico/","section":"post","summary":"Generadores","tags":["Python"],"title":"Curso de Python #05 (Nivel básico)","type":"post"},{"authors":["Alexis Sáez"],"categories":["Recursos"],"content":"En aquesta pàgina compilaré recursos útils a l’hora d’estudiar valencià per superar les proves que avaluen el nivell C1 del Marc Europeu Comú de Referència (MECR d’ara endavant) per a les llengües.\n1. Cursos 1.1. Punt per Punt En la següent graella trobem els enllaços a una excel·lent col·lecció de fascicles relacionats amb el valencià i agrupats segons els diferents nivells que proposa el MECR. En particular, els exercicis proposats per al nivell C1 ens ajudaran a preparar la corresponent prova, ja que són representatius d’aquesta.\nNivell Fascicles A2 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18. B1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18. B2 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18. C1 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18. C2 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18. 1.2. Universitat Politècnica de València La Universitat Politècnica de València (UPV d’ara endavant) ha elaborat un parell de MOOC (Massive Online Open Course) gratuïts per als estudiants dels nivells B2, C1 i C2. Els podem trobar fàcilment en el seu portal en línia UPV[X]:\nPreparació nivell B2 (Intermedi) de Valencià. Preparació nivell C1 (Suficiència) de Valencià. Preparació nivell C2 (Superior) de Valencià. Hem d’anar amb cura, perquè no cobreixen la totalitat del temari, sinó aquelles parts d’aquest que resulten més complicades als alumnes.\nD’altra banda, si únicament estem interessats en els recursos audiovisuals dels esmentats MOOC, la majoria els trobem en el portal UPV[Media], agrupats sota l’etiqueta Aprèn valencià.\n2. Diccionaris i gramàtiques L’Acadèmia Valenciana de la Llengua (AVL d’ara endavant) comparteix en el seu portal els documents normatius que han de ser la nostra referència a l’hora d’estudiar valencià:\nDiccionari Normatiu Valencià (DNV). Diccionari ortogràfic i de pronunciació del valencià (DOPV). Gramàtica normativa valenciana (GNV). Gramàtica valenciana bàsica (GVB). A més a més, ens poden resultar d’utilitat els següents documents publicats per l’AVL:\nLa normativa ortogràfica del valencià. L’estàndard oral del valencià. Els gentilicis valencians. Altres recursos que ens ajudaran són:\nDiccionari de la llengua catalana (DIEC2). Diccionari de sinònims. Diccionari català-valencià-balear. Gramàtica essencial de la llengua catalana. Lèxic Obert Flexionat de Català: pàgina web que recull diversos diccionaris i respon a preguntes del tipus: com es conjuga el verb dirigir? Quin és el plural de llapis? Quin és el gentilici per a Àustria? Amb quines síl·labes es divideix la paraula abstrusament? Quantes síl·labes té intuïció? Quin substantiu s’utilitza per denominar l’acció del verb aclucar? De quina llengua prové el manlleu afrikaans? Optimot: cercador d’informació lingüística que ajuda a resoldre dubtes sobre la llengua catalana. Ortografia catalana. 3. Lèxics L’AVL té en la seua web oficial una sèrie de fitxes de vocabulari dels més diversos assumptes:\nd’activitats recreatives i a l’aire lliure, de l’astronomia, de l’automòbil, de la casa, de la carnisseria, de la cultura religiosa, de la ferreteria, de la imatge personal, de la música, de la religió catòlica, de la roba i complements, de la salut i la sanitat, de la xarcuteria, de les fruites i verdures, de les malalties, del carrer, del cos humà, del forn i de les pastisseries, del futbol, del joc de pilota, del peix i marisc, del restaurant, dels esports, dels instruments musicals i dels viatges. D’altra banda, en el portal gencat trobem:\n50 termes del món digital, 50 termes del món de l’empresa. 4. Jocs educatius Aquests recursos són útils per a reforçar l’ortografia, la gramàtica i el vocabulari:\nEnjogassa’t: t’esperen més de tres mil reptes i moltes sorpreses per a fornir el vocabulari, regar l’ortografia i enfortir la gramàtica. El valencià estarà més viu gràcies a tu i sentiràs l’energia de la teua llengua. Jugallengua: és una aplicació que ajuda a aprendre valencià de manera lúdica, ja que s’ha dissenyat com un joc de preguntes i respostes sobre llengua. Pràctic 2: és un programa que integra un conjunt d’activitats d’autoaprenentatge, de manera que l’usuari, gràcies al sistema d’autocorrecció, pot comprovar immediatament quin és el grau de coneixements de valencià que té assolit i a quins aspectes de la gramàtica ha de dedicar més esforços per a millorar els seus coneixements lingüístics. 5. Convocatòries d’exàmens En l’actualitat, hi ha tres entitats que acrediten els coneixements de valencià: la Comissió Interuniversitària d’Estandardització d’Acreditacions de Coneixements de Valencià (CIEACOVA), la Junta Qualificadora de Coneixements de Valencià (JQCV) i l’Escola Oficial d’Idiomes (EOI).\nLa inscripció per a les proves es fa amb mesos d’antelació, per la qual cosa hem de visitar amb freqüència les webs oficials de les esmentades entitats. Els exàmens i les corresponents preinscripcions tenen lloc, aproximadament, en:\nMes Entitat que acredita Preinscripció …","date":1563767979,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1563767979,"objectID":"5bdc4bdce486e7850bf4728b429ac709","permalink":"https://imalexissaez.github.io/2019/07/22/recursos-valencia-c1/","publishdate":"2019-07-22T05:59:39+02:00","relpermalink":"/2019/07/22/recursos-valencia-c1/","section":"post","summary":"En aquesta pàgina compilaré recursos útils a l'hora d'estudiar valencià per superar les proves que avaluen el nivell C1 del *Marc Europeu Comú de Referència* (MECR d'ara endavant) per a les llengües.","tags":["C1","Valencià"],"title":"Recursos de valencià (nivell C1)","type":"post"},{"authors":["Alexis Sáez"],"categories":["Programación"],"content":"1. Bucles I 1.1 Vídeo 1.2. Notas personales Abordaremos ahora otro tipo de estructura de control de flujo (las estructuras condicionales asimismo lo eran): los bucles.\nLa utilidad de un bucle es repetir una o varias líneas de código tantas veces como sea preciso (siendo esta cantidad conocida de antemano o no). En Python tenemos dos tipos de bucles:\ndeterminados: sabemos a priori cuántas veces se repetirá el bloque de código, e indeterminados: desconocemos a priori el número de repeticiones del bloque de código. Empecemos viendo el primer tipo, al que pertenece la instrucción for, cuya sintaxis es:\nfor variable in elemento_a_recorrer: instrucciones donde el elemento_a_recorrer puede ser una lista, una tupla, una cadena de texto…\nPor ejemplo, para imprimir tres veces una palabra, una posible estrategia sería:\nfor i in [1, 2, 3]: print(\u0026#34;Hola\u0026#34;) Aunque hemos utilizado una lista de números, no es imprescindible. El siguiente ejemplo consigue el mismo resultado:\nfor i in [\u0026#34;enero\u0026#34;, \u0026#34;febrero\u0026#34;, \u0026#34;marzo\u0026#34;]: print(\u0026#34;Hola\u0026#34;) En ambos casos, el elemento a recorrer es una lista de tres elementos y es por ello que el mensaje \u0026#34;Hola\u0026#34; se repite en tres ocasiones, tantas como el mencionado número de elementos de la correspondiente lista.\nSi en lugar de un texto predeterminado optamos por imprimir la propia variable en ambos casos, el resultado es:\nfor i in [1, 2, 3]: print(i) # 1 # 2 # 3 for i in [\u0026#34;enero\u0026#34;, \u0026#34;febrero\u0026#34;, \u0026#34;marzo\u0026#34;]: print(i) # enero # febrero # marzo La variable no tiene que denominarse necesariamente i:\nfor meses in [\u0026#34;enero\u0026#34;, \u0026#34;febrero\u0026#34;, \u0026#34;marzo\u0026#34;]: print(meses) # enero # febrero # marzo 1.3. Código fuente El código fuente y los posibles ficheros externos generados correspondientes a esta lección se encuentran disponibles para su consulta en la carpeta /lecciones/14/ del repositorio.\n2. Bucles II 2.1. Vídeo 2.2. Notas personales Las instrucciones print() que aparecen en los bucles de tipo for insertan un salto de línea en cada iteración:\nfor i in [\u0026#34;Píldoras\u0026#34;, \u0026#34;Informáticas\u0026#34;, 3]: print(\u0026#34;Hola\u0026#34;) # Hola # Hola # Hola Si deseamos que la impresión se produzca en la misma línea, hemos de declarar adecuadamente el argumento end de la función print():\nfor i in [\u0026#34;Píldoras\u0026#34;, \u0026#34;Informáticas\u0026#34;, 3]: print(\u0026#34;Hola\u0026#34;, end=\u0026#34; \u0026#34;) # Hola Hola Hola Si el elemento a recorrer es una cadena de texto, el bucle for ejecutará tantas iteraciones como letras tenga esta:\nfor i in \u0026#34;Alexis\u0026#34;: print(i, end=\u0026#34;-\u0026#34;) # A-l-e-x-i-s- Esta característica nos permite, por ejemplo, programar una primera aproximación a un verificador de direcciones de correo electrónico, que nos indique que una es correcta si alberga una arroba en su declaración:\nemail = False for i in \u0026#34;direccion@dominio.com\u0026#34;: if i == \u0026#34;@\u0026#34;: email = True if email == True: print(\u0026#34;El email es correcto.\u0026#34;) else: print(\u0026#34;El email no es correcto.\u0026#34;) # El email es correcto. El anterior bloque de código se puede simplificar un tanto:\nfor i in \u0026#34;direccion@dominio.com\u0026#34;: if i == \u0026#34;@\u0026#34;: email = True if email: print(\u0026#34;El email es correcto.\u0026#34;) else: print(\u0026#34;El email no es correcto.\u0026#34;) # El email es correcto. Generemos una versión interactiva de este programa:\ndef evalua_email(direcc): email = False for i in direcc: if i == \u0026#34;@\u0026#34;: email = True if email: print(\u0026#34;El email es correcto.\u0026#34;) else: print(\u0026#34;El email no es correcto.\u0026#34;) direcc = input(\u0026#34;Introduce tu dirección de correo electrónico: \u0026#34;) evalua_email(direcc) Podemos ampliar la función de verificación de correos electrónicos para que compruebe si también hay un carácter . en la cadena de texto:\ndef evalua_email(direcc): arroba = False punto = False for i in direcc: if i == \u0026#34;@\u0026#34;: arroba = True if i == \u0026#34;.\u0026#34;: punto = True if arroba and punto: print(\u0026#34;El email es correcto.\u0026#34;) else: print(\u0026#34;El email no es correcto.\u0026#34;) direcc = input(\u0026#34;Introduce tu dirección de correo electrónico: \u0026#34;) evalua_email(direcc) Veamos el uso del tipo range en combinación con el bucle for:\nfor i in range(5): print(i) # 0 # 1 # 2 # 3 # 4 2.3. Código fuente El código fuente y los posibles ficheros externos generados correspondientes a esta lección se encuentran disponibles para su consulta en la carpeta /lecciones/15/ del repositorio.\n3. Bucles III 3.1. Vídeo 3.2. Notas personales Veamos algunas opciones de la función print() a la hora de imprimir el valor de variables durante la ejecución de un bucle:\nfor i in range(5): print(f\u0026#34;valor de la variable {i}\u0026#34;) # valor de la variable 0 # valor de la variable 1 # valor de la variable 2 # valor de la variable 3 # valor de la variable 4 La f que aparece antes del texto entrecomillado indica el uso de funciones f, que permiten interesantes opciones de cara a la impresión de textos en la consola. En esta ocasión, concatena la cadena de caracteres con el valor que toma la variable en cada iteración, indicada por {i}.\nEl tipo range admite el uso de argumentos adicionales:\nfor i in range(5, 10): print(f\u0026#34;valor de la variable {i}\u0026#34;) # valor de la variable 5 # valor de la variable 6 # valor de la variable 7 # valor de la variable 8 # valor de la variable 9 for i in range(5, 50, 5): …","date":1563681579,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1563681579,"objectID":"43b2dcc9668e3333d336ee705cfe7d81","permalink":"https://imalexissaez.github.io/2019/07/21/curso-de-python-04-nivel-basico/","publishdate":"2019-07-21T05:59:39+02:00","relpermalink":"/2019/07/21/curso-de-python-04-nivel-basico/","section":"post","summary":"Bucles","tags":["Python"],"title":"Curso de Python #04 (Nivel básico)","type":"post"},{"authors":["Alexis Sáez"],"categories":["Programación"],"content":"1. Condicionales I 1.1. Vídeo 1.2. Notas personales Las estructuras condicionales nos permiten alterar el flujo de ejecución de un programa. Por lo que respecta al condicional if, tiene la siguiente sintaxis:\nif condición: instrucciones La anterior condición suele venir expresada a través de operadores de comparación (\u0026lt;, \u0026gt;, \u0026lt;=, \u0026gt;=, ==, !=). Veamos un sencillo ejemplo de aplicación de una estructura condicional if en la definición de una función:\ndef evaluacion(nota): valoracion = \u0026#34;Aprobado\u0026#34; if nota \u0026lt; 5: valoracion = \u0026#34;Suspenso\u0026#34; return valoracion print(evaluacion(6)) # Aprobado print(evaluacion(1)) # Suspenso print(evaluacion(2.1)) # Suspenso Programemos una versión interactiva del anterior bloque de instrucciones, donde el usuario ha de introducir la nota durante la ejecución del código (a través de la función input()). Para ello, necesitamos activar la consola mediante el menú Tools, opción SublimeREPL y en el apartado Python seleccionamos Python - RUN current file.\ndef evaluacion(nota): valoracion = \u0026#34;Aprobado\u0026#34; if nota \u0026lt; 5: valoracion = \u0026#34;Suspenso\u0026#34; return valoracion print(\u0026#34;Programa de evaluación de notas de alumnos\u0026#34;) nota_alumno = input() print(evaluacion(nota_alumno)) No obstante, si ejecutamos e insertamos una nota numérica (por ejemplo, 8), Python nos arroja el siguiente error:\n# TypeError: \u0026#39;\u0026lt;\u0026#39; not supported between instances of \u0026#39;str\u0026#39; and \u0026#39;int\u0026#39; Ello es debido a que cualquier información introducida por el usuario desde el teclado se almacena como cadena de texto (\u0026#34;8\u0026#34;), y el operador \u0026lt; no está preparado para comparar textos y números. Resolvemos esta situación empleando la función int().\ndef evaluacion(nota): valoracion = \u0026#34;Aprobado\u0026#34; if nota \u0026lt; 5: valoracion = \u0026#34;Suspenso\u0026#34; return valoracion print(\u0026#34;Programa de evaluación de notas de alumnos\u0026#34;) nota_alumno = input() print(evaluacion(int(nota_alumno))) Siendo una iteración del programa, por ejemplo,\nPrograma de evaluación de notas de alumnos 8 Aprobado La función input() admite la posibilidad de indicar un mensaje:\ndef evaluacion(nota): valoracion = \u0026#34;Aprobado\u0026#34; if nota \u0026lt; 5: valoracion = \u0026#34;Suspenso\u0026#34; return valoracion print(\u0026#34;Programa de evaluación de notas de alumnos\u0026#34;) nota_alumno = input(\u0026#34;Introduce la nota del alumno: \u0026#34;) print(evaluacion(int(nota_alumno))) Siendo ahora una iteración del programa, por ejemplo:\nPrograma de evaluación de notas de alumnos Introduce la nota del alumno: 8 Aprobado 1.3. Código fuente El código fuente y los posibles ficheros externos generados correspondientes a esta lección se encuentran disponibles para su consulta en la carpeta /lecciones/10/ del repositorio.\n2. Condicionales II 2.1. Vídeo 2.2. Notas personales En este vídeo ampliaremos las posibilidades de la estructura condicional if mediante else y elif, quedando entonces su sintaxis como\nif condicion: instrucciones elif condicion: instrucciones else: instrucciones Empecemos creando un programa de control de acceso:\nprint(\u0026#34;Verificación de acceso\u0026#34;) edad_usuario = int(input(\u0026#34;Introduce tu edad: \u0026#34;)) if edad_usuario \u0026lt; 18: print(\u0026#34;No puedes pasar.\u0026#34;) else: print(\u0026#34;Puedes pasar.\u0026#34;) Veamos el resultado de algunas ejecuciones de este programa:\nVerificación de acceso Introduce tu edad: 19 Puedes pasar. Verificación de acceso Introduce tu edad: 15 No puedes pasar. Añadamos al programa la posibilidad de mostrar un mensaje de error si el usuario introduce un dato excesivamente elevado:\nprint(\u0026#34;Verificación de acceso\u0026#34;) edad_usuario = int(input(\u0026#34;Introduce tu edad: \u0026#34;)) if edad_usuario \u0026lt; 18: print(\u0026#34;No puedes pasar.\u0026#34;) elif edad_usuario \u0026gt; 100: print(\u0026#34;Edad incorrecta.\u0026#34;) else: print(\u0026#34;Puedes pasar.\u0026#34;) Veamos el resultado de ejecutar el anterior programa con distintos valores de edad:\nVerificación de acceso Introduce tu edad: 25 Puedes pasar. Verificación de acceso Introduce tu edad: 15 No puedes pasar. Verificación de acceso Introduce tu edad: 124 Edad incorrecta. Para reforzar el uso de esta estructura condicional, elaboremos un programa que asigna a cada calificación numérica su correspondiente etiqueta:\nprint(\u0026#34;Control de calificaciones\u0026#34;) nota_alumno = int(input(\u0026#34;Introduce la nota: \u0026#34;)) if nota_alumno \u0026lt; 0: print(\u0026#34;Nota incorrecta.\u0026#34;) elif nota_alumno \u0026lt; 5: print(\u0026#34;Insuficiente.\u0026#34;) elif nota_alumno \u0026lt; 6: print(\u0026#34;Suficiente.\u0026#34;) elif nota_alumno \u0026lt; 7: print(\u0026#34;Bien.\u0026#34;) elif nota_alumno \u0026lt; 9: print(\u0026#34;Notable.\u0026#34;) elif nota_alumno \u0026lt;= 10: print(\u0026#34;Sobresaliente.\u0026#34;) else: print(\u0026#34;Nota incorrecta.\u0026#34;) Veamos el resultado de ejecutar el anterior programa con distintas calificaciones:\nControl de calificaciones Introduce la nota: -6 Nota incorrecta. Control de calificaciones Introduce la nota: 4 Insuficiente. Control de calificaciones Introduce la nota: 6 Bien. Control de calificaciones Introduce la nota: 7 Notable. Control de calificaciones Introduce la nota: 10 Sobresaliente. Control de calificaciones Introduce la nota: 12 Nota incorrecta. Ejercicio 1: crea un programa que pida dos números enteros por teclado. El programa tendrá una función llamada devuelve_max encargada de devolver el número más alto de los dos introducidos.\ndef …","date":1563076779,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1563076779,"objectID":"cd24919f30e9a69650e7afda1b599a60","permalink":"https://imalexissaez.github.io/2019/07/14/curso-de-python-03-nivel-basico/","publishdate":"2019-07-14T05:59:39+02:00","relpermalink":"/2019/07/14/curso-de-python-03-nivel-basico/","section":"post","summary":"Condicionales","tags":["Python"],"title":"Curso de Python #03 (Nivel básico)","type":"post"},{"authors":["Alexis Sáez"],"categories":["Programación"],"content":"1. Tipos, operadores y variables 1.1. Vídeo 1.2. Notas personales Los tipos de datos disponibles en Python son:\nNuméricos Enteros (int) Coma flotante (float) Complejos Textos Booleanos True False Los principales operadores en Python son:\nAritméticos: +, -, *, /, %, ** y //. Comparación: ==, !=, \u0026gt;, \u0026lt;, \u0026gt;= y \u0026lt;=. Lógicos: AND, OR y NOT. Asignación: =, +=, -=, *=, /=, %=, **= y //=. Especiales: is, is not, in y not in. Los operadores aritméticos nos permiten utilizar Python a modo de calculadora.\n\u0026gt;\u0026gt;\u0026gt; 5 + 6 # Suma 11 \u0026gt;\u0026gt;\u0026gt; 11 - 8 # Resta 3 \u0026gt;\u0026gt;\u0026gt; 2 * 6 # Multiplicación 12 \u0026gt;\u0026gt;\u0026gt; 7 / 2 # División 3.5 \u0026gt;\u0026gt;\u0026gt; 10 % 3 # Módulo 1 \u0026gt;\u0026gt;\u0026gt; 5 ** 2 # Exponenciación 25 \u0026gt;\u0026gt;\u0026gt; 7 // 2 # División entera 3 Una variable es un espacio en la memoria del ordenador donde se almacenará un valor que podrá cambiar durante la ejecución del programa. Para declararla, utilizamos el patrón nombre = valor y su tipo lo establece el contenido, no el contenedor.\nNota: en Python todo son objetos (variables, números…).\n\u0026gt;\u0026gt;\u0026gt; nombre = 5 \u0026gt;\u0026gt;\u0026gt; type(nombre) \u0026lt;class \u0026#39;int\u0026#39;\u0026gt; \u0026gt;\u0026gt;\u0026gt; nombre = \u0026#34;Alexis\u0026#34; \u0026gt;\u0026gt;\u0026gt; type(nombre) \u0026lt;class \u0026#39;str\u0026#39;\u0026gt; \u0026gt;\u0026gt;\u0026gt; nombre = 5.2 \u0026gt;\u0026gt;\u0026gt; type(nombre) \u0026lt;class \u0026#39;float\u0026#39;\u0026gt; Definimos cadenas de texto mediante los símbolos \u0026#39;, \u0026#34; y \u0026#39;\u0026#39;\u0026#39;, permitiendo esta última opción saltos de líneas.\n\u0026gt;\u0026gt;\u0026gt; mensaje = \u0026#39;Esto es un mensaje.\u0026#39; \u0026gt;\u0026gt;\u0026gt; print(mensaje) Esto es un mensaje. \u0026gt;\u0026gt;\u0026gt; mensaje = \u0026#34;Esto es un mensaje.\u0026#34; \u0026gt;\u0026gt;\u0026gt; print(mensaje) Esto es un mensaje. \u0026gt;\u0026gt;\u0026gt; mensaje = \u0026#39;\u0026#39;\u0026#39;Esto es un mensaje ... con tres saltos ... de línea.\u0026#39;\u0026#39;\u0026#39; \u0026gt;\u0026gt;\u0026gt; print(mensaje) Esto es un mensaje con tres saltos de línea. Los operadores de comparación suelen aparecer en bloques condicionales.\n\u0026gt;\u0026gt;\u0026gt; numero1 = 5 \u0026gt;\u0026gt;\u0026gt; numero2 = 7 \u0026gt;\u0026gt;\u0026gt; if numero1 \u0026gt; numero2: ... print(\u0026#34;El número 1 es mayor.\u0026#34;) ... else: ... print(\u0026#34;El número 2 es mayor.\u0026#34;) ... El número 2 es mayor. Nota: no confundir el operador de asignación = con el operador de comparación ==.\n\u0026gt;\u0026gt;\u0026gt; numero1 = 2 \u0026gt;\u0026gt;\u0026gt; numero2 = 3 \u0026gt;\u0026gt;\u0026gt; if numero1 == numero2: ... print(\u0026#34;Los números son iguales.\u0026#34;) ... else: ... print(\u0026#34;Los números son diferentes.\u0026#34;) ... Los números son diferentes. 2. Funciones I 2.1. Vídeo 2.2. Notas personales Una función es un conjunto de líneas de código agrupadas, que funcionan como una unidad realizando una tarea específica. Puede devolver valores, tener parámetros o argumentos y recibe el nombre de método cuando está definida dentro de una clase.\nEn Python existen funciones predifinidas, como por ejemplo print(). Su principal utilidad es la reutilización de código y su sintaxis es:\ndef nombre(parámetros): instrucciones de la función return(opcional) Ejecutamos (o llamamos) una función tecleando nombre_función(parámetros).\nA continuación, dejamos de lado el IDLE de Sublime Text 3 y pasamos a compilar directamente ficheros desde el propio editor. Para ello, desplegamos el menú Tools y en el apartado Build System escogemos la opción Python. Acto seguido, creamos el fichero funciones.py, que contendrá la instrucción\nprint(\u0026#34;Estamos aprendiendo Python.\u0026#34;) y utilizamos la combinación de teclas ctrl + b para compilar. En la parte inferior de la ventana aparecerá el resultado de la ejecución y el tiempo invertido.\nAmpliemos el anterior fichero a\nprint(\u0026#34;Estamos aprendiendo Python.\u0026#34;) print(\u0026#34;Estamos aprendiendo instrucciones básicas.\u0026#34;) print(\u0026#34;Poco a poco iremos avanzando.\u0026#34;) e imaginemos que necesitamos que las anteriores tres líneas se impriman cinco veces. Podemos, simplemente, copiar y pegar el anterior bloque de código reiteradamente:\nprint(\u0026#34;Estamos aprendiendo Python.\u0026#34;) print(\u0026#34;Estamos aprendiendo instrucciones básicas.\u0026#34;) print(\u0026#34;Poco a poco iremos avanzando.\u0026#34;) print(\u0026#34;Estamos aprendiendo Python.\u0026#34;) print(\u0026#34;Estamos aprendiendo instrucciones básicas.\u0026#34;) print(\u0026#34;Poco a poco iremos avanzando.\u0026#34;) print(\u0026#34;Estamos aprendiendo Python.\u0026#34;) print(\u0026#34;Estamos aprendiendo instrucciones básicas.\u0026#34;) print(\u0026#34;Poco a poco iremos avanzando.\u0026#34;) print(\u0026#34;Estamos aprendiendo Python.\u0026#34;) print(\u0026#34;Estamos aprendiendo instrucciones básicas.\u0026#34;) print(\u0026#34;Poco a poco iremos avanzando.\u0026#34;) print(\u0026#34;Estamos aprendiendo Python.\u0026#34;) print(\u0026#34;Estamos aprendiendo instrucciones básicas.\u0026#34;) print(\u0026#34;Poco a poco iremos avanzando.\u0026#34;) Las funciones nos permiten reutilizar código para, precisamente, evitar que actuemos como arriba. Definamos una función llamada mensaje() y ejecutémosla tantas veces como deseemos.\ndef mensaje(): print(\u0026#34;Estamos aprendiendo Python.\u0026#34;) print(\u0026#34;Estamos aprendiendo instrucciones básicas.\u0026#34;) print(\u0026#34;Poco a poco iremos avanzando.\u0026#34;) Ahora, la tarea que buscábamos realizar quedaría como:\nmensaje() mensaje() mensaje() mensaje() mensaje() Entre distintas llamadas a una función puede haber cualquier otro tipo de instrucción:\nmensaje() print(\u0026#34;Ejecutando código fuera de función\u0026#34;) mensaje() 2.3. Código fuente El código fuente y los posibles ficheros externos generados correspondientes a esta lección se encuentran disponibles para su consulta en la carpeta /lecciones/05/ del repositorio.\n3. Funciones II 3.1. Vídeo 3.2. Notas personales Comencemos definiendo una función que suma dos números dados (5 y 7), mediante el mecanismo aprendido en la lección …","date":1562471979,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1562471979,"objectID":"787f685f9a22248e18736067434c7b41","permalink":"https://imalexissaez.github.io/2019/07/07/curso-de-python-02-nivel-basico/","publishdate":"2019-07-07T05:59:39+02:00","relpermalink":"/2019/07/07/curso-de-python-02-nivel-basico/","section":"post","summary":"Tipos y variables","tags":["Python"],"title":"Curso de Python #02 (Nivel básico)","type":"post"},{"authors":["Alexis Sáez"],"categories":["Reflexiones"],"content":"Aunque hace unos días publiqué un artículo que trataba sobre la configuración de ciertos aspectos de las hojas de estilos CSS del tema Beautiful Hugo, sí que es cierto que Infinitos Contrastes lleva ya unas cuantas semanas bajo los auspicios del tema Academic.\nDe vez en cuando, me gusta echar un vistazo a la lista oficial de temas de la web oficial de Hugo, sobre todo cuando siento que la organización de los contenidos no me termina de convencer. En uno de esos paseos, descubrí el tema Academic y tres de sus aspectos enseguida captaron poderosamente mi atención:\nEn primer lugar, la construcción de la página inicial del sitio a través de diferentes widgets. En Infinitos Contrastes apenas uso unos pocos de ellos, pero en la página web de ejemplo del tema aparecen casi todos y nos permiten hacernos una idea de su enorme potencial. En segundo lugar, la sección dedicada a los proyectos personales, con la posibilidad incorporada de filtrar por etiquetas, es una funcionalidad maravillosa en mi opinión. Ahora mismo, estoy experimentando con ella para organizar los Problemas e información sobre la Capacitación en Valenciano, por ejemplo. Finalmente, aunque no por ello menos impactante, la plantilla docs, diseñada para elaborar documentación, pero cuya flexibilidad permite organizar fácilmente los apuntes de un curso o un proyecto de extensión considerable. Precisamente ha sido mi elección para recopilar una serie de notas personales de un curso de Python que recientemente he finalizado. Además, una vez metido de lleno en los entresijos de este tema, no puedo más que destacar la excelente documentación del mismo. Con Beautiful Hugo me animé a escribir una serie de artículos donde explicaba cómo tratar ciertos aspectos (aquel primer proyecto, Metablog), pero con Academic es a todas luces innecesario, ya que han puesto a nuestra disposición toda una serie de detalladas explicaciones.\nPor otro lado, el nivel de actualizaciones sigue un elevado ritmo y la resolución de bugs (una vez notificados en GitHub abriendo issues) es casi instantánea. Cada pocos días aparece un nuevo commit que puede interesarnos y el proceso de actualización, localmente vía script o automáticamente mediante Netlify, es muy sencillo.\nSin embargo, evidentemente, no todo han sido luces durante la migración. Las peculiaridades de este tema han provocado que haya tenido que revisar, una por una, todas las páginas generadas hasta el momento. Si bien es cierto que principalmente el trabajo se ha reducido a la edición de las cabeceras de los documentos, todavía quedan ciertos detalles a ajustar que, poco a poco, iré abordando en los próximos meses. En esta línea, también me gustaría comentar que no es un tema que recomendaría a alguien que se iniciase en el desarrollo web con Hugo, puesto que la cantidad de opciones disponibles y decisiones a tomar puede resultar abrumadora.\nEn resumen, Academic es un tema excelente para aquellas personas que deseen ir ‘‘un paso más allá’’ en sus blogs y estén dispuestas a invertir unas cuantas horas entre la experimentación y la lectura de la extensa documentación.\n","date":1562022001,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1562022001,"objectID":"6e14e78de683eb1061aca39ba1156597","permalink":"https://imalexissaez.github.io/2019/07/02/migrando-al-tema-academic/","publishdate":"2019-07-02T00:00:01+01:00","relpermalink":"/2019/07/02/migrando-al-tema-academic/","section":"post","summary":"En este artículo, comento las razones que me han llevado a abandonar el tema Beautiful Hugo en favor de Academic.","tags":["Academic","Hugo"],"title":"Migrando al tema Academic","type":"post"},{"authors":["Alexis Sáez"],"categories":["Programación"],"content":"1. Introducción del curso 1.1. Vídeo 1.2. Notas personales En este vídeo, se presenta el curso de Python y los motivos de su desarrollo. Después se revisa el temario, que aborda:\nIntroducción. Requisitos previos. Instalación software. Fundamentos y sintaxis básica del lenguaje. POO con Python. Algoritmos, listas y tramos. BBDD. Trabajo con gráficos y contenidos. Procesos y tareas. Programación de red. Sockets. Ejercicios prácticos. La lección termina con un breve apartado de FAQ.\n2. Introducción a Python 2.1. Vídeo 2.2. Notas personales En este vídeo, se repasa la historia de Python y sus principales características. Entre ellas, destacan:\nLenguaje interpretado de alto nivel, orientado a objetos, versátil y que es de código abierto. Gramática sencilla, clara y muy legible, con tipado dinámico y fuerte A través de este enlace descargamos la última versión de Python (3.7.3 a la hora de escribir estas líneas). Si queremos la versión de 64 bits para Windows, hemos de buscarla en esta página.\nDurante su instalación:\nActivamos la casilla que añade la ruta de Python al PATH. Pulsamos, al final de la instalación, sobre la opción que elimina la restricción de longitud máxima sobre las rutas del PATH. Con respecto a los IDE, en el curso se utilizará Sublime Text 3, aunque se ofrecen como alternativas Eclipse y Notepad++.\n3. Sintaxis básica 3.1. Vídeo 3.2. Notas personales En el IDLE de Python, tecleamos:\n\u0026gt;\u0026gt;\u0026gt; print(\u0026#34;¡Hola mundo!\u0026#34;) # Esto es una instrucción ¡Hola mundo! Usando ; escribimos varias instrucciones en una misma línea, aunque es desaconsejable por restar legibilidad.\n\u0026gt;\u0026gt;\u0026gt; print(\u0026#34;¡Hola mundo!\u0026#34;); print(\u0026#34;¡Bienvenidos!\u0026#34;) ¡Hola mundo! ¡Bienvenidos! Introducimos los comentarios con el símbolo # para:\nAnotar el código, facilitando futuros mantenimientos. Desactivar bloques de instrucciones, para localizar errores cometidos. \u0026gt;\u0026gt;\u0026gt; # Esto es un comentario ... Mediante el símbolo \\ dividimos una instrucción en varias líneas, aunque es desaconsejable por restar legibilidad.\n\u0026gt;\u0026gt;\u0026gt; mi_nombre = \u0026#34;Mi nombre es Alexis.\u0026#34; \u0026gt;\u0026gt;\u0026gt; mi_nombre \u0026#39;Mi nombre es Alexis.\u0026#39; \u0026gt;\u0026gt;\u0026gt; mi_nombre = \u0026#34;Mi nombre es \\ ... Alexis\u0026#34; \u0026gt;\u0026gt;\u0026gt; mi_nombre \u0026#39;Mi nombre es Alexis\u0026#39; Construimos los bloques de código mediante identación. El IDLE se encarga automáticamente de procurarla:\n\u0026gt;\u0026gt;\u0026gt; a = 0 \u0026gt;\u0026gt;\u0026gt; for i in range(5): ... a += 1 ... print(a) ... 1 2 3 4 5 \u0026gt;\u0026gt;\u0026gt; Durante el curso, usaremos el IDLE de Sublime Text 3. Para ello, descargamos el editor a través de este enlace y lo instalamos. Al iniciarlo:\nDesplegamos el menú Tools y seleccionamos Command Palette.... Escribimos Install Package Control y clicamos sobre la opción que aparece. Desplegamos, de nuevo, el menú Tools, seleccionamos Command Palette... y tecleamos install package. En la siguiente ventana, escribimos SublimeREPL, para así tener el interprete de Python disponible desde el propio editor. Para activarlo, desde el menú Tools, seleccionamos ahora SublimeREPL y buscamos Python. Entre las opciones que aparecen, escogemos Python. ","date":1561953579,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1561953579,"objectID":"d602a71f92e0171cb8be65e66dcfed51","permalink":"https://imalexissaez.github.io/2019/07/01/curso-de-python-01-nivel-basico/","publishdate":"2019-07-01T05:59:39+02:00","relpermalink":"/2019/07/01/curso-de-python-01-nivel-basico/","section":"post","summary":"Introducción a Python","tags":["Python"],"title":"Curso de Python #01 (Nivel básico)","type":"post"},{"authors":["Alexis Sáez"],"categories":["Reseñas"],"content":"Durante los últimos meses he estado centrado, casi exclusivamente, en la obtención del requisito lingüístico de cara a opositar en la Comunidad Valenciana. En breve, ello se traduce en haber alcanzado un nivel C1 en una lengua que hacía unas dos décadas que no usaba en absoluto y, además, haber superado una prueba de capacitación para ejercer la docencia en dicha lengua.\nAsí pues, con un cierto grado de saturación del estudio de las letras, me apetecía iniciar un pequeño proyecto paralelo, que me permitiese desconectar y, a ser posible, relacionado con la Ciencia de Datos. No obstante, mis anteriores escarceos en esta disciplina han sido siempre utilizando el lenguaje de programación R, mientras que la tendencia actual sugiere el uso de Python en estos páramos. Aunque este último no es un gran desconocido para mí, sí que es cierto que necesitaba un refresco de su sintaxis, así como de sus muchas peculiaridades.\nCuriosamente, de entre los varios MOOC, libros y tutoriales disponibles en internet, fue esta lista de reproducción de YouTube, de la mano de Píldoras Informáticas, la que captó poderosamente mi atención. Su extensión, más que considerable, anticipaba que cumpliría con creces mis necesidades de cara a repasar Python. Además, en un rápido vistazo al índice, observé que la mencionada lista incluía aspectos que no había tratado con este lenguaje de programación (aunque algunos de ellos sí con otros), como la construcción de interfaces gráficas, el manejo de bases de datos o el uso de funciones decoradoras, por nombrar algunos.\nEl enfoque del ‘Curso Python desde 0’ es realmente práctico. La teoría asociada a cada una de las secciones no es que brille por su ausencia, pero sí es cierto que se reduce a la mínima expresión necesaria para poder implementar los conceptos y sin que las diversas instrucciones parezcan extraídas de la chistera de un mago. Las explicaciones son fáciles de seguir y en aquellos puntos donde el instructor, por su experiencia, considera o anticipa la posible aparición de dificultades, el análisis del código incluye hasta repasos detallados simulando el flujo de ejecución del algoritmo.\nPor otro lado, es una bendición que no se detenga en los clásicos parajes de los cursos introductorios, en los que apenas se estudian variables, operadores, estructuras condicionales, bucles, funciones y, de manera muy superficial, el paradigma de programación orientada a objetos. En esta lista de reproducción, se tratan todos los anteriores conceptos, con una profundidad adecuada y, además, mediante prácticas guiadas, se construyen aplicaciones interesantes como excusa a introducir áreas como el diseño de interfaces, el manejo de bases de datos, el uso de expresiones regulares, las funciones anónimas o la realización de pruebas a través de la documentación.\nSin embargo, por añadir una insignificante tara a este maravilloso recurso, la cantidad de ejercicios propuestos es ciertamente reducida y solo aparecen en los primeros estadios del curso. En mi opinión, un lenguaje de programación se aprende de manera práctica, desafiando los conceptos estudiados mediante retos de dificultad adecuada. Sí que es verdad que cada uno, a través de los campos de su interés, puede plantearse sus propias actividades; pero considero que se ha perdido un tanto la oportunidad de hacer de este curso de Python una herramienta de aprendizaje más activa.\nPara finalizar, me gustaría comentar que publicaré mis notas personales, tomadas durante la visualización de la lista de reproducción, en futuras entradas del blog, por si alguna persona las pudiera encontrar de utilidad en cualquier momento.\n","date":1560812401,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1560812401,"objectID":"a3b2d4cebe0b12a17e3eceb65500cad2","permalink":"https://imalexissaez.github.io/2019/06/18/resena-curso-python-desde-cero/","publishdate":"2019-06-18T00:00:01+01:00","relpermalink":"/2019/06/18/resena-curso-python-desde-cero/","section":"post","summary":"En este artículo, vamos a echar un vistazo a una interesante y más que recomendable lista de reproducción de YouTube, que contiene un curso de Python con secciones que van más allá de los páramos introductorios.","tags":["Python","YouTube"],"title":"Reseña: 'Curso Python desde 0'","type":"post"},{"authors":["Alexis Sáez"],"categories":["Oposiciones"],"content":"En la web oficial de la Conselleria de Educación, Investigación, Cultura y Deporte, dentro del apartado dedicado a la inclusión educativa, podemos encontrar interesantes publicaciones enfocadas hacia la atención al alumnado con necesidades específicas de apoyo educativo.\nLas diferentes guías están disponibles tanto en español como en valenciano y abarcan temas tan variados como:\nAltas capacidades intelectuales. Trastorno por déficit de atención e hiperactividad (TDAH). Trastorno de espectro del autismo. Dificultad específica de aprendizaje de la lectura. Dificultad específica en el lenguaje y la comunicación. En los manuales encontramos detalladas descripciones y un sinfín de útiles orientaciones a considerar a la hora de llevar a cabo actuaciones en el aula. Se convierten así en un más que maravilloso recurso para el correspondiente apartado de nuestras programaciones didácticas.\n","date":1559707179,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1559707179,"objectID":"9d3b4b2647b176ec5a09319a9a6ec180","permalink":"https://imalexissaez.github.io/2019/06/05/recursos-para-la-atencion-a-la-diversidad/","publishdate":"2019-06-05T05:59:39+02:00","relpermalink":"/2019/06/05/recursos-para-la-atencion-a-la-diversidad/","section":"post","summary":"Listado de recursos disponibles, editados por Conselleria, enfocados hacia la atención al alumnado con necesidades específicas de apoyo educativo.","tags":["AANEAE","Programación didáctica"],"title":"Recursos para la atención a la diversidad","type":"post"},{"authors":["Alexis Sáez"],"categories":["Tutoriales"],"content":"En esta entrada recojo el código necesario para localizar a español ciertas secciones de la página web, incluyendo un experimento que al final no terminó de convencerme, pero que comparto por si sirviera de inspiración a la creatividad ajena.\nAl final de cada una de las entradas del blog aparece un apartado de etiquetas, que permite agrupar fácilmente contenidos relacionados. Cambiemos la cabecera de esta sección de Tags: a Etiquetas:. Para ello, editamos con Sublime Text 3 el archivo main.css (ubicado en la ruta \\static\\css\\) y buscamos el siguiente bloque de código:\n.blog-tags:before { content: \u0026#34;Tags: \u0026#34;; } Acto seguido, modificamos el valor del atributo content:\n.blog-tags:before { content: \u0026#34;Etiquetas: \u0026#34;; } y guardamos los cambios realizados.\nSiguiendo con esta misma filosofía, traduzcamos ese View all que aparece en las páginas de índice que agrupan contenidos por taxonomías. Para ello, editamos el archivo terms.html (ubicado en la ruta \\layouts\\_default\\) y, utilizando el buscador de Sublime Text 3, nos situamos donde aparece la mencionada cadena de caracteres y la sustituimos, por ejemplo, por Ver todos.\nTodavía podemos mejorar un tanto la localización a español del tema a través de las taxonomías. Con tal objetivo en mente, modifiquemos el fichero config.toml (ubicado en el directorio raíz de la página web) como sigue, de\n# # Configuración de taxonomías # [taxonomies] category = \u0026#34;categories\u0026#34; tag = \u0026#34;tags\u0026#34; project = \u0026#34;projects\u0026#34; a\n# # Configuración de taxonomías # [taxonomies] category = \u0026#34;categories\u0026#34; tag = \u0026#34;tags\u0026#34; apartado = \u0026#34;apartados\u0026#34; proyecto = \u0026#34;proyectos\u0026#34; etiqueta = \u0026#34;etiquetas\u0026#34; Ahora, editamos la plantilla single.html (ubicada en la ruta \\layouts\\_default\\) y sustituimos el bloque de código:\n{{ if .Params.tags }} \u0026lt;div class=\u0026#34;blog-tags\u0026#34;\u0026gt; {{ range .Params.tags }} \u0026lt;a href=\u0026#34;{{ $.Site.LanguagePrefix | absURL }}/tags/{{ . | urlize }}/\u0026#34;\u0026gt;{{ . }}\u0026lt;/a\u0026gt;\u0026amp;nbsp; {{ end }} \u0026lt;/div\u0026gt; {{ end }} por\n{{ if .Params.etiquetas }} \u0026lt;div class=\u0026#34;blog-tags\u0026#34;\u0026gt; {{ range .Params.etiquetas }} \u0026lt;a href=\u0026#34;{{ $.Site.LanguagePrefix | absURL }}/etiquetas/{{ . | urlize }}/\u0026#34;\u0026gt;{{ . }}\u0026lt;/a\u0026gt;\u0026amp;nbsp; {{ end }} \u0026lt;/div\u0026gt; {{ end }} Si queremos que aparezca en las entradas del blog información sobre el apartado o proyecto al que pertenecen, no tendríamos más que incorporar dos nuevos bloques a continuación, utilizando el anterior como guía y llevando a cabo las adaptaciones pertinentes. Por otro lado, sería más que recomendable crear en el archivo de estilos css las clases blog-etiquetas, blog-apartados y blog-proyectos, para mejorar el mantenimiento de la localización del tema en un futuro.\nA continuación, hemos de editar las plantillas list.html e index.html (ubicadas ambas en la ruta \\layouts\\_default), substituyendo los bloques de código\n{{ if .Params.tags }} \u0026lt;div class=\u0026#34;blog-tags\u0026#34;\u0026gt; {{ range .Params.tags }} \u0026lt;a href=\u0026#34;{{ $.Site.LanguagePrefix | absURL }}/tags/{{ . | urlize }}/\u0026#34;\u0026gt;{{ . }}\u0026lt;/a\u0026gt;\u0026amp;nbsp; {{ end }} \u0026lt;/div\u0026gt; {{ end }} por\n{{ if .Params.etiquetas }} \u0026lt;div class=\u0026#34;blog-tags\u0026#34;\u0026gt; {{ range .Params.etiquetas }} \u0026lt;a href=\u0026#34;{{ $.Site.LanguagePrefix | absURL }}/etiquetas/{{ . | urlize }}/\u0026#34;\u0026gt;{{ . }}\u0026lt;/a\u0026gt;\u0026amp;nbsp; {{ end }} \u0026lt;/div\u0026gt; {{ end }} Añadiendo, acto seguido, bloques análogos para apartados y proyectos si lo hemos considerado oportuno.\nEste cambio nos obliga a actualizar la ruta de acceso a la página de etiquetas, por lo que debemos editar el archivo config.toml (ubicado en el directorio raíz de la página web) de manera que el bloque de código\n[[menu.main]] name = \u0026#34;Etiquetas\u0026#34; url = \u0026#34;tags\u0026#34; weight = 3 pase a ser\n[[menu.main]] name = \u0026#34;Etiquetas\u0026#34; url = \u0026#34;etiquetas\u0026#34; weight = 3 Finalmente, nos queda modificar el estilo de la cabecera de la página de etiquetas. Para ello editamos el archivo main.css (ubicado en la ruta \\static\\css\\) buscando el término header y añadiendo la cadena correspondiente a etiquetas. Por ejemplo, para el bloque de código\n.intro-header .page-heading, .intro-header .tags-heading { text-align: center; } la modificación quedaría como sigue\n.intro-header .page-heading, .intro-header .tags-heading, .intro-header .etiquetas-heading { text-align: center; } En total, hemos de proceder de esta manera en tres ocasiones.\nY ya que estamos con las manos en la masa, creemos las clases de estilos para etiquetas, apartados y proyectos trabajando sobre los bloques de código originales que aparecen tras el comentario /* --- Tags --- */ (recordemos que cualquier modificación puede implicar después que hayamos de editar la cabeceras de las páginas tal y como hicimos hace un instante). Así pues, nos van a quedar bloques como el que aparece a continuación:\n.blog-tags, .blog-apartados, .blog-etiquetas, .blog-proyectos { font-family: \u0026#39;Open Sans\u0026#39;, \u0026#39;Helvetica Neue\u0026#39;, Helvetica, Arial, sans-serif; color: #999; font-size: 15px; margin-bottom: 30px; } Aquellos en los que aparece el atributo before no los podemos agrupar tan fácilmente. No obstante, no deja de ser trabajo de copy\u0026amp;paste.\nComo he comentado arriba, no debemos olvidar añadir a las clases de las cabeceras las líneas …","date":1559361579,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1559361579,"objectID":"566ec5734f35e210ea8acbca24b70ed8","permalink":"https://imalexissaez.github.io/2019/06/01/unos-cambios-rapidos-a-las-plantillas/","publishdate":"2019-06-01T05:59:39+02:00","relpermalink":"/2019/06/01/unos-cambios-rapidos-a-las-plantillas/","section":"post","summary":"Lección 11: implementando la localización al español de ciertos elementos de la web.","tags":["css","Beautiful Hugo","Hugo","Metablog"],"title":"Unos cambios rápidos a las plantillas","type":"post"},{"authors":["Alexis Sáez"],"categories":["Oposiciones"],"content":"Acaba de salir la convocatoria del proceso selectivo de ingreso en los cuerpos docentes de profesores de Enseñanza Secundaria. Echémosle un vistazo, destacando alguna de sus partes.\nEl título completo del documento es:\nORDEN 7 / 2019, de 28 de febrero de 2019, de la Conselleria de Educación, Investigación, Cultura y Deporte, por la que se convoca procedimiento selectivo de ingreso y procedimiento para la adquisición de nuevas especialidades en los cuerpos docentes de profesores de Enseñanza Secundaria, profesores de escuelas oficiales de idiomas, profesores de Música y Artes Escénicas, profesores de Artes Plásticas y Diseño y profesores técnicos de Formación Profesional. [2019 / 2095] Algunos de sus fragmentos que me han resultado de interés son:\nPresentación de solicitudes: Quienes deseen tomar parte en este proceso selectivo deberán cumplimentar el modelo oficial de solicitud que estará disponible en la sede electrónica de la Generalitat Valenciana (http://sede.gva.es) y en la página web de la Conselleria de Educación, Investigación, Cultura y Deporte (http://www.ceice.gva.es/es/web/rrhh-educacion/oposiciones). Plazo de presentación: El plazo de presentación de la solicitud será del 5 al 29 de marzo de 2019. La no presentación de la misma en tiempo y forma supondrá la exclusión de la persona aspirante. Importe: 28,10 €, aunque varía dependiendo de ciertos supuestos. Fecha de comienzo: La realización de la primera prueba de la fase de oposición para las personas aspirantes en los procedimientos de ingreso libre y de reserva de personas con diversidad funcional tendrá lugar a partir del día 26 de junio de 2019. Acreditación de idiomas oficiales: Habrá pruebas previas, tanto para evaluar el nivel C1 de valenciano, como para adquirir el ‘‘Certificat de Capacitació per a l’Ensenyament en Valencià’’ (en las páginas 18 a 20 del documento). Directrices para la segunda prueba: Se dispondrá de un máximo de una hora para la defensa oral de la programación didáctica o de la guía docente presentada y la exposición oral de la unidad didáctica o del bloque temático, iniciando su exposición con la defensa de la programación didáctica o de la guía docente, que no podrá exceder de treinta minutos, y a continuación se realizará la exposición de la unidad didáctica o del bloque temático. Las programaciones didácticas o las guías docentes se presentarán de forma telemática a través de la sede electrónica de la Generalitat Valenciana (http://sede.gva.es), siendo necesario identificarse por cualquiera de los sistemas de identificación o firma electrónica admitidos en la propia sede electrónica. La entrega de las programaciones didácticas se deberá efectuar en un único documento con formato PDF que no supere los 20 MB. Distribución de plazas por sistemas de acceso: El correspondiente cuadro se encuentra en la página 31 del documento. Por ejemplo, para matemáticas se convocan 460 plazas. Programación didáctica: La programación didáctica, que tendrá carácter personal, deberá ser elaborada de forma individual por la persona aspirante, y tener una extensión máxima de 60 páginas, en formato DIN-A4, escritas a doble espacio, con letra Arial (no se admitirá ninguna otra tipología de Arial) y con un cuerpo de letra de 12 puntos, sin comprimir. La portada contendrá los datos de identificación de la persona aspirante, el cuerpo y la especialidad por la cual se presenta (no se contabilizará en las 60 páginas). No podrá contener hipervínculos. Los anexos no podrán superar las 15 páginas (que no se computarán en las 60 iniciales establecidas). En el caso de utilizar tablas, el cuerpo de la letra podrá reducirse hasta 9 puntos, sin comprimir. La presentación deberá efectuarse en un único documento en formato PDF que no superará los 20 MB. La programación didáctica deberá organizarse en un mínimo de 10 y un máximo de 15 unidades didácticas que deberán estar numeradas. Actualización:\nCORRECCIÓN de errores de la Orden 7 / 2019, de 28 de febrero, de la Conselleria de Educación, Investigación, Cultura y Deporte, por la que se convoca procedimiento selectivo de ingreso y procedimiento para la adquisición de nuevas especialidades en los cuerpos docentes de profesores de Enseñanza Secundaria, profesores de escuelas oficiales de idiomas, profesores de Música y artes Escénicas, profesores de Artes Plásticas y Diseño y profesores técnicos de Formación Profesional. [2019 / 2648] CORRECCIÓN de errores de la Orden 7 / 2019, de 28 de febrero, de la Conselleria de Educación, Investigación, Cultura y Deporte, por la que se convoca procedimiento selectivo de ingreso y procedimiento para la adquisición de nuevas especialidades en los cuerpos docentes de profesores de Enseñanza Secundaria, profesores de escuelas oficiales de idiomas, profesores de Música y artes Escénicas, profesores de Artes Plásticas y Diseño y profesores técnicos de Formación Profesional. [2019 / 3122] RESOLUCIÓN de 2 de abril de 2019, del director general de Centros y Personal Docente, por …","date":1551671979,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1551671979,"objectID":"4e1a0f2e251eb8167b5229a6fac9181d","permalink":"https://imalexissaez.github.io/2019/03/04/convocatoria-de-oposiciones-para-secundaria-en-la-comunidad-valenciana-2019/","publishdate":"2019-03-04T05:59:39+02:00","relpermalink":"/2019/03/04/convocatoria-de-oposiciones-para-secundaria-en-la-comunidad-valenciana-2019/","section":"post","summary":"Breve análisis de la convocatoria de oposiciones, destacando algunas de sus principales características.","tags":["Legislación"],"title":"Convocatoria de oposiciones para secundaria en la Comunidad Valenciana (2019)","type":"post"},{"authors":["Alexis Sáez"],"categories":["Tutoriales"],"content":"La semana anterior analizamos el paquete polynom, que nos permite fácilmente llevar a cabo la transcripción de divisiones de polinomios con LaTeX. A continuación, estudiaremos una manera alternativa para lidiar con este asunto que, además, nos permitirá operar en conjuntos finitos.\nSupongamos, sin pérdida de generalidad, que nuestro objetivo es dividir los polinomios\n$$ 5x^5 - 2x^4 + 2x^3 - 5x^2 + 2x + 1 $$\ny\n$$ 3x^3 + x^2 - 5x + 2 $$\nen $\\mathbb{Z}_7$. Para ello, ‘‘dibujaremos’’ la operación matemática en una matriz, método que nos permitirá organizar fácilmente los pasos y, de paso, imprimir algunas rayas horizontales cuando proceda.\nPara empezar, en el preámbulo del documento, insertamos las dos siguientes líneas:\n\\usepackage{tikz} \\usetikzlibrary{matrix} Ahora, donde deseemos ubicar la división de los anteriores polinomios, tecleamos:\n\\begin{center} \\begin{tikzpicture} \\matrix (a) [matrix of math nodes, column sep=0pt] { 5x^5 \u0026amp; -2x^4 \u0026amp; +2x^3 \u0026amp; -5x^2 \u0026amp; +2x \u0026amp; +1 \u0026amp; \u0026amp; 3x^3+x^2-5x+2 \\\\ }; \\draw (a-1-8.north west) |- (a-1-8.south east); \\end{tikzpicture} \\end{center} dando el resultado que figura en la siguiente imagen:\nPrimer resultado parcial. Organizar los monomios del dividendo como elementos individuales de una matriz nos facilitará la empresa de ‘‘alinear’’ las posteriores operaciones de la división. Por otro lado, el comando draw es el que dibuja la ‘‘caja’’ de esta operación matemática, tomando como referencia las posiciones de los elementos de la matriz.\nContinuemos la división, siempre teniendo en cuenta que trabajamos en $\\mathbb{Z}_7$. Así, para la primera etapa, teclearíamos acto seguido:\n\\begin{center} \\begin{tikzpicture} \\matrix (a) [matrix of math nodes, column sep=0pt] { 5x^5 \u0026amp; -2x^4 \u0026amp; +2x^3 \u0026amp; -5x^2 \u0026amp; +2x \u0026amp; +1 \u0026amp; \u0026amp; 3x^3+x^2-5x+2 \\\\ -5x^2 \u0026amp; +3x^4 \u0026amp; -x^3 \u0026amp; -x^2 \u0026amp; \u0026amp; \u0026amp; \u0026amp; 4x^2\\\\ \u0026amp; +x^4 \u0026amp; +x^3 \u0026amp; +x^2 \u0026amp; +2x \u0026amp; \u0026amp; \u0026amp; \\\\ }; \\draw (a-1-8.north west) |- (a-1-8.south east); \\draw (a-2-1.south west) -- (a-2-4.south east); \\end{tikzpicture} \\end{center} cuyo resultado se recoge en la siguiente figura:\nSegundo resultado parcial. Efectivamente, no queda tan estético como el que conseguíamos la semana pasada con el paquete polynom. No obstante, funcionalmente hablando, los pequeños desajustes horizontales de signos no molestan en exceso.\nUna vez asimilada la idea del procedimiento a seguir, únicamente nos resta continuar con la división, escribiendo ahora:\n\\begin{center} \\begin{tikzpicture} \\matrix (a) [matrix of math nodes, column sep=0pt] { 5x^5 \u0026amp; -2x^4 \u0026amp; +2x^3 \u0026amp; -5x^2 \u0026amp; +2x \u0026amp; +1 \u0026amp; \u0026amp; 3x^3+x^2-5x+2 \\\\ -5x^2 \u0026amp; +3x^4 \u0026amp; -x^3 \u0026amp; -x^2 \u0026amp; \u0026amp; \u0026amp; \u0026amp; 4x^2 + 5x + 1\\\\ \u0026amp; +x^4 \u0026amp; +x^3 \u0026amp; +x^2 \u0026amp; +2x \u0026amp; \u0026amp; \u0026amp; \\\\ \u0026amp; -x^4 \u0026amp; +2x^3 \u0026amp; -3x^2 \u0026amp; -3x \u0026amp; \u0026amp; \u0026amp; \\\\ \u0026amp; \u0026amp; +3x^3 \u0026amp; -2x^2 \u0026amp; -x \u0026amp; +1 \u0026amp; \u0026amp; \\\\ \u0026amp; \u0026amp; -3x^3 \u0026amp; -x^2 \u0026amp; -2x \u0026amp; -2 \u0026amp; \u0026amp; \\\\ \u0026amp; \u0026amp; \u0026amp; -3x^2 \u0026amp; -3x \u0026amp; -1 \u0026amp; \u0026amp; \\\\ }; \\draw (a-1-8.north west) |- (a-1-8.south east); \\draw (a-2-1.south west) -- (a-2-4.south east); \\draw (a-4-2.south west) -- (a-4-5.south east); \\draw (a-6-3.south west) -- (a-6-6.south east); \\end{tikzpicture} \\end{center} Obteniendo como resultado el que aparece en la siguiente imagen:\nResultado final. ","date":1541563179,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1541563179,"objectID":"5f43a97037a92efcce1397178d559952","permalink":"https://imalexissaez.github.io/2018/11/07/como-dividir-polinomios-con-latex-en-conjuntos-finitos/","publishdate":"2018-11-07T05:59:39+02:00","relpermalink":"/2018/11/07/como-dividir-polinomios-con-latex-en-conjuntos-finitos/","section":"post","summary":"La semana anterior analizamos el paquete 'polynom', que nos permite fácilmente llevar a cabo la transcripción de divisiones de polinomios con LaTeX. A continuación, estudiaremos una manera alternativa para lidiar con este asunto que, además, nos permitirá operar en conjuntos finitos.","tags":["LaTeX"],"title":"¿Cómo dividir polinomios con LaTeX en conjuntos finitos?","type":"post"},{"authors":["Alexis Sáez"],"categories":["Tutoriales"],"content":"Escribiendo unos apuntes sobre polinomios, llegó el momento de mostrar un ejemplo de la división de un par de ellos. La clásica pregunta no se hizo esperar, ¿cómo transcribo en LaTeX esa operación matemática?\nAcompañemos este artículo con un ejemplo concreto. Sean\n$$ P = x^4 + 3x^3 - 2x^2 + x - 1 $$\ny\n$$ Q = x^2 + x - 1 $$\nlos polinomios implicados en la división, siendo nuestro objetivo mostrar la mencionada operación paso por paso (y no simplemente ofrecer el resultado final, acción que no entraña misterio a la hora de llevarla a cabo con LaTeX).\nComo suele ser habitual, tras una rápida búsqueda con Google, no soy la primera persona que se ha encontrado en esta encrucijada. En los foros que consulté, la recomendación estándar era emplear el paquete polynom, que a través del comando \\polylongdiv nos facilita enormemente la tarea. De forma automática, se ocupa de realizar y organizar (con LaTeX) todos los pasos involucrados en una división de polinomios.\nAsí pues, empecemos ubicando en el preámbulo de nuestro documento la siguiente instrucción:\n\\usepackage{polynom} Antes de proceder a realizar división alguna, conviene que declaremos personalmente el valor de ciertos argumentos opcionales:\n\\polyset{style=C, div=:, vars=x} donde:\nstyle: declara el estilo con el que efectuará la división de polinomios, pudiendo escoger entre los valores A, B y C. div: señala el símbolo con el que se expresará la división (dependiendo del estilo escogido, la asignación de este parámetro es importante). vars: indica el valor de la variable del polinomio. Generalmente utilizamos x, pero no es descabellado emplear n cuando estamos lidiando con temas asociados a números enteros. Ahora, allí donde deseemos ubicar la división de los polinomios $P$ y $Q$ definidos arriba, tecleamos:\n$$\\polylongdiv{x^4+3x^3-2x^2+x-1}{x^2+x-1}$$ Obteniendo como resultado:\nResultado de la división de polinomios. Estudiemos el resultado visual de la operación bajo los distintos estilos que nos ofrece el paquete polynom.\nEstilo A:\nEstilo para la división A. Estilo B:\nEstilo para la división B. Estilo C:\nEstilo para la división C. Personalmente, el último de los mostrados es el estilo que me resulta más atractivo para mostrar cómo realizar paso a paso una división de polinomios con LaTeX. No obstante, como siempre, ‘‘para gustos, los colores’’.\nPara finalizar, me gustaría comentar que:\nAun siendo bastante satisfactoria esta solución, ninguno de los estilos que ofrece el paquete polynom se ajusta exactamente a como habitualmente organizamos la división por estos lares. Por limitaciones de TeX, no podemos llevar a cabo la división de polinomios en conjuntos finitos como, por ejemplo, $\\mathbb{Z}_4$ o en el cuerpo $\\mathbb{Z}_7$. En ambos casos, una posible vía de escape que he encontrado es recurrir al paquete tikz y, manualmente, ‘‘dibujar’’ la propia división de polinomios. No es un proceso demasiado complejo y quizá lo ilustre en una futura entrada.\n","date":1540958379,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1540958379,"objectID":"c1c242cefb980f4fea902622db06c9dd","permalink":"https://imalexissaez.github.io/2018/10/31/como-dividir-polinomios-con-latex/","publishdate":"2018-10-31T05:59:39+02:00","relpermalink":"/2018/10/31/como-dividir-polinomios-con-latex/","section":"post","summary":"Escribiendo unos apuntes sobre polinomios, llegó el momento de mostrar un ejemplo de la división de un par de ellos. La clásica pregunta no se hizo esperar, ¿cómo transcribo en LaTeX esa operación matemática?","tags":["LaTeX"],"title":"¿Cómo dividir polinomios con LaTeX?","type":"post"},{"authors":["Alexis Sáez"],"categories":["Recursos"],"content":"En los últimos días he dado, por casualidad, con una serie de problemas que pertenecen a esta competición matemática y que me han resultado ciertamente curiosos, tanto por su complejidad como por la creatividad puesta en escena a la hora de resolverlos.\nSi echamos un rápido vistazo al primer párrafo de la página de la Wikipedia dedicada a esta competición encontramos:\nThe William Lowell Putnam Mathematical Competition, often abbreviated to Putnam Competition, is an annual mathematics competition for undergraduate college students enrolled at institutions of higher learning in the United States and Canada (regardless of the students’ nationalities). It awards a scholarship and cash prizes ranging from $250 to $2,500 for the top students and $5,000 to $25,000 for the top schools, plus one of the top five individual scorers (designated as Putnam Fellows) is awarded a scholarship of up to $12,000 plus tuition at Harvard University (Putnam Fellow Prize Fellowship), the top 100 individual scorers have their names mentioned in the American Mathematical Monthly (alphabetically ordered within rank), and the names and addresses of the top 500 contestants are mailed to all participating institutions. It is widely considered to be the most prestigious university-level mathematics competition in the world, and its difficulty is such that the median score is often zero (out of 120) despite being attempted by students specializing in mathematics.\nA primera vista, esta competición destaca por:\nSuculentos premios, tanto en metálico, como en becas de la prestigiosa universidad Harvard. Unos resultados cuya mediana se sitúa en $0$ puntos, de los $120$ posibles, hecho que advierte de la crudeza de los enunciados a los que se enfrentan los estudiantes. En la página oficiosa podemos encontrar los enunciados, con sus respectivas soluciones, de la prueba correspondiente al año pasado (la asociada al 2018 todavía no ha tenido lugar). Además, nos recomiendan tres libros de cara a la preparación:\nThe William Lowell Putnam Mathematical Competition Problems and Solutions 1938-1964 A. M. Gleason, R. E. Greenwood, and L. M. Kelly, Editors. The William Lowell Putnam Mathematical Competition Problems and Solutions 1965-1984 Gerald L. Alexanderson, Leonard F. Klosinski, and Loren C. Larson, Editors. The William Putnam Mathematical Competition 1985-2000: Problems, Solutions and Commentary Kiran S. Kedlaya, Bjorn Poonen, and Ravi Vakil. Existe una página oficial de la competición Putnam, pero, por lo que he podido comprobar tras una rápida exploración, es únicamente informativa, sin ofrecer apenas recursos didácticos de interés.\nPor otro lado, en esta página tenemos acceso a una especie de archivo histórico que recoge los enunciados de ediciones anteriores, muchos de ellos con sus soluciones asociadas, remontándose hasta el año 1994.\nPodemos encontrar más referencias y consejos en esta interesante discusión de la sección dedicada a matemáticas de StackExchange. En ella nos redirigen a la web personal del profesor A. J. Hildebrand, que es sumamente interesante, sobre todo por la selección guiada de libros (sobre resolución de problemas matemáticos) que ofrece y que reproduzco a continuación:\n[Principiante] A. Gardiner, The Mathematical Olympiad Handbook. [Principiante - Intermedio] E. Lozansky and C. Rousseau, Winning solutions. [Principiante - Avanzado] Arthur Engel, Problem solving strategies. [Intermedio - Avanzado] Loren Larson, Problem solving through problems [Intermedio - Avanzado] Paul Zeitz, The Art and Craft of Problem Solving. [Avanzado] D. J. Newman, A problem seminar. [Avanzado] R. Gelca and T. Andreescu, Putnam and Beyond. Del último libro, además, existe una segunda edición en el mercado, bastante reciente, que también merecería su hueco en el anterior listado.\nAsí pues, tenemos a nuestra disposición una ingente cantidad de recursos que, en mi opinión, pueden tenernos entretenidos durante años si los examinamos con el cariño que merecen.\n","date":1540007979,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1540007979,"objectID":"25a592b2129f3006b9d31f601ff5cb2c","permalink":"https://imalexissaez.github.io/2018/10/20/referencias-de-interes-sobre-la-competicion-matematica-putnam/","publishdate":"2018-10-20T05:59:39+02:00","relpermalink":"/2018/10/20/referencias-de-interes-sobre-la-competicion-matematica-putnam/","section":"post","summary":"En los últimos días he dado, por casualidad, con una serie de problemas que pertenecen a esta competición matemática y que me han resultado ciertamente curiosos, tanto por su complejidad como por la creatividad puesta en escena a la hora de resolverlos.","tags":["Putnam"],"title":"Referencias de interés sobre la competición matemática Putnam","type":"post"},{"authors":["Alexis Sáez"],"categories":["Tutoriales"],"content":"Cierto es que LaTeX genera unos documentos matemáticos realmente vistosos. No menos cierto es que el comportamiento de LaTeX, en ocasiones, es un tanto peculiar, ofreciendo duras batallas para solventar ciertos problemas.\nEn esta ocasión, me encontraba esta misma mañana redactando unos apuntes de teoría de grafos cuando, en un ejemplo trivial donde los haya, he hallado este desbarajuste:\nLa definición del conjunto excede el margen ampliamente. He definido el conjunto de aristas del grafo casi en el borde del margen y LaTeX, en lugar de romper la expresión matemática como en otras ocasiones hace de manera automática, ha decidido rebasar el margen derecho. El resultado, estéticamente, es horroroso, por mucho que el mencionado conjunto este bien agrupado y su lectura resulte cómoda.\nGeneralmente, cuando me encuentro en este tipo de situaciones, opto por reescribir la oración, de manera que añado o suprimo texto y, al final, se produce un buen encaje del contenido matemático en los márgenes.\nNo obstante, quizá buscando pretextos absurdos para descansar un rato de la transcripción de apuntes, me he decantado esta mañana por investigar las posibilidades que ofrece LaTeX para evitar que este comportamiento tenga lugar. Tras una rápida búsqueda en Google, he dado con esta entrada, cuya lectura es más que recomendable.\nUna de las primeras opciones que tenemos a nuestra disposición, lógicamente, es escribir la problemática expresión matemática en una línea independiente. En mi caso, el resultado sería el siguiente:\nDefinición del conjunto en su propia línea. Sin embargo, ¿no adquiere así un protagonismo inmerecido el conjunto de aristas del grafo? No termina de convencerme, para esta situación particular, la solución propuesta.\nUna alternativa es emplear el comando \\sloppy antecediendo el párrafo donde reside la expresión matemática que ha decidido realizar una excursión por los márgenes del documento. Esta instrucción juega con el espaciado entre las palabras, siendo su resultado el que muestro a continuación:\nDefinición del conjunto utilizando \\sloppy. Sinceramente, tampoco resulta de mi agrado. ¿Qué más opciones tenemos? Utilizar el comando \\allowbreak allá donde queramos se produzca la separación en nuestra expresión matemática. Volviendo a la situación original, parece que sería adecuado cortar la declaración del conjunto de aristas del grafo tras el elemento $(2, 3)$ y el resultado ahora es\nDefinición del conjunto utilizando \\allowbreak. Esta solución, en mi opinión, es la más agradable visualmente hablando. No obstante:\nInsertar el comando \\allowbreak resta bastante legibilidad al código fuente del documento. Si LaTeX no ha decido “romper” automáticamente la declaración de un conjunto, debemos sospechar que algún buen motivo tendrá. Efectivamente, con este enfoque, resulta un tanto más complicado seguir la definición del conjunto de aristas del grafo. En conclusión, arriba tenemos tres estrategias que resuelven el problema planteado de mejor o peor manera. No obstante, es posible que al final me decante por la reescritura de la línea y evite recurrir a alguna de ellas.\n","date":1537847979,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1537847979,"objectID":"ca8baaf9bca1f2c0f179b6e4cc3493eb","permalink":"https://imalexissaez.github.io/2018/09/25/como-evitar-que-las-ecuaciones-en-linea-superen-los-margenes/","publishdate":"2018-09-25T05:59:39+02:00","relpermalink":"/2018/09/25/como-evitar-que-las-ecuaciones-en-linea-superen-los-margenes/","section":"post","summary":"Cierto es que LaTeX genera unos documentos matemáticos realmente vistosos. No menos cierto es que el comportamiento de LaTeX, en ocasiones, es un tanto peculiar, ofreciendo duras batallas para solventar ciertos problemas.","tags":["LaTeX"],"title":"¿Cómo evitar que las ecuaciones en línea superen los márgenes?","type":"post"},{"authors":["Alexis Sáez"],"categories":["Tutoriales"],"content":"Por uno de esos casuales de la vida, me ha dado por revisar el sitio web con el móvil y ha sido entonces cuando he presenciado un horror sin parangón: ¿por qué se ven así mis bloques de código?\nAl parecer, me caracterizo por ser un animal de costumbres y cualquier desviación que me lleve mucho más allá de mi zona de confort me produce hasta angustia. Habitualmente, con los temas para páginas web con los que he trabajado, los bloques de código tienen habilitada la aparición de una barra de desplazamiento horizontal cuando figuran instrucciones de longitud considerable.\nEste es un comportamiento que me parece adecuado, ya que incrementa, en mi opinión, la legibilidad de los mencionados bloques de código. Por desgracia, en el tema Beautiful Hugo no viene configurado así por defecto, de manera que una instrucción de longitud considerable se llega a dividir en varias líneas, dificultando en exceso la lectura.\nLas opciones de estilo para los bloques de código, curiosamente, no están declaradas en el archivo main.css, como sería de esperar, sino en un fichero denominado codeblock.css, que se encuentra en la ruta \\static\\css\\ del directorio donde hayamos decidido almacenar localmente nuestro sitio web. Su contenido original es\n/* --- Code blocks --- */ .chroma .ln { margin-right: 0.8em; padding: 0 0.4em 0 0.4em; } pre code.hljs { padding: 9.5px; } Tras investigar un rato, he conseguido que aparezca la deseada barra de desplazamiento horizontal añadiendo unas cuantas líneas al anterior archivo, de forma que ahora presenta el siguiente aspecto:\n/* --- Code blocks --- */ .chroma .ln { margin-right: 0.8em; padding: 0 0.4em 0 0.4em; } pre code.hljs { padding: 9.5px; } pre { overflow-x: auto; } pre code { word-wrap: normal; white-space: pre; } El único inconveniente de este enfoque es que solo afecta a los bloques de código escritos usando fences y no a los que generamos mediante el shortcode highlight de Hugo. No obstante, como habitualmente no recurro a este último, no he decido indagar más al respecto.\nEn los próximos artículos catalogados bajo la etiqueta Metablog continuaremos con la edición de diversas plantillas del tema Beautiful Hugo, para terminar de aprender cómo adaptarlo a nuestro gusto.\n","date":1537415979,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1537415979,"objectID":"42bc30f9b1d176a7fe7ef745a855f0c0","permalink":"https://imalexissaez.github.io/2018/09/20/mejorando-la-estetica-de-los-bloques-de-codigo/","publishdate":"2018-09-20T05:59:39+02:00","relpermalink":"/2018/09/20/mejorando-la-estetica-de-los-bloques-de-codigo/","section":"post","summary":"Lección 10: mejorando la legibilidad de los bloques de código fuente.","tags":["css","Beautiful Hugo","Hugo","Metablog"],"title":"Mejorando la estética de los bloques de código","type":"post"},{"authors":["Alexis Sáez"],"categories":["Tutoriales"],"content":"El tema Beautiful Hugo viene, por defecto, configurado para que podamos escribir expresiones matemáticas utilizando KaTeX. Tras unos minutos experimentando con esta tecnología surge enseguida la primera duda: ¿cómo puedo escribir ecuaciones en línea?\nPara empezar, recomiendo encarecidamente que acudamos a la página de versiones de KaTeX y nos hagamos con la última de ellas, para estar al día en las opciones que ofrece esta herramienta. A la hora de escribir estas líneas, dicha versión venía etiquetada como v0.10.0-rc.1.\nPara ello, hacemos clic sobre el enlace denominado katex.zip y así iniciaremos la descarga de un archivo comprimido, del cual nos interesan especialmente dos archivos contenidos en su interior:\nkatex.min.css y katex.min.js. El primero de ellos lo ubicaremos, dentro del directorio donde hayamos decidido almacenar localmente el sitio web, en la ruta \\static\\css\\, mientras que el segundo en \\static\\js\\, sobrescribiendo en ambos casos las antiguas versiones que existiesen en dichas carpetas.\nUna vez al día, la siguiente tarea implica la modificación de una de las plantillas del tema Beautiful Hugo, concretamente la denominada como footer.html, ubicada en la ruta \\layouts\\partials\\. Editamos el mencionado fichero con Sublime Text 3 y buscamos la siguiente línea:\n\u0026lt;script\u0026gt; renderMathInElement(document.body); \u0026lt;/script\u0026gt; Vamos a configurar KaTeX de manera que reconozca las expresiones encerradas entre $ o \\\\( como ecuaciones en línea, mientras que las delimitadas por $$ o \\\\[ como ecuaciones centradas en sus propias líneas. Para ello, tecleamos en el lugar de la anterior instrucción el siguiente bloque de código:\n\u0026lt;script\u0026gt; renderMathInElement( document.body, { delimiters: [ {left: \u0026#34;$$\u0026#34;, right: \u0026#34;$$\u0026#34;, display: true}, {left: \u0026#34;\\\\[\u0026#34;, right: \u0026#34;\\\\]\u0026#34;, display: true}, {left: \u0026#34;$\u0026#34;, right: \u0026#34;$\u0026#34;, display: false}, {left: \u0026#34;\\\\(\u0026#34;, right: \u0026#34;\\\\)\u0026#34;, display: false} ] } ); \u0026lt;/script\u0026gt; Una vez habilitada la opción de escribir ecuaciones en línea, un hecho salta a la vista de inmediato: ¿no parece que el tamaño de letra para las expresiones matemáticas es mayor que el declarado para el texto estándar? Efectivamente, peculiaridad que, en mi opinión, desluce bastante el aspecto (e incluso diría que dificulta la lectura) de los artículos.\nLa solución pasa por modificar la hoja de estilos del tema Beautiful Hugo, almacenada en el archivo main.css, que está ubicado en la ruta \\static\\css\\. Tras experimentar con cierto rango de valores para el tamaño de fuente de los objetos de la clase .katex, al final me he decantado por la siguiente solución, que he colocado al principio del fichero main.css:\n/* Modificación para hacer que el tamaño de letra de KaTeX sea similar al de la web */ .katex { font-size: 1.1em !important; } En los próximos artículos catalogados bajo la etiqueta Metablog continuaremos con la edición de diversas plantillas del tema Beautiful Hugo, para terminar de aprender cómo adaptarlo a nuestro gusto.\n","date":1537243179,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1537243179,"objectID":"990e130567a4eb0c02c52fe9bdce2f46","permalink":"https://imalexissaez.github.io/2018/09/18/configurando-el-comportamiento-de-katex/","publishdate":"2018-09-18T05:59:39+02:00","relpermalink":"/2018/09/18/configurando-el-comportamiento-de-katex/","section":"post","summary":"Lección 9: revisamos cómo añadir ecuaciones en línea y, además, modificamos el tamaño de la letra para las expresiones matemáticas.","tags":["Beautiful Hugo","Hugo","KaTeX","Metablog"],"title":"Configurando el comportamiento de KaTeX","type":"post"},{"authors":["Alexis Sáez"],"categories":["Tutoriales"],"content":"A estas alturas de la película, seguramente con algún que otro artículo redactado y revisado localmente de manera concienzuda, no nos queda más remedio que ocuparnos de un asunto un tanto tedioso: el alojamiento de nuestro sitio web en Internet.\nPara tal empresa he optado por GitHub, que nos permite alojar páginas web estáticas de manera gratuita (¡y sin publicidad!). Desgraciadamente, el proceso dista de ser intuitivo, por lo que examinaremos todos y cada uno de los pasos de la guía oficial con sumo detalle.\nPara empezar, existe una serie de requisitos que hemos de cumplir para subir nuestro sitio web a GitHub y son:\nTener instalado en nuestro equipo una versión de Git superior a la 2.8. Disponer de una cuenta de usuario en GitHub. Contar con una página web lista para ser publicada en Internet. Por lo que respecta a los dos primeros puntos del listado anterior, si estamos siguiendo el Proyecto Metablog desde sus orígenes, no supondrán problema alguno, pues fueron abordados en la primera entrada de la serie. En cuanto al tercer punto, con todo el trabajo que llevamos acumulado hasta el momento, es más que posible que entre nuestras manos tengamos ya un esbozo de sitio web que merezca la pena mostrar al resto del mundo.\nUna vez comprobado que satisfacemos los requisitos del procedimiento, el primer paso a realizar consiste en crear dos nuevos repositorios en nuestra cuenta de GitHub. Para ello, acudimos a la página de nuestro perfil en GitHub y hacemos clic en el símbolo + situado en la parte derecha del menú superior, para, a continuación, seleccionar la opción New repositoy.\nCreación de un nuevo repositorio en GitHub. El primer repositorio que crearemos estará dedicado a almacenar el código fuente de nuestro sitio web y, en un alarde de infinita originalidad, lo denominaremos sitio-web, tal y como figura en la siguiente imagen. Cuando hayamos rellenado el campo Repository name haremos clic en el botón Create repository.\nElección del nombre del repositorio. A continuación, de las tres opciones que nos ofrece la página que aparece ante nosotros, vamos a escoger la segunda, ya que cuando en esta entrada generamos nuestro primer sitio web, a la vez iniciamos un repositorio Git. Aquella acción, que en su momento podía parecer un tanto extraña, queda ahora totalmente justificada.\nAsí pues, abrimos la terminal del sistema, nos desplazamos hasta el directorio raíz donde hayamos decidido almacenar localmente nuestro sitio web y tecleamos:\ngit remote add origin https://github.com/\u0026lt;USERNAME\u0026gt;/sitio-web.git En mi caso, en lugar de \u0026lt;USERNAME\u0026gt;, aparece directamente ImAlexisSaez. Cada uno de nosotros tendrá definida esa parte del comando de manera diferente, por lo que recomiendo encarecidamente copiar la instrucción de la página de GitHub en lugar de la que aparece arriba.\nActo seguido, escribimos en la terminal:\ngit push -u origin master De esta manera, transcurridos unos segundos, tendremos disponible en GitHub una copia del código fuente que permite generar nuestra página web estática.\nA continuación, volvemos a GitHub y creamos un nuevo repositorio. Este último tendrá un nombre especial que será, además, la dirección de acceso a nuestro sitio web. Hemos de combinar nuestra cuenta de usuario en GitHub con la extensión .github.io. Por ejemplo, en mi caso queda ImAlexisSaez.github.io y así es como rellené en su momento el campo Repository name. Una vez escrito, simplemente tenemos que hacer clic en el botón Create repository.\nVolvemos a la terminal del sistema y tecleamos hugo server, para poder dar así una última revisión local a nuestro sitio web, utilizando la dirección ``http://localhost:1313, y comprobar que todo está en perfecto estado. Cuando estemos satisfechos, acudimos de nuevo a la terminal del sistema y cerramos el servidor local, empleando para ello la combinación de teclas Ctrl + c`.\nActo seguido, escribimos:\nrm -rf public Este comando borra por completo la carpeta public, que se encuentra en el directorio donde tenemos almacenado localmente nuestro sitio web. Dicha carpeta se genera automáticamente cada vez que tecleamos hugo server en la terminal del sistema, y contiene la versión final de nuestra página web.\nEl siguiente paso, precisamente, es crear un submódulo de manera que la carpeta public apunte a otra dirección de GitHub. Para ello, desde la terminal del sistema, tecleamos\ngit submodule add -b master git@github.com:\u0026lt;USERNAME\u0026gt;/\u0026lt;USERNAME\u0026gt;.github.io.git public donde sustituiremos \u0026lt;USERNAME\u0026gt; por el nombre de nuestra cuenta de usuario en GitHub (por ejemplo, ImAlexisSaez en mi caso).\n¡Ya casi tenemos todo a punto! Únicamente hemos de abrir Sublime Text 3 y en un archivo, que guardaremos como deploy.sh en el directorio raíz donde hayamos almacenado localmente nuestro sitio web, copiamos el siguiente bloque de código:\n#!/bin/bash echo -e \u0026#34;\\033[0;32mDeploying updates to GitHub...\\033[0m\u0026#34; # Build the project. hugo # if using a theme, replace with `hugo -t \u0026lt;YOURTHEME\u0026gt;` # Go To Public folder cd public # Add …","date":1535774379,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1535774379,"objectID":"17b23e7adb3a7c822d3c98ee391d9ae6","permalink":"https://imalexissaez.github.io/2018/09/01/alojando-nuestro-sitio-web-en-github/","publishdate":"2018-09-01T05:59:39+02:00","relpermalink":"/2018/09/01/alojando-nuestro-sitio-web-en-github/","section":"post","summary":"Lección 8: analizamos cómo utilizar GitHub para publicar nuestra página web.","tags":["GitHub","Hugo","Metablog"],"title":"Alojando nuestro sitio web en GitHub","type":"post"},{"authors":["Alexis Sáez"],"categories":["Tutoriales"],"content":"Tras haber recorrido, catalogadas bajo la etiqueta Metablog, las seis estaciones del vía crucis asociado al calvario de la instalación de Hugo y la personalización del tema Beautiful Hugo, llega el momento más anhelado por todos: generar contenido para el sitio web.\nA continuación, examinaremos, con sumo detalle, todo el proceso de elaboración y revisión local de artículos para nuestra página web. Para empezar, me gustaría comentar que, en el apartado de la guía oficial asociado a este asunto, se utiliza la combinación de la terminal del sistema y el comando hugo new para dar a luz, de manera automática, una nueva entrada en el sitio web.\nNo obstante, como no podía ser de otra manera y en un acto de la más absurda rebeldía, prefiero llevar a cabo este proceso de forma manual (qué obsesión con el control tengo, ¿verdad?). Si nos fijamos, desde el explorador de archivos de Windows, en la estructura de nuestra página web (heredada del sitio de ejemplo del tema Beautiful Hugo), en el interior del directorio raíz existe una carpeta denominada \\content\\, dentro de la cual residen anidadas otras dos: \\page\\ y \\post\\.\nPara respetar este esquema, he decidido ubicar todos los artículos del sitio web que se organicen por alguna taxonomía (recordemos que, en esta entrada, incluso añadimos alguna adicional a las que vienen dadas por defecto con Hugo) en la carpeta \\post\\, mientras que el resto irá al directorio \\page\\.\nSiguiendo esta lógica, como seguramente la primera entrada que vayamos a publicar en nuestro sitio web será una especie de presentación en su blog, generaremos, utilizando Sublime Text 3, un nuevo fichero en la carpeta \\post\\. Este poseerá la extensión .md, pues vamos a escribir todos y cada uno de nuestros artículos utilizando el lenguaje de marcado Markdown. Para aquellas personas que escuchan por primera vez hablar de él, recomiendo encarecidamente que dediquen unos minutos a completar este tutorial sobre el mismo.\nLa estructura de todo artículo será la que figura acto seguido:\n--- Metadatos del artículo. --- Párrafo (o párrafos) de introducción al artículo. Cuerpo del artículo. Al comienzo de cada entrada ubicaremos, delimitada por los caracteres ---, cierta información relevante (metadatos) acerca de la misma, que suministraremos en la forma de pares variable: valor. Las variables disponibles a nuestro alcance vendrán determinadas por el tema que hayamos escogido finalmente para nuestro sitio web, aunque sí que es cierto que algunas de ellas son comunes a la mayoría de los temas (como, por ejemplo, title, date o draft).\nTeniendo en cuenta que nuestra página web hace uso del tema Beautiful Hugo, y considerando la definición de taxonomías y la personalización del permalink que llevamos a cabo en esta entrada, utilizo siempre el mismo esquema para la cabecera de mis artículos:\n--- title: slug: date: draft: bigimg: apartados: etiquetas: proyectos: --- En el caso particular de esta entrada, la anterior cabecera ha quedado como sigue:\n--- title: \u0026#34;Publicando la primera entrada en nuestro sitio web\u0026#34; slug: \u0026#34;publicando-la-primera-entrada-en-nuestro-sitio-web\u0026#34; date: \u0026#34;2018-08-30T05:59:39+02:00\u0026#34; draft: false bigimg: [{src: \u0026#34;img/blog/20180830-cabecera.jpg\u0026#34;}] apartados: [\u0026#34;Blog\u0026#34;] etiquetas: [\u0026#34;Hugo\u0026#34;] proyectos: [\u0026#34;MetaBlog\u0026#34;] --- Veamos a continuación el cometido de cada una de las variables que figuran en la cabecera:\ntitle: contiene el título del artículo. A diferencia de otros temas, por desgracia Beautiful Hugo no admite la posibilidad de emplear Markdown o LaTeX en ciertas partes del título, hecho que debemos tener en consideración. slug: tal y como comentamos en esta entrada, vamos a configurar manualmente el permalink de cada entrada. Una de sus partes será, precisamente, la asociada a esta variable. Para generar su valor, sustituyo a mano los espacios por guiones y suprimo cualquier acento, eñe o carácter extraño a los ojos del alfabeto inglés que pudiese figurar en el título del artículo. En particular, para esta entrada, el permalink será /2018/08/30/publicando-la-primera-entrada-en-nuestro-sitio-web/, es decir, la fecha de publicación junto al valor que hemos asignado a la variable slug. date: fecha y hora de publicación del artículo. Me gustaría comentar aquí que nada nos impide generar contenido para fechas futuras, aunque cuando escribamos en la terminal del sistema hugo server, no tendremos acceso a su revisión. Para solventar esta situación, tenemos que añadir la etiqueta -F, es decir, teclear hugo server -F. draft: variable que nos permite indicar si la entrada en concreto tiene carácter de borrador (utilizando el valor true) o si ya está lista para su publicación en nuestro sitio web (empleando el valor false). Para revisar localmente una página web que contenga artículos en forma de borrador, hemos de escribir en la terminal del sistema hugo server -D. bigimg: esta variable nos permite insertar la ruta hacia una imagen de cabecera para nuestros artículos. En esta entrada está explicado en detalle el …","date":1535601579,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1535601579,"objectID":"1a1d778780510c53a206b3d3c7e821e2","permalink":"https://imalexissaez.github.io/2018/08/30/publicando-la-primera-entrada-en-nuestro-sitio-web/","publishdate":"2018-08-30T05:59:39+02:00","relpermalink":"/2018/08/30/publicando-la-primera-entrada-en-nuestro-sitio-web/","section":"post","summary":"Lección 7: generamos una entrada para el blog y estudiamos cómo configurar sus metadatos.","tags":["Beautiful Hugo","Hugo","Metablog"],"title":"Publicando la primera entrada en nuestro sitio web","type":"post"},{"authors":["Alexis Sáez"],"categories":["Oposiciones"],"content":"Opino que una buena manera de encarar unas oposiciones pasa por revisar concienzudamente los criterios de evaluación adoptados en anteriores convocatorias. Echemos un vistazo en este artículo a los seguidos en la última.\nEl primer problema que encontramos reside en el acceso a la información de interés. Si acudimos a la sección de oposiciones de la página web de la Conselleria d’ Educació, Investigació, Cultura i Esport de la Generalitat Valenciana, a la hora de escribir estas líneas, tenemos acceso los apartados que figuran en la siguiente imagen:\nSección de oposiciones de la página web de la Conselleria. Como podemos comprobar rápidamente, no aparece sección alguna dedicada al Cuerpo de Profesores de Enseñanza Secundaria, que sería aquella de nuestro interés. No obstante, el portal sí conserva una copia de los criterios de evaluación que se adoptaron para las últimas oposiciones en la especialidad de matemáticas, aunque he sido incapaz de acceder a ellos a través de los diferentes menús que ofrece el sitio web.\nEl documento se titula “Criterios de evaluación del procedimiento selectivo de ingreso en el cuerpo de profesores de enseñanza de secundaria, especialidad de matemáticas” y entonces, conociendo este dato, basta una búsqueda rápida en Google para encontrar el enlace que nos permite su consulta.\nEn la segunda página de este recurso encontramos los elementos que se valorarán asociados con la redacción del tema y son:\nEstructura del tema. Presenta un índice. Justifica la importancia del tema. Hace una introducción del mismo. Las distintas partes están compensadas en extensión según su importancia. Elabora una conclusión acorde con el planteamiento del tema. Contenidos específicos. Adapta los contenidos al tema y desarrolla todos los apartados expresados en el título del tema. Secuencia de manera lógica y clara sus apartados. Argumenta los contenidos. Profundiza en los mismos, siendo la información de cada parte lo más completa y exhaustiva posible. No existen errores de contenido o concepto. Relaciona el tema elegido con otros temas. Expresión. Muestra fluidez en la redacción. Hace un uso adecuado del lenguaje, con una correcta ortografía y una buena construcción sintáctica. Emplea terminología científica amplia y adecuada al tema tratado. Presentación. Presenta un escrito con limpieza y claridad. Deberá limitarse a la lectura de lo escrito. Bibliografía / documentación. Fundamenta los contenidos con autores o bibliografías. Las fuentes y/o bases de datos utilizados están actualizadas. El anterior listado nos puede, e incluso me atrevería a decir que nos debe, orientar de cara a la elaboración de nuestros temas, o bien puede ser un factor que nos decante por uno u otro temario de cara a su adquisición y futura revisión personal.\nPor otro lado, echo en falta una rúbrica detallada, con sus indicadores de logro y las correspondientes ponderaciones para cada una de las variables arriba recogidas. Sinceramente, en algunos puntos no termina de quedarme claro cómo se procederá a la evaluación.\nCambiando de tercio, por lo que respecta a la resolución de problemas, la información todavía es más escueta, apenas cinco líneas relegadas al final de la tercera página del documento:\nResolución de problemas. Desarrollo y resultado correcto en problemas y cuestiones. Explica el método de resolución. Rigurosidad matemática. Demuestra originalidad y destreza en la solución de las cuestiones. Al igual que antes, aunque tenemos acceso a aquello que se valorará, en algunos puntos me es difícil imaginar cómo se procederá a su evaluación. La originalidad, destreza y rigurosidad me parecen atributos complicados de cuantificar y fuertemente sujetos a la subjetividad de quien examina.\nEn cuanto a la defensa de la programación docente, me atrevería a decir que no encontramos demasiadas sorpresas aquí y nuestra labor se limita a exponer, uno por uno, los apartados que en la convocatoria exigen que contenga. Así pues, valorarán:\nEstructura de la programación. Contextualiza y justifica la programación en el marco legal y la realidad escolar. Se adapta al nivel y/o alumnado elegido. Está claramente estructurada y hace mención a las unidades didácticas programadas. Elementos de la programación. Desarrolla y adapta los elementos básicos del currículum: objetivos, contenidos y criterios de evaluación. Se expondrán con claridad y serán adecuados al nivel elegido. Hace referencia a las competencias básicas si la programación es de ESO. Realiza una buena secuenciación y temporalización de los contenidos. Desarrolla una metodología adecuada: estrategias y principios metodológicos claros y concisos. Se expresarán y justificarán los criterios y procedimientos de evaluación y calificación así como los mecanismos de refuerzo y recuperación. Se tendrá en cuenta la utilización en la programación de otros aspectos educativos como: el uso de las TIC, fomento de la lectura, relación con las familias… Se marcarán las medidas específicas de atención a …","date":1535428779,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1535428779,"objectID":"d3377cf97a3f098cf464b3d686cc825f","permalink":"https://imalexissaez.github.io/2018/08/28/criterios-de-evaluacion-de-oposicion-para-la-especialidad-de-matematicas/","publishdate":"2018-08-28T05:59:39+02:00","relpermalink":"/2018/08/28/criterios-de-evaluacion-de-oposicion-para-la-especialidad-de-matematicas/","section":"post","summary":"Opino que una buena manera de encarar unas oposiciones pasa por revisar concienzudamente los criterios de evaluación adoptados en anteriores convocatorias. Echemos un vistazo en este artículo a los seguidos en la última.","tags":["Legislación"],"title":"Criterios de evaluación de oposición para la especialidad de matemáticas","type":"post"},{"authors":["Alexis Sáez"],"categories":["Estadística"],"content":"En mi reciente vuelta a Twitter, he empezado a seguir al profesor responsable del excelente MOOC “Improving your statistical inferences” (enlace), Daniël Lakens (@lakens), que comparte más que interesantes perlas relacionadas con el campo de la estadística.\nHace unos días anunciaba que había actualizado un script para R cuyo nombre no tiene desperdicio: “Perfect t-test”. Las principales referencias que tenemos que consultar son:\nThe perfect t-test. Repositorio en GitHub con el código asociado al anterior artículo. Como no podía ser de otra manera, un recurso así despierta enormemente tanto mi curiosidad, como las ganas de echar un rato explorando las posibilidades que ofrece.\nAhora bien, ¿de qué trata todo el asunto? Estamos ante un documento escrito con R Markdown cuyo objetivo es automatizar el proceso de comparación de medias para dos muestras, tanto independientes como dependientes (cada caso tiene su archivo asociado). No obstante, cuando la mayoría de programas informáticos orientados al análisis de datos ya incorporan este tipo de herramienta, ¿qué justifica la existencia de este recurso?\nSegún el autor, no todos los investigadores siguen las recomendaciones que los estadísticos indican (o bien no están al día de las mismas), e incluso, hecho que personalmente considero más grave, los propios programas informáticos ignoran dichas recomendaciones en ocasiones.\nDentro del “peligro” que supone emplear algoritmos que automatizan análisis de datos, que pueden provocar que llevemos a cabo todo tipo de acciones sin saber muy bien las razones para ello, dado que los vamos a utilizar igualmente, siempre será más recomendable que escojamos aquellos que mejor diseñados estén, ¿verdad?\nVeamos qué nos ofrece el código de Daniël Lakens. Una vez digerido el README del repositorio, e instalado los paquetes necesarios (así como actualizado JAGS, que aún estaba utilizando la versión 3), sólo tengo que encontrar algún conjunto de datos que me permita llevar a cabo una prueba t.\nHe escogido el conjunto de datos hsb2 (incluido en el paquete openintro), que está formado por los registros de una encuesta realizada a 200 estudiantes de secundaria. Vamos a investigar una simple cuestión, ¿existen diferencias en las puntuaciones, asociadas a matemáticas, entre chicos y chicas? Para resolver el interrogante, lo primero que debemos hacer es generar un archivo de texto que contenga los datos de interés, siguiendo el formato que se nos especifica en el archivo perfect_independent_t-test.Rmd.\n# Carga la librería que contiene el conjunto de datos hsb2 library(openintro) # Carga el conjunto de datos hsb2 data(hsb2) # Documentación del conjunto de datos ?hsb2 # Exploración básica del conjunto de datos str(hsb2) # Crea el archivo que se usará con \u0026#34;perfect_independent_t-test.Rmd\u0026#34; write.table(hsb2[c(\u0026#34;id\u0026#34;, \u0026#34;gender\u0026#34;, \u0026#34;math\u0026#34;)], file = \u0026#34;datos_hsb2_math.txt\u0026#34;, row.names = FALSE, sep = \u0026#34;,\u0026#34;) Nota: en lugar de crear un archivo de texto cuyas columnas estuvieran delimitadas por tabuladores, escogí utilizar comas. Eso luego implica realizar modificaciones menores en el fichero de la prueba t.\nAhora, con datos_hsb2_math.txt ubicado en el mismo directorio que perfect_independent_t-test.Rmd, únicamente tenemos que actualizar la ruta que aparece en la línea 62 para la variable alldata (y, en mi caso, añadir sep = \u0026#34;,\u0026#34;), así como correctamente asignar las variables xlabel, ylabel, factorlabel, measurelabel, xlabelstring e ylabelstring siguiendo las instrucciones. El resto de variables, para una primera aproximación a esta herramienta, podemos dejarlas con los valores que han recibido por defecto.\nEn mi caso, he cambiado el formato del documento de salida de Word a PDF, y, tras pulsar el botón correspondiente, he acabado con un documento ¡de 15 páginas para una simple prueba t! A la próxima persona que escuche quejarse de que SPSS devuelve una miríada de resultados voy a invitarle amablemente a que utilice este script.\nSin embargo, una vez superado el susto inicial, gran parte del documento son explicaciones generales que justifican el modo de proceder seguido. La primera figura que encontramos es el siguiente boxplot (creo que en español se llama diagrama de caja y bigotes, pero no estoy completamente seguro), con el objeto de identificar la existencia de posibles valores atípicos:\nBoxplot. A continuación, se realizan cuatro contrastes de hipótesis para comprobar si se verifica el supuesto de normalidad para las puntuaciones de ambos grupos (su violación tiene efectos, por ejemplo, sobre el error de tipo I):\nResultados de los contrastes de hipótesis. En uno de los cuatros contrastes, los datos con los que estamos trabajando aportan evidencia suficiente para sospechar de la veracidad de la hipótesis nula (“las puntuaciones siguen una distribución normal”), por lo que tendríamos que preferiblemente recurrir a métodos no paramétricos o estadísticos robustos. No obstante, en el propio documento nos avisan de que con muestras grandes (y podemos considerar …","date":1535169579,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1535169579,"objectID":"78612d27ca424e6268012c541dcb01fd","permalink":"https://imalexissaez.github.io/2018/08/25/anatomia-de-una-prueba-t-perfecta/","publishdate":"2018-08-25T05:59:39+02:00","relpermalink":"/2018/08/25/anatomia-de-una-prueba-t-perfecta/","section":"post","summary":"En mi reciente vuelta a Twitter, he empezado a seguir al profesor responsable del excelente MOOC 'Improving your statistical inferences', Daniël Lakens, que comparte más que interesantes perlas relacionadas con el campo de la estadística.","tags":["Prueba T","R"],"title":"Anatomía de una prueba t perfecta","type":"post"},{"authors":["Alexis Sáez"],"categories":["Estadística"],"content":"Cuanto menos, es ciertamente llamativo, así como invita con fuerza a su lectura, el título de uno de los artículos de John P. A. Ioannidis: “Why Most Published Research Findings Are False”.\nEstaba echando un vistazo a los contenidos de la primera semana del MOOC “Improving your statistical inferences” (enlace), disponible en la plataforma Coursera (curso que, por cierto, me ha dejado muy buenas sensaciones), y en uno de sus vídeos recomiendan la lectura del mencionado artículo.\nPor fortuna, es un texto de acceso abierto que podemos encontrar en este enlace. Tras la introducción técnica, la sección de corolarios no tiene desperdicio alguno. En ella se afirma que es menos probable que los resultados de la investigación en una disciplina científica sean verdaderos:\nCuanto menor sea el tamaño muestral. Cuanto menor sea el tamaño del efecto. Cuanto mayor sea el número de relaciones y menor sea el conjunto de las que están probadas. Cuanto mayor sean la flexibilidad en el diseño, las definiciones, los resultados y los modos de análisis. Cuanto mayor sean la financiación y otros intereses y prejuicios. Cuanto mayor sea el número de equipos científicos involucrados. Además, aunque encontramos los anteriores factores expuestos de manera separada, a menudo es cierto que unos poseen influencia sobre otros y pueden presentarse de forma simultánea. El autor finaliza el artículo exponiendo algunas directrices para mejorar la situación planteada.\nMerece la pena dedicar un poco de nuestro tiempo a la lectura y estudio de este texto.\n","date":1534996779,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1534996779,"objectID":"db72b4b01d2a7416d5abb58ab216aca3","permalink":"https://imalexissaez.github.io/2018/08/23/porque-la-mayoria-de-los-resultados-en-investigacion-son-falsos/","publishdate":"2018-08-23T05:59:39+02:00","relpermalink":"/2018/08/23/porque-la-mayoria-de-los-resultados-en-investigacion-son-falsos/","section":"post","summary":"Cuanto menos, es ciertamente llamativo, así como invita con fuerza a su lectura, el título de uno de los artículos de John P. A. Ioannidis: 'Why Most Published Research Findings Are False'.","tags":["Papers"],"title":"Porqué la mayoría de los resultados en investigación son falsos","type":"post"},{"authors":["Alexis Sáez"],"categories":["Estadística"],"content":"Por recomendación, el otro día puse las manos sobre el artículo de Jacob Cohen: “Things I Have Learned (So Far)”, publicado originalmente en diciembre de 1990 en la revista American Psychologist. Veamos qué impresiones me ha dejado su lectura.\nEs posible que, por su antigüedad, alguien pueda llegar a pensar que no merece demasiado la pena dedicarle tiempo a este texto, ¡nada más lejos de la realidad!\nEl acceso al documento original (enlace), desgraciadamente, implica un desembolso de aproximadamente doce dólares. No obstante, a través de una búsqueda rápida en Google es fácil (y, posiblemente, ilegal) dar con él e, incluso, con una traducción al español, publicada en el año 1992 en la revista Anales de Psicología. La pregunta natural aquí es, ¿por qué un artículo publicado hace más de dos décadas no ha sido liberado completamente?\nAlgunas de las claves que comparte Jacob Cohen y me han parecido interesantes son:\nEn la medida de nuestras posibilidades, debemos evitar el uso inconsciente de las famosas “reglas de oro”, que suelen instaurar rígidos criterios universales. Por ejemplo, en lugar de calificar una muestra como pequeña porque su tamaño es menor que treinta, conviene que llevemos a cabo un análisis del poder estadístico del estudio, para decidir si el tamaño muestral es el idóneo para los objetivos que perseguimos. “Menos es más” (salvo cuando hablamos de tamaños muestrales). No es demasiado recomendable que nuestros proyectos se caractericen por tener un número desproporcionado de variables dependientes, o independientes, o de ambos tipos. En esos casos, la cantidad de hipótesis a contrastar crece desmesuradamente, y deberíamos estar muy atentos al control del error de tipo I. En relación con lo anterior, es aconsejable que prestemos atención también a la forma de presentar resultados. Los programas informáticos de hoy en día son capaces de arrojar cifras con un alto número de decimales, pero debemos detenernos a pensar hasta qué punto es útil reportarlos todos. “Simple es mejor”. Conviene que describamos gráficamente una variable antes que optar por hacerlo vía sus primeros momentos, así como que utilicemos un diagrama de puntos en lugar de escoger un indicador numérico para transmitir en qué medida están asociadas dos variables. Que podamos realizar, de manera sencilla, complejos análisis de datos utilizando programas informáticos, no implica que no sea necesario entender perfectamente qué estamos haciendo en cada momento del proceso. Conviene que nos detengamos a estudiar con detalle todo lo relacionado con la correcta interpretación del p-valor (\u0026#34;this result does not tell us about the truth of the null hypothesis, given the data […] What it tells us is the probability of the data, given the truth of the null hypothesis.\u0026#34;). Continuando con el punto anterior, no tenemos que utilizar el p-valor como sustituto de un indicador del tamaño del efecto, y es recomendable que reportemos un intervalo de confianza de este último (de hecho, debería ser el principal objetivo de cualquier investigación) en la sección de resultados, para que los hallazgos significativos queden correctamente contextualizados. Conviene, antes de llevar a cabo cualquier estudio, que planeemos con atención el tamaño del efecto que buscamos, el nivel de significación que vamos a asumir y el poder estadístico con el que queremos trabajar. A partir de ellos, obtendremos el tamaño muestral necesario y, en el caso de encontrarse éste fuera de nuestras posibilidades, procederemos a realizar ajustes en las anteriores cantidades. Por otra parte, algunas de las citas que me han encantado del artículo son:\n“I have so heavily emphasized the desirability of working with few variables and large sample sizes that some of my students have spread the rumor that my idea of the perfect study is one with 10,000 cases and no variables. They go too far.”\n“We sometimes learn more from what we see than from what we compute; sometimes what we learn from what we see is that we shouldn’t compute, at least not on those data as they stand.”\n“The atmosphere that characterizes statistics as applied in the social and biomedical sciences is that of a secular religion (Salsburg, 1985), apparently of Judeo-Christian derivation, as it employs as its most powerful icon a six-pointed cross, often presented multiply for enhanced authority. I confess that I am an agnostic.”\n“Despite widespread misconceptions to the contrary, the rejection of a given null hypothesis gives us no basis for estimating the probability that a replication of the research will again result in rejecting that null hypothesis.”\n“consider the sanctified (and sanctifying) magic .05 level. […] Its arbitrary unreasonable tyranny has led to data fudging of varying degrees of subtlety from grossly altering data to dropping cases where there ‘must have been’ errors.”\n“I have learned and taught that the primary product of a research inquiry is one or more measures of effect size, not p values.”\nEn …","date":1534823979,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1534823979,"objectID":"56d0708661b365c96fea10c9e6c42a66","permalink":"https://imalexissaez.github.io/2018/08/21/aprendiendo-de-la-experiencia-de-jacob-cohen/","publishdate":"2018-08-21T05:59:39+02:00","relpermalink":"/2018/08/21/aprendiendo-de-la-experiencia-de-jacob-cohen/","section":"post","summary":"Por recomendación, el otro día puse las manos sobre el artículo de Jacob Cohen: 'Things I Have Learned (So Far)', publicado originalmente en diciembre de 1990 en la revista American Psychologist.","tags":["Papers"],"title":"Aprendiendo de la experiencia de Jacob Cohen","type":"post"},{"authors":["Alexis Sáez"],"categories":["Tutoriales"],"content":"Tras la buena experiencia vivida después de la sesión dedicada a machine learning, de la convención SciPy 2017, me he animado a seguir explorando la lista de reproducción del canal de Youtube asociado a la cuenta de Enthought.\nVarios títulos han captado poderosamente mi atención (a la hora de escribir estas líneas, la mencionada lista de reproducción sobrepasa los noventa vídeos), pero teniendo en cuenta que todo el ecosistema de SciPy se asienta sobre la librería NumPy, he terminado considerando que la elección más sensata era optar por “Introduction to Numerical Computing with NumPy”, que viene de la mano de Dillon Niederhut.\nEste artículo recoge las notas personales tomadas durante la visualización de dicho tutorial, al cual podemos acceder a través del siguiente enlace, y que posee asociado un repositorio en GitHub que, principalmente, conviene tener a mano para seguir algunos de los ejercicios planteados durante la sesión.\nAntes de empezar, me gustaría destacar que el material está enfocado a principiantes, por lo que el ritmo es bastante más sosegado que el llevado por aquel de machine learning que mencionaba en el primer párrafo. Además, me ha parecido ciertamente curiosa la manera de tratar a los participantes, intentando en todo momento que se sientan en un entorno de aprendizaje bastante confortable.\n1. ¿Por qué aprender a utilizar la librería NumPy? Qué mejor manera de empezar esta entrada que justificando la necesidad de aprender a utilizar la librería NumPy. Introducirse al manejo de un nuevo módulo (y no digamos ya dominarlo) es una tarea que normalmente requiere una buena inversión de horas de estudio y experimentación, y NumPy, por desgracia, no es la excepción que rompe la mencionada regla. Así pues, ¿por qué aprender a utilizar la librería NumPy?\nLa respuesta, grosso modo, vendría dada por el más que discutible rendimiento del lenguaje de programación Python a la hora de llevar a cabo cálculos numéricos. Ilustremos este hecho con un sencillo ejemplo: sumaremos los elementos de una lista que contendrá los primeros mil números enteros positivos (que construiremos con la función range()), midiendo el tiempo que requiere la mencionada operación a través del comando mágico %timeit.\ntest_list = list(range(1001)) %timeit sum(test_list) 100000 loops, best of 3: 10.8 µs per loop Ahora repitamos la misma operación empleando funciones de la librería NumPy. Para ello:\nimportaremos el módulo siguiendo la convención establecida, es decir, escribiendo import numpy as np, creamos una réplica de la anterior lista (que, en breve, empezaremos a llamar array) utilizando la función arange(), y sumaremos sus elementos mediante la función sum(). import numpy as np test_array = np.arange(1001) %timeit np.sum(test_array) The slowest run took 14.21 times longer than the fastest. This could mean that an intermediate result is being cached.\r100000 loops, best of 3: 5.02 µs per loop\rHemos reducido a la mitad el tiempo que precisa el sistema para realizar el cálculo numérico requerido. No obstante, quizá no logre impactarnos el hecho de pasar de 11 a 5 microsegundos. Intentemos forzar un tanto el anterior ejemplo incrementando de manera significativa el número de elementos.\nn = 1000001 test_list = list(range(n)) # Python test_array = np.arange(n) # NumPy %timeit sum(test_list) 10 loops, best of 3: 46.3 ms per loop\r%timeit np.sum(test_array) 1000 loops, best of 3: 748 µs per loop\rEl resultado ahora sí que debería ser una buena justificación de cara a decidir si invertir o no nuestro preciado tiempo en aprender a utilizar la librería NumPy. Esta considerable mejora en el tiempo de ejecución para cálculos numéricos se produce en cualquier tipo de operación matemática que llevemos a cabo empleando funciones de dicho módulo.\nSi tenemos en mente utilizar el lenguaje de programación Python para analizar datos, considerando que al final casi todo se reduce a realizar cálculos numéricos con matrices de dimensiones considerables, NumPy se convierte entonces en una herramienta esencial.\nSin entrar en demasiados detalles técnicos, esta situación se produce debido a que:\nes distinta, y mucho más eficiente, la manera en que se accede a los elementos de un array de NumPy con respecto a como Python procede a realizar tal tarea en sus estructuras de datos básicas, el número de comprobaciones intermedias a la hora de llevar a cabo cálculos numéricos es menor en NumPy, y NumPy está escrito utilizando el lenguaje de programación C, que es bastante más rápido que Python. Sin embargo, no es oro todo lo que reluce en NumPy. En futuras secciones veremos que las, a priori, ventajas expuestas en el listado anterior (sobretodo las dos primeras), conllevan aparejados ciertos inconvenientes de los que hemos de ser conscientes para evitar bugs en nuestros códigos.\n2. ¿Qué está pasando aquí? Primeras sorpresas que nos regala Numpy Para empezar, al utilizar los arrays de NumPy, vamos a perder ciertas características deseables que poseen las …","date":1534564779,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1534564779,"objectID":"a189b762db4bd86421f475853fcb86af","permalink":"https://imalexissaez.github.io/2018/08/18/breve-introduccion-a-la-libreria-numpy/","publishdate":"2018-08-18T05:59:39+02:00","relpermalink":"/2018/08/18/breve-introduccion-a-la-libreria-numpy/","section":"post","summary":"Tras la buena experiencia vivida después de la sesión dedicada a Machine learning, de la convención SciPy 2017, me he animado a seguir explorando la lista de reproducción del canal de Youtube asociado a la cuenta de Enthought.","tags":["NumPy","Python"],"title":"Breve introducción a la librería NumPy","type":"post"},{"authors":["Alexis Sáez"],"categories":["Tutoriales"],"content":"¿Te has quedado sin planes para el fin de semana? Aunque tu lista de tareas pendientes y, generalmente, poco atractivas parezca haber crecido de manera exponencial en los últimos tiempos, ¿el cuerpo te pide algo distinto?\n¿Qué tal invertir las próximas seis horas y media de tu vida disfrutando de un tutorial sobre Machine Learning con Python? Suena interesante, ¿verdad? Al menos es así en esta especie de universo paralelo donde parece que vivo últimamente.\nEn la cuenta de YouTube asociada a Enthought, creadores de la conocida distribución Canopy para Python, ha aparecido recientemente una lista de reproducción que alberga los tutoriales y charlas correspondientes a la última convención SciPy: “SciPy 2017: Scientific Computing with Python Conference”.\nAquel al que hacía referencia en el primer párrafo estuvo dividido en dos sesiones, a las que podemos acceder directamente a través de los siguientes enlaces:\nMachine Learning with scikit learn Part One - SciPy 2017 Tutorial - Andreas Mueller \u0026amp; Alexandre Gram. Machine Learning with scikit learn Part Two - SciPy 2017 Tutorial - Andreas Mueller \u0026amp; Alexandre Gram. No obstante, antes de lanzarte de cabeza a su visualización, te recomendaría adoptases una actitud de aprendizaje activo para un mayor aprovechamiento. Es un tutorial bastante práctico, que se apoya en el uso de numerosos Jupyter Notebooks que también tenemos a nuestra disposición sin coste alguno. ¿Por qué no experimentar personalmente con el código para así reforzar las ideas vertidas y el uso de distintos algoritmos?\nLa única pega que presenta esta aproximación al tutorial reside en que nuestro equipo debe cumplir una serie de requisitos, que exploraremos rápidamente en la siguiente sección.\nInstalación de las herramientas asociadas En función de los distintos programas que ya estén instalados en nuestro sistema, el paseo por el siguiente listado nos llevará más o menos tiempo:\nUtilizando nuestro navegador favorito, dirijámonos en primer lugar al repositorio en GitHub, que contiene los notebooks asociados al tutorial.\nEchemos un rápido vistazo a su archivo README.md, que alberga información de interés sobre el mencionado tutorial, así como unas breves instrucciones para que configuremos nuestro equipo de manera adecuada y podamos utilizar el material disponible sin problema alguno.\nClonemos o “forkeemos” (no hace falta que lo compruebes, ambos sabemos que esa aberración no va a estar registrada en el diccionario, pero si utilizas git me habrás entendido) el propio repositorio. Si no tienes cuenta en GitHub o, directamente, no estás entiendo nada de lo que llevo escrito en este punto, sitúate en la parte superior derecha de la página asociada al repositorio, haz clic sobre el botón Clone or download y pulsa sobre el enlace Download ZIP. Descargarás un archivo comprimido que contiene todo el material de este repositorio, de forma que podrás descomprimirlo en tu unidad de disco duro donde desees y trabajar desde dicha localización.\nIniciemos Jupyter Notebook y naveguemos por los directorios hasta alcanzar la ruta donde hayamos almacenado los materiales del repositorio. Si no dispones de esta aplicación en tu ordenador, una manera fácil de hacerte con ella, y a la vez con los módulos que se utilizarán a lo largo del tutorial, es descargar la distribución de Python Anaconda asociada a la versión 3.6 del mencionado lenguaje de programación. Por otro lado, si es la primera vez que escuchas hablar de notebooks (en R y Python son muy populares hoy en día), te aconsejaría que previamente leyeses algún tutorial asociado a esta herramienta. Este es más que recomendable.\nEn la raíz del repositorio figura el notebook check_env.ipynb. Abrámoslo y ejecutemos la única celda que lo compone, que es un bloque de código que comprueba si nuestro sistema cumple los requisitos necesarios para seguir sin problemas el tutorial. En el caso de que alguna de las líneas de la salida asociadas a los diversos módulos no esté precedida por un [OK], tendremos que actualizar manualmente la versión del paquete correspondiente.\nOpcionalmente, podemos descargar los conjuntos de datos asociados al tutorial (acción recomendable si en algunos momentos vamos a depender de redes wifi para trabajar con el material) sin más que teclear python fetch_data.py.\nNotebooks En mi opinión, si tenemos un mínimo conocimiento de Python y Machine Learning, una buena manera de abordar el tutorial en sí consistiría en llevar a cabo una lectura previa del notebook que nos interese (experimentación con el código incluida), para luego visualizar la parte de la grabación del tutorial donde se desarrolla ese contenido en particular. Finalmente, con la explicación todavía fresca en nuestras cabezas, podríamos reforzar el contenido leyendo de nuevo el notebook concreto. No obstante, si no cumples el primer requisito comentado, directamente te aconsejaría empezar con la grabación e ir revisando posteriormente cada notebook a medida que se vayan abordando durante el …","date":1534391979,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1534391979,"objectID":"3177ee38e122af580af07cbd4bf359b1","permalink":"https://imalexissaez.github.io/2018/08/16/tutorial-sobre-machine-learning-con-python/","publishdate":"2018-08-16T05:59:39+02:00","relpermalink":"/2018/08/16/tutorial-sobre-machine-learning-con-python/","section":"post","summary":"¿Qué tal invertir las próximas seis horas y media de tu vida disfrutando de un tutorial sobre Machine Learning con Python? Suena interesante, ¿verdad? Al menos es así en esta especie de universo paralelo donde parece que vivo últimamente.","tags":["Machine Learning","Python","SciPy"],"title":"Tutorial sobre Machine Learning con Python","type":"post"},{"authors":["Alexis Sáez"],"categories":["Tutoriales"],"content":"En este artículo exploraremos las posibilidades que nos ofrece una librería de R, readr, integrante del famoso tidyverso, de cara a la importación y exportación de nuestros conjuntos de datos.\nNo me ha disgustado, en absoluto, el sistema que caracteriza los cursos de la plataforma DataCamp. Píldoras condensadas de teoría acompañadas, de inmediato, por ejercicios para su aplicación directa, ofreciendo así un enfoque para el aprendizaje bastante práctico y ameno. He tomado algunas notas personales para el curso abierto, que en el portal aparece, relativo a la librería readr: “Reading Data into R with readr”, al que podemos acceder a través del siguiente enlace.\nEl material está desglosado en dos capítulos. En el primero de ellos, aprenderemos diversas funciones, contenidas en este paquete, que facilitarán enormemente la labor de importar datos utilizando el lenguaje de programación R. En el segundo, el objetivo será utilizar las herramientas que la librería pone a nuestra disposición para analizar y convertir las clases que poseen las columnas del conjunto de datos recién importado.\nreadr es una componente del denominado tidyverso (tidyverse en inglés, que parece que siempre suena mejor), un conjunto de librerías que todo usuario de R debería si no dominar, al menos conocer, para así resolver ciertas situaciones de la manera más sencilla posible (basta imaginar tener que hacer a mano algunas de las tareas que paquetes como dplyr o tidyr llevan a cabo para darse cuenta de este hecho).\n1. Importando datos con readr 1.1. Archivos .csv A la hora de importar conjuntos de datos en R, uno de los formatos más habituales en los que hallamos información es en archivos separados por comas (comma separated values), cuya extensión suele ser .csv. En ellos encontramos múltiples líneas que recogen la tabla de interés, y en las cuales los valores aparecen, de manera consecutiva, separados por el carácter ,.\nPara importar este tipo de ficheros en nuestra sesión de R, utilizaremos la función read_csv(). Para acceder a su documentación, en primer lugar, cargaremos la librería readr (o la instalaremos si todavía no lo hemos hecho).\nif(!require(readr)) {install.packages(\u0026#34;readr\u0026#34;)} ## Loading required package: readr\rlibrary(readr) ?read_csv El único argumento que hemos de pasar a esta función, de manera obligatoria, es file, el nombre del archivo que pretendemos importar (o bien la ruta completa donde éste se encuentra). El resto son opcionales, y deberían resultarnos familiares la mayoría de ellos si hemos trabajado alguna vez con funciones del tipo read.table() o read.csv(). Algunas de las ventajas que utilizar read_csv() ofrece son:\nNo convierte, automáticamente, las columnas con cadenas de caracteres a factores, como sí hacen por defecto las otras funciones referidas en el párrafo anterior. Reconoce ocho clases diferentes de datos (integer, logical, etc.), dejando el resto como cadenas de caracteres. Pongamos a prueba su uso importando un conjunto de datos que contiene tanto los pesos, como el tipo de alimentación, de 71 pollos. El archivo de interés es chickwts.csv, por lo que empezaremos especificando la ruta para acceder a él en el argumento file. Como en el segundo capítulo llevaremos a cabo algunas acciones sobre los conjuntos de datos que aparecerán en esta sección, todos los ficheros que importemos los almacenaremos en objetos dentro de R.\ncwts \u0026lt;- read_csv(file = \u0026#34;datasets/chickwts.csv\u0026#34;) ## Parsed with column specification:\r## cols(\r## weight = col_integer(),\r## feed = col_character()\r## )\rEs interesante el mensaje que aparece en la consola al ejecutar la anterior instrucción, ya que nos informa el resultado del análisis, que la función realiza, para inferir las clases de cada una de las columnas que componen la tabla. Echemos un vistazo al contenido del archivo que acabamos de importar.\nhead(cwts) ## # A tibble: 6 × 2\r## weight feed\r## \u0026lt;int\u0026gt; \u0026lt;chr\u0026gt;\r## 1 179 horsebean\r## 2 160 horsebean\r## 3 136 horsebean\r## 4 227 horsebean\r## 5 217 horsebean\r## 6 168 horsebean\rstr(cwts) ## Classes \u0026#39;tbl_df\u0026#39;, \u0026#39;tbl\u0026#39; and \u0026#39;data.frame\u0026#39;: 71 obs. of 2 variables:\r## $ weight: int 179 160 136 227 217 168 108 124 143 140 ...\r## $ feed : chr \u0026#34;horsebean\u0026#34; \u0026#34;horsebean\u0026#34; \u0026#34;horsebean\u0026#34; \u0026#34;horsebean\u0026#34; ...\r## - attr(*, \u0026#34;spec\u0026#34;)=List of 2\r## ..$ cols :List of 2\r## .. ..$ weight: list()\r## .. .. ..- attr(*, \u0026#34;class\u0026#34;)= chr \u0026#34;collector_integer\u0026#34; \u0026#34;collector\u0026#34;\r## .. ..$ feed : list()\r## .. .. ..- attr(*, \u0026#34;class\u0026#34;)= chr \u0026#34;collector_character\u0026#34; \u0026#34;collector\u0026#34;\r## ..$ default: list()\r## .. ..- attr(*, \u0026#34;class\u0026#34;)= chr \u0026#34;collector_guess\u0026#34; \u0026#34;collector\u0026#34;\r## ..- attr(*, \u0026#34;class\u0026#34;)= chr \u0026#34;col_spec\u0026#34;\rA primera vista, la columna feed posiblemente estaría mejor codificada bajo la clase factor (aunque esto siempre va a depender de nuestros intereses y el uso que tengamos en mente para esta variable). No obstante, recordemos que éste no es el comportamiento que por defecto incorpora la función read_csv() (aunque después veremos cómo declarar con antelación las clases para las columnas de un archivo y …","date":1534219179,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1534219179,"objectID":"df029a62d774beacc0f0bb5fd3da49f3","permalink":"https://imalexissaez.github.io/2018/08/14/breve-introduccion-a-la-libreria-readr/","publishdate":"2018-08-14T05:59:39+02:00","relpermalink":"/2018/08/14/breve-introduccion-a-la-libreria-readr/","section":"post","summary":"En este artículo exploraremos las posibilidades que nos ofrece una librería de R, readr, integrante del famoso 'tidyverso', de cara a la importación y exportación de nuestros conjuntos de datos.","tags":["R","readr"],"title":"Breve introducción a la librería readr","type":"post"},{"authors":["Alexis Sáez"],"categories":["Tutoriales"],"content":"Nos quedamos, en la anterior entrada catalogada bajo la etiqueta Metablog, a falta de revisar la parte final del archivo de configuración config.toml. Terminemos pues de echarle un vistazo a dicho fichero en este artículo.\nAl finalizar la personalización de los parámetros básicos del sitio web, se asomaba ante nosotros el siguiente, y muy extraño, bloque de código:\n#[[Params.bigimg]] # src = \u0026#34;img/triangle.jpg\u0026#34; # desc = \u0026#34;Triangle\u0026#34; #[[Params.bigimg]] # src = \u0026#34;img/sphere.jpg\u0026#34; # desc = \u0026#34;Sphere\u0026#34; # # position: see values of CSS background-position. # position = \u0026#34;center top\u0026#34; #[[Params.bigimg]] # src = \u0026#34;img/hexagon.jpg\u0026#34; # desc = \u0026#34;Hexagon\u0026#34; Nada intuitivo su contenido y carente por completo de comentarios, hecho nada halagüeño. Sin embargo, basta que experimentemos un poco con la anteriores líneas para comprobar que esta sección del archivo config.toml es la dedicada a gestionar la aparición de un carrusel de imágenes en la página web de acceso, situándolo justo detrás del título.\nConviene que le echemos un vistazo a la entrada que aparece en el propio blog de ejemplo del tema Beautiful Hugo hablando de la gestión de imágenes de cabecera. En el caso de haber varias declaradas, estas rotan cada diez segundos. Por otro lado, tenemos a nuestra disposición los siguientes parámetros de configuración:\nsrc: ruta que apunta a la ubicación de la imagen de cabecera. desc: parámetro opcional que nos permite incorporar un pequeño texto sobre la imagen, a modo de pie de figura. En mi caso, tras navegar un rato por Unsplash, descargué fotografías hasta componer un carrusel de cinco imágenes a las que no incorporé pie de figura alguno. Por tanto, el anterior bloque de código me ha quedado como sigue:\n# # Configuración del carrusel de imágenes de la página de inicio # [[Params.bigimg]] src = \u0026#34;img/homepage-cabecera-01.jpg\u0026#34; [[Params.bigimg]] src = \u0026#34;img/homepage-cabecera-02.jpg\u0026#34; [[Params.bigimg]] src = \u0026#34;img/homepage-cabecera-03.jpg\u0026#34; [[Params.bigimg]] src = \u0026#34;img/homepage-cabecera-04.jpg\u0026#34; [[Params.bigimg]] src = \u0026#34;img/homepage-cabecera-05.jpg\u0026#34; Desvelado el anterior misterio, continuemos con la revisión del archivo config.toml. El siguiente bloque de instrucciones hace referencia a los datos sobre el autor del sitio web (nombre, correo electrónico, etc.). Nos permite, además, configurar una amplia gama de enlaces a nuestras cuentas de redes sociales para así facilitar la conexión entre personas. Originalmente, dicho bloque presenta el siguiente aspecto:\n[Author] name = \u0026#34;Some Person\u0026#34; website = \u0026#34;yourwebsite.com\u0026#34; email = \u0026#34;youremail@domain.com\u0026#34; facebook = \u0026#34;username\u0026#34; googleplus = \u0026#34;+username\u0026#34; # or xxxxxxxxxxxxxxxxxxxxx github = \u0026#34;username\u0026#34; gitlab = \u0026#34;username\u0026#34; bitbucket = \u0026#34;username\u0026#34; twitter = \u0026#34;username\u0026#34; reddit = \u0026#34;username\u0026#34; linkedin = \u0026#34;username\u0026#34; xing = \u0026#34;username\u0026#34; stackoverflow = \u0026#34;users/XXXXXXX/username\u0026#34; snapchat = \u0026#34;username\u0026#34; instagram = \u0026#34;username\u0026#34; youtube = \u0026#34;user/username\u0026#34; # or channel/channelname soundcloud = \u0026#34;username\u0026#34; spotify = \u0026#34;username\u0026#34; bandcamp = \u0026#34;username\u0026#34; itchio = \u0026#34;username\u0026#34; vk = \u0026#34;username\u0026#34; paypal = \u0026#34;username\u0026#34; telegram = \u0026#34;username\u0026#34; Personalmente, no utilizo apenas las redes sociales y confieso que, del anterior listado, ni siquiera conozco algunas de ellas. Así pues, como no podía ser de otra manera, en mi caso el anterior bloque de código ha quedado ciertamente reducido:\n# # Configuración del autor # [Author] name = \u0026#34;Alexis Sáez\u0026#34; website = \u0026#34;https://imalexissaez.github.io/\u0026#34; email = \u0026#34;imalexissaez@gmail.com\u0026#34; github = \u0026#34;ImAlexisSaez\u0026#34; twitter = \u0026#34;imalexissaez\u0026#34; El último bloque de instrucciones que se presenta ante nosotros nos ofrece la posibilidad de configurar el menú que aparece en la parte superior derecha y presenta el siguiente aspecto:\n[[menu.main]] name = \u0026#34;Blog\u0026#34; url = \u0026#34;\u0026#34; weight = 1 [[menu.main]] name = \u0026#34;About\u0026#34; url = \u0026#34;page/about/\u0026#34; weight = 3 [[menu.main]] identifier = \u0026#34;samples\u0026#34; name = \u0026#34;Samples\u0026#34; weight = 2 [[menu.main]] parent = \u0026#34;samples\u0026#34; name = \u0026#34;Big Image Sample\u0026#34; url = \u0026#34;post/2017-03-07-bigimg-sample\u0026#34; weight = 1 [[menu.main]] parent = \u0026#34;samples\u0026#34; name = \u0026#34;Math Sample\u0026#34; url = \u0026#34;post/2017-03-05-math-sample\u0026#34; weight = 2 [[menu.main]] parent = \u0026#34;samples\u0026#34; name = \u0026#34;Code Sample\u0026#34; url = \u0026#34;post/2016-03-08-code-sample\u0026#34; weight = 3 [[menu.main]] name = \u0026#34;Tags\u0026#34; url = \u0026#34;tags\u0026#34; weight = 3 No obstante, de momento, dejaremos el anterior bloque tal cual figura arriba y ya procederemos en un futuro a su modificación, cuando incorporemos algunos cambios adicionales al sitio web.\nFin del archivo config.toml, fin de la entrada, ¿verdad? Todavía no. Nos quedan un par de detalles a los que echarles un vistazo.\nPara empezar, a continuación, configuraremos las taxonomías de nuestro sitio web. ¿Qué es una taxonomía? Sin pretender entrar en detalles técnicos aquí, para que nos hagamos una idea, una taxonomía es un instrumento que nos permite agrupar contenido relacionado. Los ejemplos más habituales a los que estamos acostumbrados son categorías y etiquetas (que aquí se llamarán categories y tags), que facilitan al lector encontrar artículos que comparten cierta temática.\nEn mi …","date":1533787179,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1533787179,"objectID":"29467682d841977ab44fad352df54195","permalink":"https://imalexissaez.github.io/2018/08/09/configurando-el-tema-beautiful-hugo-ii/","publishdate":"2018-08-09T05:59:39+02:00","relpermalink":"/2018/08/09/configurando-el-tema-beautiful-hugo-ii/","section":"post","summary":"Lección 6: finalizamos la edición del archivo de configuración del tema Beautiful Hugo.","tags":["Beautiful Hugo","Hugo","Metablog"],"title":"Configurando el tema Beautiful Hugo (II)","type":"post"},{"authors":["Alexis Sáez"],"categories":["Tutoriales"],"content":"Continuemos esta serie de artículos, catalogados bajo la etiqueta Metablog, donde examinamos con detalle la creación de sitios web utilizando Hugo. Hoy veremos cómo instalar y configurar el tema Beautiful Hugo.\nEn la anterior entrada vimos el proceso a seguir para el tema Anake. No obstante, como ya comenté entonces, algunos detalles de dicha plantilla no terminaban de convencerme para la idea que tenía en mente para Infinitos Contrastes. Así pues, tras invertir una considerable cantidad de tiempo en navegar por la sección de temas de la web oficial de Hugo, encontré, para mi fortuna, el tema Beautiful Hugo, una adaptación del tema Beautiful Jekyll que ya utilicé en su momento como plantilla para mi sitio web.\nMe encanta este tema por el protagonismo que ofrece al contenido, evitando toda esa miríada de elementos que algunas plantillas incorporan y que distraen enormemente la atención a la hora de consultar la información contenida en los artículos. Además, viene con el interesante añadido para un matemático de incorporar, de serie, la configuración adecuada para escribir fórmulas vía KaTeX (es un detalle con cierta trampa, ya que buenas batallas estoy lidiando, en ocasiones, para que las expresiones matemáticas se visualicen como deberían).\nAsí pues, procedamos a su instalación. Para ello, en la terminal, desde el directorio raíz donde hayamos escogido alojar localmente nuestro sitio web, tecleamos:\ncd themes y clonamos, en esta carpeta, el tema Beautiful Hugo escribiendo:\ngit clone https://github.com/halogenica/beautifulhugo.git beautifulhugo Al igual que el tema Anake, Beautiful Hugo viene acompañado, para nuestro gozo y disfrute, con un pequeño sitio web de muestra, ubicado en la carpeta exampleSite (siendo la ruta completa \\themes\\beautifulhugo\\exampleSite). A través del Explorador de archivos de Windows podemos comprobar que su contenido es el que se muestra en la siguiente imagen:\nContenido del sitio web de ejemplo Procedemos entonces a copiar las carpetas contents, layouts y static, así como el archivo config.toml y las pegamos en el directorio raíz de nuestro sitio web. A estas alturas de la película, dependiendo de la intensidad con la que hayamos estado experimentando con diversas plantillas, recomendaría incluso eliminar previamente las mencionadas carpetas y el citado fichero antes de proceder a la acción de pegar, para así evitar la aparición de extraños conflictos en un futuro próximo.\nAhora, editamos el archivo config.toml, utilizando Sublime Text 3 para ello, con el objetivo de empezar a personalizar la configuración de esta plantilla. Algunos de los detalles que a continuación veremos son muy similares a los que discutimos durante el artículo dedicado al tema Anake, por lo que en esta ocasión el ritmo de exposición será más ligero.\nEl primer bloque de código que encontramos es:\nbaseurl = \u0026#34;https://username.github.io\u0026#34; DefaultContentLanguage = \u0026#34;en\u0026#34; #DefaultContentLanguage = \u0026#34;ja\u0026#34; title = \u0026#34;Beautiful Hugo\u0026#34; theme = \u0026#34;beautifulhugo\u0026#34; metaDataFormat = \u0026#34;yaml\u0026#34; pygmentsStyle = \u0026#34;trac\u0026#34; pygmentsUseClasses = true pygmentsCodeFences = true pygmentsCodefencesGuessSyntax = true #pygmentsUseClassic = true #pygmentOptions = \u0026#34;linenos=inline\u0026#34; #disqusShortname = \u0026#34;XXX\u0026#34; #googleAnalytics = \u0026#34;XXX\u0026#34; Algunas variables nos resultarán familiares, por lo que seremos capaces inmediatamente de asignarles sus correspondientes valores. Por ejemplo, las primeras líneas, en mi caso, han quedado como sigue:\n# # Configuración básica del sitio # title = \u0026#34;Infinitos Contrastes\u0026#34; # Título de la web theme = \u0026#34;beautifulhugo\u0026#34; # Tema baseurl = \u0026#34;https://imalexissaez.github.io/\u0026#34; # URL base metaDataFormat = \u0026#34;yaml\u0026#34; # Formato de las cabeceras de las entradas DefaultContentLanguage = \u0026#34;es\u0026#34; # Lenguaje de la web (activa localización) Ninguna sorpresa aquí. Entre los descriptivos nombres que poseen las variables y los comentarios que he añadido, no es descabellado suponer que todos configuraremos de manera adecuada el anterior bloque.\nAhora bien, el siguiente apartado sí que merece explicación por mi parte:\n# # Configuración de los bloques de código fuente # Guía en: https://gohugo.io/content-management/syntax-highlighting/ # pygmentsStyle = \u0026#34;trac\u0026#34; pygmentsUseClasses = true pygmentsCodeFences = true pygmentsCodefencesGuessSyntax = true He dejado en los comentarios un enlace a la guía oficial para la configuración del resaltado de código a la que convendría que echásemos un vistazo. Para empezar, existen diferentes estilos CSS que, principalmente, afectan a los colores en los que se resaltan las palabras clave de los lenguajes de programación, así como al fondo en el que el código aparece. Tras revisar las opciones disponibles, el valor \u0026#34;trac\u0026#34;, en mi opinión, es el que más a juego va con Beautiful Hugo. Por otro lado, como este tema utiliza la librería highlight.js (en lugar de la que Hugo incorpora por defecto) para el mencionado resaltado, hemos de asignar true a la variable pygmentsUseClasses.\nA continuación, habilitamos la posibilidad de escribir …","date":1533614379,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1533614379,"objectID":"6d15e76359adfeaea5c697e58f9202f8","permalink":"https://imalexissaez.github.io/2018/08/07/configurando-el-tema-beautiful-hugo-i/","publishdate":"2018-08-07T05:59:39+02:00","relpermalink":"/2018/08/07/configurando-el-tema-beautiful-hugo-i/","section":"post","summary":"Lección 5: instalamos el tema Beautiful Hugo y editamos en detalle su archivo de configuración.","tags":["Beautiful Hugo","Hugo","Metablog"],"title":"Configurando el tema Beautiful Hugo (I)","type":"post"},{"authors":["Alexis Sáez"],"categories":["Tutoriales"],"content":"El proceso de actualización de la versión del lenguaje de programación R puede resultar un tanto tedioso si lo llevamos a cabo de forma manual. Veamos cómo hacer más liviana esta pesada carga.\nPor fortuna, tenemos a nuestra disposición el paquete installr, que se encarga de todo el anterior procedimiento automáticamente, a través de la llamada a la función updateR().\nDe esta forma, basta con que tengamos a mano un script similar al que se muestra a continuación, y procedamos a ejecutarlo cuando se anuncie una nueva versión de R:\n# Instala el paquete install.packages(\u0026#34;installr\u0026#34;) # Actualiza R library(installr) updateR() Al utilizar la función updateR():\nSe comprueba cuál es la última versión de R. Si estamos al día, nos mostrará una ventana de confirmación de tal hecho. En caso contrario, nos dará la posibilidad de consultar las novedades de dicha versión y nos permitirá proceder a su descarga e instalación. Una vez completado el proceso, nos preguntará si deseamos mover (y borrar) las librerías desde nuestra antigua versión a la nueva. Además, nos dará la opción de ponerlas al día. Dependiendo del número de librerías que tengamos instaladas, completar estas acciones puede llevarnos un buen rato. Si usamos RStudio, al principio se nos mostrará un aviso sugiriéndonos que llevemos a cabo todo el proceso desde la propia interfaz de R, en lugar de a través de este IDE. No obstante, en mi experiencia, podemos tranquilamente ignorar la advertencia y realizar el procedimiento utilizando RStudio. Al terminar, bastará con que reiniciemos el programa para que todo funcione con normalidad.\nFinalmente, podemos ahorrarnos la sucesión de ventanas emergentes si sabemos de antemano que queremos actualizar R, mover (no copiar) las librerías y actualizarlas. Para ello, reescribimos el anterior script como sigue:\n# Instala / carga el paquete if(!require(installr)) {install.packages(\u0026#34;installr\u0026#34;); require(installr)} # Instala R, mueve y actualiza paquetes updateR(F, T, T, F, T, F, T) ","date":1533355179,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1533355179,"objectID":"0d7496f41db1b2cdf0b43cfef5b41643","permalink":"https://imalexissaez.github.io/2018/08/04/como-actualizar-facilmente-r-en-windows/","publishdate":"2018-08-04T05:59:39+02:00","relpermalink":"/2018/08/04/como-actualizar-facilmente-r-en-windows/","section":"post","summary":"El proceso de actualización de la versión del lenguaje de programación *R* puede resultar un tanto tedioso si lo llevamos a cabo de forma manual. Veamos cómo hacer más liviana esta pesada carga.","tags":["R","Windows"],"title":"¿Cómo actualizar fácilmente R en Windows?","type":"post"},{"authors":["Alexis Sáez"],"categories":["Estadística"],"content":"Hace unos días, completé la lectura del estupendo artículo “Degrees of freedom in planning, running, analyzing, and reporting psychological studies. A checklist to avoid p-hacking”, cuya lista de autores es casi tan extensa como el propio título, y de acceso abierto a través de este enlace.\nEn la línea de la famosa idea conocida como “The Garden of Forking Paths”, acuñada por Andrew Gelman, el mencionado documento lista los múltiples grados de libertad existentes en todas y cada una de las fases de un estudio. Ahora bien, ¿a qué nos referimos cuando hablamos de los grados de libertad de un estudio?\nSin entrar aquí en demasiado detalle, se trata de ciertas decisiones arbitrarias (intencionadas o no) que los investigadores toman en sus investigaciones a la hora de diseñarlas, recoger los datos de interés, analizar éstos y posteriormente reportarlos en publicaciones científicas. Es lógico entonces que nos planteemos la siguiente cuestión: ¿qué efecto poseen los grados de libertad de un estudio sobre las conclusiones alcanzadas?\nEntre otras, las dos principales consecuencias son, por un lado, el incremento de la probabilidad de hallar resultados que no son más que falsos positivos, y, por otra parte, la posibilidad de inflar las estimaciones para los tamaños de los efectos observados. Así pues, ¿es posible evitar su aparición en un estudio?\nA día de hoy, el mejor método (aunque dista de ser perfecto) para que un estudio esté libre de grados de libertad es utilizar, de manera precisa y muy detallada, un recurso conocido como pre-registro (preregistration en inglés). La idea es presentar, e incluso someter a revisión de pares, el plan que seguirá cierta investigación antes de realizar la propia recolección de los datos de interés.\nEn el citado artículo se ofrece un listado (no totalmente exhaustivo) de los grados de libertad que puede presentar un estudio, restringiendo este al marco de referencia habitual utilizado para el contraste de hipótesis. De esta forma, los autores advierten que habría que eliminar o añadir ciertos grados de libertad si es otra la metodología empleada.\nAlgunos de los mencionados grados de libertad están relacionados entre sí (recomiendo consultar la tabla que figura en la última página del artículo) o incluso pueden llegar a dar la impresión de aparecer por duplicado. No obstante, se justifica este hecho por la importancia de adoptar cierta decisión en una fase del estudio u otra.\nA modo de resumen, estos son los 34 grados de libertad de un estudio, desglosados en función de las distintas etapas de una investigación:\nFase de generación de hipótesis: [T1] Llevar a cabo investigaciones exploratorias. Esto conduce a una práctica conocida como “HARKing” (“Hypothesizing After Results are Known”, que vendría a ser generar hipótesis una vez se conocen los resultados). [T2] Declarar hipótesis imprecisas que no indiquen la dirección del posible efecto. Es un tipo especial de “HARKing”, ya que el investigador puede luego analizar los datos de dos maneras alternativas. Fase de diseño: [D1] Crear múltiples condiciones y variables independientes manipuladas. A medida que el diseño de un estudio adquiere complejidad, esta práctica puede conducir a posibles futuras decisiones con respecto a los niveles de las variables que se están considerando o sobre las condiciones en la que centra el foco de atención. [D2] Medir variables adicionales sin decidir de antemano si éstas serán bien covariables, bien variables independientes, bien variables mediadoras, o bien variables moderadoras. [D3] Registrar la misma variable dependiente de diferentes formas alternativas. Esta práctica puede tentar al investigador a adoptar al final la escala que favorezca la aparición de resultados significativos. [D4] Medir variables dependientes (o incluso probar teorías) adicionales, diseñadas en principio como secundarias en el estudio, que luego adopten un rol primario en los resultados del estudio si las variables principales fallan a la hora de mostrar efecto alguno (esto podría considerarse también como una especie de “HARKing”). [D5] Incorporar variables adicionales que permitan, a posteriori, al investigador, la exclusión del análisis de ciertos (o incluso grupos de) participantes, con el propósito de encontrar así resultados significativos. [D6] No realizar un análisis del poder estadístico del estudio. Es más, el investigador suele adoptar una posición extremadamente optimista al respecto de este asunto cuando trabaja con muestras pequeñas, lo cual se traduce en estudios de bajo poder estadístico. [D7] No informar acerca del plan de muestreo, permitiendo así la posibilidad de realizar, de manera consecutiva, múltiples pequeños estudios hasta dar con el resultado significativo deseado (y sin haber controlado el efecto que esta práctica posee sobre el error de tipo I). Fase de recolección de datos: [C1] No asignar los participantes de un estudio a las condiciones de forma aleatoria, lo cual da lugar a la posible aparición …","date":1533182379,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1533182379,"objectID":"897c974cbcb61635d157a531f3b35061","permalink":"https://imalexissaez.github.io/2018/08/02/los-34-grados-de-libertad-de-un-estudio/","publishdate":"2018-08-02T05:59:39+02:00","relpermalink":"/2018/08/02/los-34-grados-de-libertad-de-un-estudio/","section":"post","summary":"Breve análisis del artículo 'Degrees of freedom in planning, running, analyzing, and reporting psychological studies. A checklist to avoid p-hacking'.","tags":["Grados de libertad","Papers"],"title":"Los 34 grados de libertad de un estudio","type":"post"},{"authors":["Alexis Sáez"],"categories":["Oposiciones"],"content":"En este artículo, señalaremos la legislación vigente al respecto de los temarios de oposiciones para el acceso al cuerpo de profesores de Enseñanza Secundaria, listando completamente el asociado a la especialidad de matemáticas.\nPara empezar, podemos acudir, por ejemplo, a la Orden 13 / 2016, de 3 de mayo, de la Conselleria de Educación, Investigación, Cultura y Deporte, por la que se convoca procedimiento selectivo de ingreso, y procedimiento para la adquisición de nuevas especialidades en los cuerpos docentes de profesores de Enseñanza Secundaria, profesores de escuelas oficiales de idiomas, profesores de Música y Artes Escénicas y profesores técnicos de Formación Profesional.\nEn la Comunidad Valenciana, esta es la orden asociada a la última convocatoria de oposiciones para Educación Secundaria. Nos interesa acudir a su capítulo segundo, que recoge las bases específicas para los distintos cuerpos de profesores, y más concretamente al apartado 15.4. Temarios. En él figura:\nDe conformidad con lo previsto en la Orden ECD / 191 / 2012, de 6 de febrero, por la que se regulan los temarios que han de regir en los procedimientos de ingreso, accesos y adquisición de nuevas especialidades en los cuerpos docentes establecidos en la Ley Orgánica 2 / 2006, de 3 de mayo, de Educación, serán de aplicación:\na) Los temarios establecidos en el anexo III de la Orden de 9 de septiembre de 1993 por la que se aprueban los temarios que han de regir en los procedimientos de ingreso, adquisición de nuevas especialidades y movilidad para determinadas especialidades de los Cuerpos de Maestros, Profesores de Enseñanza Secundaria y Profesores de escuelas oficiales de idiomas, regulados por el Real Decreto 850 / 1993, de 4 de junio, en lo que corresponde a las especialidades del Cuerpo de Profesores de Enseñanza Secundaria. b) Los temarios establecidos en los anexos I y II de la Orden de 1 de febrero de 1996, por la que se aprueban los temarios que han de regir en los procedimientos de ingreso, adquisición de nuevas especialidades y movilidad para determinadas especialidades de los Cuerpos de Profesores de Enseñanza Secundaria y Profesores Técnicos de Formación Profesional. Por lo que respecta a la Orden ECD / 191 / 2012, es importante que destaquemos, además del contenido de los puntos a) y b) listados arriba, que deroga la Orden EDU / 3138 / 2011, de 15 de noviembre, por la que se aprueban los temarios que han de regir en los procedimientos de ingreso, accesos y adquisición de nuevas especialidades de los Cuerpos de Profesores de Enseñanza Secundaria y Profesores Técnicos de Formación Profesional.\nEsta última declaraba, para la especialidad de matemáticas, un temario compuesto por 74 temas y fue modificada por la Orden EDU / 3530 / 2011, de 19 de diciembre, por la que se corrigen errores y omisiones en la Orden EDU / 3138 / 2011, de 15 de noviembre, por la que se aprueban los temarios que han de regir en los procedimientos de ingreso, accesos y adquisición de nuevas especialidades de los Cuerpos de Profesores de Enseñanza Secundaria y Profesores Técnicos de Formación Profesional. En ella, además de corregir algunas erratas del mencionado temario, incluso añadían un tema adicional, elevando la cifra total hasta 75. Este hecho justifica la discrepancia que aparece cuando realizamos una búsqueda, en Internet, sobre temarios de oposiciones para la especialidad de matemáticas y hemos de actuar con cautela, por tanto.\nAsí pues, consultemos el referido anexo III de la Orden de 9 de septiembre de 1993, que para la especialidad de matemáticas lista los siguientes 71 temas:\nNúmeros naturales. Sistemas de numeración. Fundamentos y aplicaciones de la teoría de grafos. Diagramas en árbol. Técnicas de recuento. Combinatoria. Números enteros. Divisibilidad. Números primos. Congruencia. Números racionales. Números reales. Topología de la recta real. Aproximación de números. Errores. Notación científica. Sucesiones. Término general y forma recurrente. Progresiones aritméticas y geométricas. Aplicaciones. Números complejos. Aplicaciones geométricas. Sucesivas ampliaciones del concepto de número. Evolución histórica y problemas que resuelve cada una. Conceptos básicos de la teoría de conjuntos. Estructuras algebraicas. Espacios vectoriales. Variedades lineales. Aplicaciones entre espacios vectoriales. Teorema de isomorfía. Polinomios. Operaciones. Fórmula de Newton. Divisibilidad de polinomios. Fracciones algebraicas. Ecuaciones. Resolución de ecuaciones. Aproximación numérica de raíces. Ecuaciones diofánticas. Discusión y resolución de sistemas de ecuaciones lineales. Teorema de Rouché. Regla de Cramer. Método de Gauss-Jordan. Programación lineal. Aplicaciones. Matrices. Álgebra de matrices. Aplicaciones al campo de las Ciencias Sociales y de la Naturaleza. Determinantes. Propiedades. Aplicación al cálculo del rango de una matriz. El lenguaje algebraico. Símbolos y números. Importancia de su desarrollo y problemas que resuelve. Evolución histórica …","date":1533009579,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1533009579,"objectID":"00d5a9990dc9e25c936028b567c95c63","permalink":"https://imalexissaez.github.io/2018/07/31/sobre-los-temarios-de-oposiciones/","publishdate":"2018-07-31T05:59:39+02:00","relpermalink":"/2018/07/31/sobre-los-temarios-de-oposiciones/","section":"post","summary":"En este artículo señalaremos la legislación vigente al respecto de los temarios de oposiciones para el acceso al cuerpo de profesores de Enseñanza Secundaria, listando completamente el asociado a la especialidad de matemáticas.","tags":["Legislación","Temarios"],"title":"Sobre los temarios de oposiciones","type":"post"},{"authors":["Alexis Sáez"],"categories":["Oposiciones"],"content":"A través de Facebook, he tenido acceso a un recurso didáctico bastante interesante, que viene en forma de Trabajo de Fin de Máster (TFM) y ha sido elaborado por Rubén Rodríguez Ballesteros para la Universidad de Valladolid.\n“Comparativa histórica del examen de problemas en la prueba selectiva al cuerpo de profesores de secundaria en Castilla y León” es el título del TFM al que podemos tener acceso a través de este enlace. En la introducción, su autor nos plantea un par de ambiciosos objetivos:\nNuestro primer propósito será responder a la necesidad por parte de los futuros opositores de prepararse para la prueba oposición de la mejor forma posible. El mayor obstáculo que encuentran estos en su camino es la parte de problemas de la primera prueba.\nEl segundo objetivo es establecer una comparativa de los problemas a lo largo del tiempo para poder responder al tópico de que los exámenes son cada día más fáciles.\nEn mi opinión, uno de los puntos fuertes de este documento reside en la asociación, que lleva a cabo el autor, entre los bloques de contenidos a los que pertenecen los problemas de las últimas convocatorias de oposición (números y sucesiones, álgebra, cálculo infinitesimal, geometría y probabilidad) y los temas del temario oficial que les darían soporte teórico.\nCon esta guía podemos sortear, de cierto modo, ese bloqueo que aparece cuando por primera vez tenemos acceso al listado de 71 temas y careceremos de orientación a la hora de escoger cuáles serán los primeros que elaboraremos. Una buena estrategia sería empezar por aquellos que nos aporten herramientas y resultados interesantes de cara a resolver los problemas, ¿verdad?\nAdemás, el texto aporta una serie de referencias a la legislación de cada una de las convocatorias de oposición que han tenido lugar, desde el año 2000, en Castilla y León. Esta información nos será útil para hacernos una idea de cómo funciona el proceso en sí y su evolución a lo largo de estas casi dos décadas, hecho que quizá nos permita entrever la senda que seguirán futuras convocatorias.\nSin embargo, el principal atractivo de este TFM son los capítulos 3 y 5, que recogen los enunciados de los problemas de oposición de las convocatorias analizadas y adjuntan su resolución completa. Si bien es cierto que ya el autor nos advierte que la mayoría de las soluciones proceden de los volúmenes publicados por la editorial Deimos (me refiero a los que figuran en esta página), aporta, en algunos casos, alternativas que nos resultarán de interés.\nTras finalizar la resolución de los problemas correspondientes a cinco convocatorias, en el apartado de conclusiones el autor ofrece su opinión al respecto de la evolución de la dificultad de los enunciados propuestos:\nLa tendencia que se percibe es una preferencia por problemas en los que hace falta dominar la comprensión significativa del temario. Hace falta comprender los temas como teoría que estudia cómo se relacionan unos conceptos, en vez de comprenderlos como conjunto de resultados y procedimientos que han de ser aplicados de forma más o menos enrevesada.\nLa conclusión que presentamos es que, efectivamente, el nivel de contenidos de los problemas ha bajado, el examen es menos duro. No obstante, esta visión no describe la realidad de la situación por completo. Los problemas de la última convocatoria cubren estas otras cualidades ya mencionadas: capacidad de interpretación, creatividad y comprensión significativa o global de los temas. Mientras que el opositor de hace 20 años lo que tenía que hacer era memorizar los temas y hacer problemas extensivamente, el opositor del día de hoy tiene que centrarse más en comprender y reflexionar sobre los temas, al menos aquellos que tienen una relación más directa con la resolución de los problemas.\nEl tema es, cuanto menos, controvertido y discrepo, en parte, con la conclusión alcanzada por el autor. No considero más complicada una prueba que requiera un importante trabajo de memorización, que una que precise grandes dosis de ingenio y creatividad. La primera de ellas es únicamente cuestión de tiempo y esfuerzo, mientras que el segundo tipo es complicado de preparar y, sobre todo, quizá poco adecuado para una prueba caracterizada por ofrecer un estrecho margen temporal de maniobra.\nAdemás, alcanzar una comprensión significativa de 71 temas, en el que seamos conscientes de las relaciones existentes entre los diversos conceptos que en ellos figuran, es una tarea titánica, posiblemente una empresa para toda una vida de estudio y reflexión. Más si cabe cuando buena parte de los opositores afronta la preparación de cara a las oposiciones de una forma que dista sobremanera del estudio exhaustivo del temario.\nNo obstante, dicho esto, tampoco quiero dejar entrever que me posiciono en contra de las conclusiones alcanzadas. Únicamente opino que los argumentos en los que estas se cimentan no me parecen suficientes para emitir un juicio sobre la evolución de la dificultad de las pruebas. Dado el cambio de …","date":1532663979,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1532663979,"objectID":"bc21f624fbf310ba1200ef9280a91644","permalink":"https://imalexissaez.github.io/2018/07/27/comparativa-de-problemas-de-oposicion-en-castilla-y-leon/","publishdate":"2018-07-27T05:59:39+02:00","relpermalink":"/2018/07/27/comparativa-de-problemas-de-oposicion-en-castilla-y-leon/","section":"post","summary":"A través de Facebook he tenido acceso a un recurso didáctico bastante interesante, que viene en forma de Trabajo de Fin de Máster (TFM) y ha sido elaborado por Rubén Rodríguez Ballesteros para la Universidad de Valladolid.","tags":["Problemas","TFM"],"title":"Comparativa de problemas de oposición en Castilla y León","type":"post"},{"authors":["Alexis Sáez"],"categories":["Oposiciones"],"content":"Abordemos, en este artículo, algunos aspectos fundamentales a tener en cuenta sobre las competencias clave, a las que dedicaremos uno de los apartados de nuestra programación didáctica.\nEl Artículo 2 del Real Decreto 1105 / 2014, de 26 de diciembre, por el que se establece el currículo básico de la Educación Secundaria Obligatoria y del Bachillerato, nos define las competencias como\nc) Competencias: capacidades para aplicar de forma integrada los contenidos propios de cada enseñanza y etapa educativa, con el fin de lograr la realización adecuada de actividades y la resolución eficaz de problemas complejos.\npara, a continuación, el mismo artículo concretar:\nA efectos del presente real decreto, las competencias del currículo serán las siguientes:\na) Comunicación lingüística. b) Competencia matemática y competencias básicas en ciencia y tecnología. c) Competencia digital. d) Aprender a aprender. e) Competencias sociales y cívicas. f) Sentido de iniciativa y espíritu emprendedor. g) Conciencia y expresiones culturales. Para una adquisición eficaz de las competencias y su integración efectiva en el currículo, deberán diseñarse actividades de aprendizaje integradas que permitan al alumnado avanzar hacia los resultados de aprendizaje de más de una competencia al mismo tiempo.\nSe potenciará el desarrollo de las competencias Comunicación lingüística, Competencia matemática y competencias básicas en ciencia y tecnología.\nAhora bien, en el real decreto apenas aparecen listadas y poco más. ¿Dónde podemos encontrar información adicional sobre las competencias clave? En mi opinión, una buena primera parada sería la visita a esta página del Ministerio de Educación y Formación Profesional, que, tras una breve introducción, nos ofrece acceso a detalles relevantes para cada una de las competencias clave a través de los siguientes enlaces:\na) Competencia en comunicación lingüística (CCLI). b) Competencia matemática y competencias básicas en ciencia y tecnología (CMCT). c) Competencia digital (CD). d) Competencia para aprender a aprender (CAA). e) Competencias sociales y cívicas (CSC). f) Sentido de la iniciativa y espíritu emprendedor (SIEE). g) Conciencia y expresiones culturales (CEC). En la mencionada introducción hay un detalle que conviene advirtamos, la referencia a la Orden ECD / 65 / 2015, de 21 de enero, por la que se describen las relaciones entre las competencias, los contenidos y los criterios de evaluación de la educación primaria, la educación secundaria obligatoria y el bachillerato. En este artículo no comentaré nada de ella, ya que me gustaría dedicarle por completo una entrada a dicha orden.\nAhora bien, ¿cómo puedo contribuir con mi materia al desarrollo de las anteriores competencias clave? La legislación autonómica acude a nuestro rescate en esta ocasión. Por ejemplo, para las asignaturas de matemáticas de la modalidad de ciencias del Bachillerato, el Decreto 87 / 2015, de 5 de junio, del Consell, por el que establece el currículo y desarrolla la ordenación general de la Educación Secundaria Obligatoria y del Bachillerato en la Comunitat Valenciana, figura:\nEn el marco de las competencias clave, las matemáticas contribuyen a la competencia en comunicación lingüística al ampliar sustancialmente el vocabulario del alumnado, incorporando el específico de las matemáticas, que utilizan todas las ciencias, además de utilizar continuamente la comunicación tanto oral como escrita en la formulación y expresión de las ideas. Las oportunidades para comunicar ideas matemáticas y el proceso de escuchar, exponer, dialogar y redactar, favorecen la expresión y comprensión de los mensajes orales y escritos en situaciones diversas. Es en la resolución de problemas donde adquiere especial importancia la expresión tanto oral como escrita de los procesos realizados y de los razonamientos seguidos.\nEl énfasis en la funcionalidad de los aprendizajes, su utilidad para comprender el mundo que nos rodea o la misma selección de estrategias para la resolución de un problema, determinan la posibilidad real de aplicar las matemáticas a diferentes campos de conocimiento o a distintas situaciones de la vida cotidiana, contribuyendo así con mayor peso a la adquisición de la competencia matemática y competencias básicas en ciencia y tecnología. La competencia matemática, reconocida como clave por la Unión Europea, se desarrolla especialmente gracias a la contribución de la materia de Matemáticas. La activación de la competencia matemática supone que el alumno es capaz de establecer una relación profunda entre el conocimiento conceptual y el conocimiento procedimental, implicados en la resolución de una tarea matemática o científica determinada. Las matemáticas contribuyen de manera especial al desarrollo del pensamiento y razonamiento, en particular, el pensamiento lógico-deductivo.\nLa incorporación de herramientas tecnológicas como recurso didáctico para el aprendizaje y para la resolución de problemas, y la realización de …","date":1532491179,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1532491179,"objectID":"7c2f2da085ca8c230a564f1e3125613a","permalink":"https://imalexissaez.github.io/2018/07/25/sobre-las-competencias-clave/","publishdate":"2018-07-25T05:59:39+02:00","relpermalink":"/2018/07/25/sobre-las-competencias-clave/","section":"post","summary":"Abordemos, en este artículo, algunos aspectos fundamentales a tener en cuenta sobre las competencias clave, a las que dedicaremos uno de los apartados de nuestra programación didáctica.","tags":["Legislación","Programación didáctica"],"title":"Sobre las competencias clave","type":"post"},{"authors":["Alexis Sáez"],"categories":["Reseñas"],"content":"En este artículo, vamos a echar un vistazo a una interesante novela, con las matemáticas como telón de fondo, que viene de la mano de Jordi Sierra i Fabra. ¿Será un libro adecuado para recomendar como lectura durante el curso académico?\nEn la contraportada encontramos el siguiente texto:\nUn profesor propone a sus alumnos un juego como examen para aprobar las matemáticas. El viernes por la tarde, el profesor muere, pero, antes de fallecer, comenta a sus alumnos que el sobre que hay en su bolsillo les indicará cómo buscar a su asesino. No deben fallarle…\nLa sinopsis del párrafo anterior nos plantea una idea muy atractiva para un libro que encontramos en la colección El Duende Verde, de la editorial Anaya. A través de este enlace podemos acceder a la información completa del título, cuya portada figura a continuación.\nPortada del libro. A primera vista, parece que ha caído en nuestras manos una especie de novela de intriga, detectivesca de corazón. ¿Y qué decir del título? Seguro que despertará la imaginación de muchas personas, sobre todo de aquellas cuya relación con la materia no fuese (o sea) todo lo satisfactoria que debiera. Ahora bien, ya lo avisa el propio autor, en las primeras páginas:\nAsesinar al profe de mates no sirve de nada. Ponen a otro en su lugar y ya está.\nEl texto está recomendado a lectores mayores de 12 años, hecho que nos da una pista sobre el lenguaje utilizado o la predictibilidad de la historia. Es una lectura amena, entretenida, para disfrutar por completo en una de esas tardes de ocio, ya que no es muy extensa.\nNo obstante, un detalle sí que captó rápidamente mi atención: la manera en la que se comunican los tres protagonistas del libro, alumnos del profesor y detectives de una tarde por encargo. Aunque es cierto que la novela tiene unos cuantos años a sus espaldas (se publicó en 2002), enseguida se aprecia un tipo de lenguaje forzado y muy artificial para las conversaciones de los estudiantes. Es difícil que un lector adolescente se identifique con esa forma de expresarse, ni en los tiempos que corren, ni siquiera cuando el libro vio la luz. Esta situación, por desgracia, resta en mi opinión bastante credibilidad a la historia.\nDetalles literarios al margen, pasemos a comentar el contenido matemático del texto. Los alumnos han de resolver una serie de retos, planteados en forma de problemas, adivinanzas o acertijos y para los cuales, más que conocimientos de la materia (el trabajo con ecuaciones lineales es el contenido matemático más avanzado que aparece si mal no recuerdo), necesitarán utilizar toda esa creatividad que rezuma de sus poros en la edad en que se encuentran.\nLos problemas forman parte del folclore matemático y todo profesor de la materia habrá disfrutado de ellos en algún momento de su carrera. No así seguramente los alumnos, más acostumbrados a invertir su tiempo en el aula de matemáticas llevando a cabo ejercicios y no auténticos problemas. Escribiendo de memoria, encontramos, entre otros, el clásico de la mosca que vuela entre bicicletas, el de los espías que viven en cuatro casas del mismo barrio o el que relaciona edades entre distintos miembros de una familia.\nLos protagonistas de la novela logran, empleando mucha creatividad, superar cada uno de los retos, mostrando al lector la solución a través de un diálogo repleto de ideas originales y salpicado de múltiples quejas y frustraciones por la dificultad de alguno de los enunciados planteados. Precisamente aquí sufre la novela otro serio varapalo en lo que a credibilidad respecta. Es bastante improbable que alumnos de los primeros cursos de educación secundaria sean capaces de abordar con éxito los retos planteados y sobre todo teniendo en cuenta el estrecho margen de tiempo del que disponen.\nNo obstante, este hecho presenta la oportunidad de llevar la lectura al aula, y dedicar cierta parte de una las sesiones (aquellas que van tras educación física, las que tienen lugar en las últimas horas de la mañana o las de los viernes, por ejemplo) a desentrañar, con paciencia, los problemas que aparecen en los capítulos del texto. Organizando bien sus contenidos, estimo que sería una actividad que podríamos ofrecer a lo largo de un trimestre completo.\nMuchas de las estrategias de resolución de problemas que figuran en el libro pueden extrapolarse a las actividades que estén desarrollando en la unidad didáctica de turno. Introducirlas como hace la novela, a modo de reto o adivinanza, seguramente provoque que los estudiantes las asimilen más fácilmente y las asocien rápidamente con el texto, quedando así disponibles en su memoria para emplearlas en el aula en futuras ocasiones.\nAsí pues, ‘‘El asesinato del profesor de matemáticas’’ es un libro de lectura que recomendaría encarecidamente para el aula, en los primeros cursos de educación secundaria, siempre y cuando venga acompañado de su estudio en unas cuantas sesiones del curso.\n","date":1532318379,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1532318379,"objectID":"8afb7bfb8df606b0980139f92e921edb","permalink":"https://imalexissaez.github.io/2018/07/23/resena-el-asesinato-del-profesor-de-matematicas/","publishdate":"2018-07-23T05:59:39+02:00","relpermalink":"/2018/07/23/resena-el-asesinato-del-profesor-de-matematicas/","section":"post","summary":"En este artículo vamos a echar un vistazo a una interesante novela, con las matemáticas como telón de fondo, que viene de la mano de Jordi Sierra i Fabra. ¿Será un libro adecuado para recomendar como lectura durante el curso académico?","tags":["Divulgación","Lecturas"],"title":"Reseña: 'El asesinato del profesor de matemáticas'","type":"post"},{"authors":["Alexis Sáez"],"categories":["Tutoriales"],"content":"Es muy útil poder incluir varias imágenes en la misma figura, bien sea porque están relacionadas de alguna manera, bien debido a que resulta mucho más sencillo hacer una comparación si se colocan juntas.\nLidiar con elementos flotantes en LaTeX no siempre es una tarea agradecida, pero, en esta ocasión, y sin que sirva de precedente, crear composiciones de múltiples imágenes dentro de una figura es bastante sencillo.\nA continuación, muestro los pasos que podemos seguir para ello:\nDentro del entorno figure, crearemos tantos entornos subfigure como imágenes queramos incluir en la composición. El parámetro opcional del entorno subfigure, [b] en el ejemplo que aparece abajo, sigue las clásicas pautas de los elementos flotantes en LaTeX, y será de suma utilidad que lo definamos con precisión si las imágenes poseen diferentes alturas. Con textwidth controlaremos la anchura de las imágenes. Por ejemplo, para que aparezcan dos imágenes, una al lado de otra, y que ocupen la mayor parte del espacio horizontal del documento con el que estemos trabajando, 0.49 será un valor adecuado, pues deja un leve espacio blanco entre ellas. Si no queremos que aparezcan tan juntas, simplemente tendremos que reducir la anterior cantidad. Para tres imágenes, 0.33 es el valor que consigue que éstas aparezcan una a continuación de la otra, dejando leves espacios blancos entre ellas. Una vez declarados tanto el parámetro opcional como el obligatorio, incluiremos la imagen dentro del entorno subfigure utilizando las instrucciones habituales. Como hemos cargado en el preámbulo los paquetes caption y subcaption, podremos incluir los comandos caption y label en cada una de las imágenes, por si luego queremos hacer referencia a alguna de ellas. Utilizar hfill entre los distintos entornos subfigure provoca que las imágenes queden empujadas hacia los márgenes del documento. Este efecto nos puede resultar de interés si no estamos trabajando con esos valores límites (como 0.49) para la anchura de las imágenes. Con un ejemplo quedará más claro el procedimiento que hemos de seguir:\n\\documentclass{article} \\usepackage[utf8]{inputenc} \\usepackage[english, spanish]{babel} \\usepackage{graphicx} \\usepackage{caption} \\usepackage{subcaption} \\begin{document} \\begin{figure}[!tbp] \\begin{subfigure}[b]{0.49\\textwidth} \\includegraphics[width=\\textwidth, height=\\textwidth]{img1.jpg} \\caption{Primera imagen.} \\label{fig:f1} \\end{subfigure} \\hfill \\begin{subfigure}[b]{0.49\\textwidth} \\includegraphics[width=\\textwidth, height=\\textwidth]{img2.jpg} \\caption{Segunda imagen.} \\label{fig:f2} \\end{subfigure} \\caption{Dos imágenes en la misma figura.} \\end{figure} \\end{document} Podemos apreciar el resultado en la siguiente imagen:\nResultado del bloque de código anterior. Nota: no es recomendable que forcemos el parámetro height para que se ajuste al textwidth definido, pues generalmente provocará distorsiones no deseadas en nuestras imágenes. Si aparece en el ejemplo anterior no es más que por descuido, ya que de las distintas configuraciones con las que he estado experimentando, esa ha sido precisamente la última y no he caído en cambiar ese detalle antes de publicar el código.\nReferencia:\nPutting two images beside each other. ","date":1532231979,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1532231979,"objectID":"13ef510248f6913bf3933ecbe50785fa","permalink":"https://imalexissaez.github.io/2018/07/22/como-incluir-varias-imagenes-en-la-misma-figura-con-latex/","publishdate":"2018-07-22T05:59:39+02:00","relpermalink":"/2018/07/22/como-incluir-varias-imagenes-en-la-misma-figura-con-latex/","section":"post","summary":"Es muy útil poder incluir varias imágenes en la misma figura, bien sea porque están relacionadas de alguna manera, bien debido a que resulta mucho más sencillo hacer una comparación si se colocan juntas.","tags":["LaTeX"],"title":"¿Cómo incluir varias imágenes en la misma figura con LaTeX?","type":"post"},{"authors":["Alexis Sáez"],"categories":["Tutoriales"],"content":"Reconozco que la edición de tablas, junto con la gestión de figuras, a veces se convierte en una pequeña pesadilla para mí cuando estoy generando documentos con LaTeX. Veamos cómo he dado respuesta a la cuestión que aparece en el título de esta entrada.\nEs habitual en estadística que trabajemos con tablas de contingencia, sobre todo en su versión $2\\times 2$. Estas se suelen caracterizar por tener la celda que ocupa la esquina superior izquierda dividida diagonalmente, de manera que el texto inferior de dicha celda hace referencia al contenido de las filas (por ejemplo, si se posee o no cierta enfermedad), mientras que el texto superior hace lo propio para las columnas (por ejemplo, si se está expuesto a un factor de riesgo o no).\nAhora bien, enseguida aparece la pregunta del millón: ¿cómo conseguimos ese efecto con LaTeX? La respuesta viene de la mano del paquete slashbox, cuyo uso es realmente sencillo. Veamos un ejemplo de aplicación:\n\\documentclass{article} \\usepackage[utf8]{inputenc} \\usepackage[english, spanish]{babel} \\usepackage{slashbox} \\begin{document} \\begin{tabular}{|l|c|c|c|} \\hline \\backslashbox{Enfermedad}{Factor de riesgo} \u0026amp; SÍ $\\equiv FR$ \u0026amp; NO $\\equiv \\overline{FR}$ \u0026amp; Totales\\\\ \\hline SÍ $\\equiv E$ \u0026amp; $O_{11}$ \u0026amp; $O_{12}$ \u0026amp; $F_1$ \\\\ NO $\\equiv \\overline{E}$ \u0026amp; $O_{21}$ \u0026amp; $O_{22}$ \u0026amp; $F_2$ \\\\ \\hline Totales \u0026amp; $C_1$ \u0026amp; $C_2$ \u0026amp; $T$ \\\\ \\hline \\end{tabular} \\end{document} Podemos apreciar el resultado en la siguiente imagen:\nTabla de contingencia en LaTeX. Referencias:\nLaTeX table cell with a diagonal line and 2 sub cells [duplicate]. Diagonally divided table cell [duplicate]. ","date":1532059179,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1532059179,"objectID":"343987b30bf60f7fd759bd8ea1e70cec","permalink":"https://imalexissaez.github.io/2018/07/20/como-dividir-diagonalmente-una-celda-de-una-tabla-con-latex/","publishdate":"2018-07-20T05:59:39+02:00","relpermalink":"/2018/07/20/como-dividir-diagonalmente-una-celda-de-una-tabla-con-latex/","section":"post","summary":"Es habitual en estadística que trabajemos con tablas de contingencia, que se caracterizan por tener la celda que ocupa la esquina superior izquierda dividida diagonalmente.","tags":["LaTeX"],"title":"¿Cómo dividir diagonalmente una celda de una tabla con LaTeX?","type":"post"},{"authors":["Alexis Sáez"],"categories":["Oposiciones"],"content":"¿Qué es un contenido? ¿Y un criterio de evaluación? ¿Cómo se define un estándar de aprendizaje evaluable? La legislación nos da una respuesta rigurosa a cada una de las anteriores cuestiones.\nEl Real Decreto 1105 / 2014, de 26 de diciembre, por el que se establece el currículo básico de la Educación Secundaria Obligatoria y del Bachillerato, en su Artículo 2, nos ofrece la siguiente serie de definiciones:\nCurrículo: regulación de los elementos que determinan los procesos de enseñanza y aprendizaje para cada una de las enseñanzas y etapas educativas. Objetivos: referentes relativos a los logros que el estudiante debe alcanzar al finalizar cada etapa, como resultado de las experiencias de enseñanza-aprendizaje intencionalmente planificadas a tal fin. Competencias: capacidades para aplicar de forma integrada los contenidos propios de cada enseñanza y etapa educativa, con el fin de lograr la realización adecuada de actividades y la resolución eficaz de problemas complejos. Contenidos: conjunto de conocimientos, habilidades, destrezas y actitudes que contribuyen al logro de los objetivos de cada enseñanza y etapa educativa y a la adquisición de competencias. Los contenidos se ordenan en asignaturas, que se clasifican en materias y ámbitos, en función de las etapas educativas o los programas en que participe el alumnado. Estándares de aprendizaje evaluables: especificaciones de los criterios de evaluación que permiten definir los resultados de aprendizaje, y que concretan lo que el estudiante debe saber, comprender y saber hacer en cada asignatura; deben ser observables, medibles y evaluables y permitir graduar el rendimiento o logro alcanzado. Su diseño debe contribuir y facilitar el diseño de pruebas estandarizadas y comparables. Criterios de evaluación: son el referente específico para evaluar el aprendizaje del alumnado. Describen aquello que se quiere valorar y que el alumnado debe lograr, tanto en conocimientos como en competencias; responden a lo que se pretende conseguir en cada asignatura. Metodología didáctica: conjunto de estrategias, procedimientos y acciones organizadas y planificadas por el profesorado, de manera consciente y reflexiva, con la finalidad de posibilitar el aprendizaje del alumnado y el logro de los objetivos planteados. Nota: este artículo podríamos decir que ha quedado “parcialmente derogado” con la nueva ley educativa, pues algunos elementos han desaparecido por completo y en otros se han introducido nuevos matices en sus definiciones.\n","date":1531886379,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1531886379,"objectID":"af8f9d9737d6b756ebe322f16dabe0f1","permalink":"https://imalexissaez.github.io/2018/07/18/algunas-definiciones-basicas-contenidos-criterios-de-evaluacion-etc/","publishdate":"2018-07-18T05:59:39+02:00","relpermalink":"/2018/07/18/algunas-definiciones-basicas-contenidos-criterios-de-evaluacion-etc/","section":"post","summary":"¿Qué es un contenido? ¿Y un criterio de evaluación? ¿Cómo se define un estándar de aprendizaje evaluable? La legislación nos da una respuesta rigurosa a cada una de las anteriores cuestiones.","tags":["Legislación","Programación didáctica"],"title":"Algunas definiciones básicas: contenidos, criterios de evaluación, etc.","type":"post"},{"authors":["Alexis Sáez"],"categories":["Tutoriales"],"content":"En la anterior entrada generamos, ¡solucionando incluso un pequeño bug!, nuestro primer sitio web con Hugo, utilizando para ello el tema Ananke. Veamos qué opciones de configuración nos ofrece dicho tema a continuación.\nAsí pues, dedicaremos única y exclusivamente este cuarto artículo catalogado bajo la etiqueta Metablog a examinar con detalle el contenido del archivo config.toml, que se ubica en la raíz del directorio donde hayamos decidido almacenar nuestro sitio web.\nSi en su momento nos decantamos por seguir, al pie de la letra, el contenido de la anterior entrada, dicho fichero debería figurar en el interior de la ruta C:\\Hugo\\Sites\\prueba. Desde el explorador de archivos de Windows, lo seleccionamos con el botón derecho del ratón y escogemos la opción Open with Sublime Text.\nParte de su contenido nos resultará familiar a estas alturas, pues ya tuvimos que editar el mencionado archivo para solventar el bug que nos impedía tener acceso local al sitio web. Empecemos examinando el primer bloque de código, aquel que comprende las siguientes cinco líneas:\ntitle = \u0026#34;Notre-Dame de Paris\u0026#34; baseURL = \u0026#34;https://example.com\u0026#34; languageCode = \u0026#34;en-us\u0026#34; theme = \u0026#34;gohugo-theme-ananke\u0026#34; # themesDir = \u0026#34;../..\u0026#34; Estamos ante una serie de pares variable = valor, en donde hemos de personalizar las cadenas de texto para que se ajusten a las opciones que deseamos de cara a nuestro sitio web.\nEn el primero de ellos, la variable title, como bien señala de manera descriptiva su nombre, nos permite indicar el título de la página web. En mi caso, me gustaría que fuese Infinitos Contrastes, por lo que no tengo más que modificar esa primera línea y teclear title = \u0026#34;Infinitos Contrastes\u0026#34;.\nAhora, a baseURL hemos de asignarle el enlace que utilizaremos para acceder a nuestro sitio web a través del navegador web. Dado que la idea es que alojemos la página web en GitHub, dicha dirección será del estilo https://\u0026lt;NOMBRE_DE_TU_CUENTA\u0026gt;.github.io. Para ilustrar esto último de manera más concreta, el nombre de mi cuenta en GitHub es ImAlexisSaez, por lo que el enlace que permitirá el acceso remoto a la página web será https://imalexissaez.github.io/, valor que asignaré a la variable baseURL en su correspondiente línea.\nA continuación, en languageCode reside el código del lenguaje en el que se generará nuestro sitio web, que, por defecto, es inglés estadounidense (en-us). Si vamos a generar contenido un idioma diferente, conviene que modifiquemos el valor de dicha línea. Para el español, el código asociado es es.\nAunque a primera vista no parezca un detalle relevante, es importante asignar el código adecuado a languageCode, puesto que algunos temas de Hugo incorporan la posibilidad de localización a diferentes lenguajes y la clave pasa, precisamente, por el valor indicado para dicha variable. Para muestra, un botón: el tema actual de este sitio web, Beautiful Hugo, es uno de esos ejemplos y en un futuro veremos cómo lidiar con el asunto de la localización en Hugo.\nLa siguiente línea, theme = \u0026#34;gohugo-theme-ananke\u0026#34;, le indica a Hugo en qué ruta ha de buscar para acceder a los archivos correspondientes al tema de la web. Es posible que en la anterior entrada no nos diésemos cuenta, pero cuando instalamos el tema Ananke automáticamente se generó una carpeta en nuestro disco duro llamada gohugo-theme-ananke, en el interior del directorio themes. La variable theme simplemente apunta a esa ruta, de manera que si, por el extraño motivo que sea, nos vemos en la necesidad de modificar el nombre de la mencionada carpeta, también deberíamos cambiar el valor de esta línea en el archivo config.toml.\nPor lo que respecta a la última línea de este bloque de código, para solventar el bug que nos impedía revisar localmente el sitio web, usamos el símbolo de comentario (#) para anularla. De esta forma, directamente podemos suprimirla, quedando definitivamente:\n# # Configuración básica del sitio web # title = \u0026#34;Infinitos Contrastes\u0026#34; # Título baseURL = \u0026#34;https://imalexissaez.github.io/\u0026#34; # Enlace de entrada languageCode = \u0026#34;es\u0026#34; # Idioma theme = \u0026#34;gohugo-theme-ananke\u0026#34; # Ruta al tema Recomiendo encarecidamente ir comentando el código fuente, para que en futuras revisiones sea más fácil encontrar aquello que andemos buscando. En cuanto a que todo quede alineado por el símbolo =, es simplemente una manía mía, no es necesario en absoluto.\nPasemos ahora al siguiente bloque de código, el dado por\nMetaDataFormat = \u0026#34;yaml\u0026#34; DefaultContentLanguage = \u0026#34;en\u0026#34; SectionPagesMenu = \u0026#34;main\u0026#34; Paginate = 3 # this is set low for demonstrating with dummy content. Set to a higher number googleAnalytics = \u0026#34;\u0026#34; enableRobotsTXT = true En mi caso, ha quedado como sigue:\n# # Configuración adicional del sitio web # MetaDataFormat = \u0026#34;yaml\u0026#34; # Formato cabeceras DefaultContentLanguage = \u0026#34;es\u0026#34; # Idioma por defecto del contenido SectionPagesMenu = \u0026#34;main\u0026#34; # Paginate = 3 # Posts por página en main googleAnalytics = \u0026#34;\u0026#34; # Código para estadísticas web enableRobotsTXT = true # Buscadores ya que:\nEn MetaDataFormat tenemos que …","date":1531799979,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1531799979,"objectID":"cd0fa0263940f0124f92ab10e3de365c","permalink":"https://imalexissaez.github.io/2018/07/17/configurando-el-tema-ananke/","publishdate":"2018-07-17T05:59:39+02:00","relpermalink":"/2018/07/17/configurando-el-tema-ananke/","section":"post","summary":"Lección 4: analicemos cómo configurar algunos de los parámetros básicos del tema Ananke para personalizar el sitio web.","tags":["Ananke","Hugo","Metablog"],"title":"Configurando el tema Ananke","type":"post"},{"authors":["Alexis Sáez"],"categories":["Recursos"],"content":"A estas alturas, estimo que nadie pondrá en duda que la plataforma audiovisual YouTube es una colosal mina de recursos de aprendizaje, con auténticos diamantes por descubrir y al alcance de cualquier estudiante.\nComo iré publicando los artículos catalogados bajo la etiqueta Metablog a un ritmo pausado, que seguramente no convenza a quien descubra la serie de entradas en este instante, me he animado a compartir un excelente recurso que he encontrado en YouTube.\nSe trata de una lista de reproducción, compuesta por la nada desdeñable cifra de 23 vídeos, que viene de la mano de Giraffe Academy. Me gustaría destacar que, además de este curso de Hugo, ponen a nuestra disposición toda una serie de tutoriales sobre bases de datos, distintos lenguajes de programación, desarrollo web y generadores de páginas web estáticas. Es más que recomendable que le echemos un vistazo a su sección Courses.\nVolviendo al recurso concreto que nos ocupa en esta entrada, la lista de reproducción parte de una breve introducción teórica a los generadores de páginas web estáticas, para centrarse enseguida en las principales características de Hugo. A continuación, detalla su instalación en distintos sistemas operativos y pasa a generar acto seguido un sitio web, que servirá de base para explicar distintos conceptos, de una forma muy práctica, a lo largo del resto de la serie de vídeos.\nLa mencionada lista de reproducción la podemos encontrar en este enlace, siendo su índice:\nIntroduction to Hugo Installing Hugo on Windows Installing Hugo on Mac Creating a New Site Installing \u0026amp; Using Themes Creating \u0026amp; Organizing Content Front Matter Archetypes Shortcodes Taxonomies Template Basics List Page Templates Single Page Templates Home Page Templates Section Templates Base Templates \u0026amp; Blocks Variables Functions If Statements Data Files Partial Templates Shortcode Templates Building Your Site Para muestra, un botón:\n","date":1531627179,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1531627179,"objectID":"155343af2a1803a83470c1d28b856959","permalink":"https://imalexissaez.github.io/2018/07/15/curso-de-hugo-en-youtube/","publishdate":"2018-07-15T05:59:39+02:00","relpermalink":"/2018/07/15/curso-de-hugo-en-youtube/","section":"post","summary":"Presentación de la lista de reproducción, compuesta por la nada desdeñable cifra de 23 vídeos, que viene de la mano de Giraffe Academy.","tags":["Hugo"],"title":"Curso de Hugo en YouTube","type":"post"},{"authors":["Alexis Sáez"],"categories":["Oposiciones"],"content":"En esta entrada, echaremos un vistazo al artículo “Guía para la elaboración de una programación didáctica en las etapas de Educación Primaria y Secundaria”, que viene de la mano de Ignacio Polo y Gemma Puertas.\nEmpecemos ofreciendo la referencia completa del mencionado artículo, para el que me gustaría destacar que su acceso es libre, hecho que siempre agradezco y opino que debería ser la norma que seguir en cuanto a investigación respecta:\nPolo Martínez, I., \u0026amp; Puertas Bescós, G. (2017). Guía para la elaboración de una programación didáctica en las etapas de Educación Primaria y Secundaria. Avances en Supervisión Educativa, (27). https://doi.org/10.23824/ase.v0i27.593 El texto posee un objetivo, cuanto menos, ambicioso, tal y como nos deja entrever en el siguiente párrafo:\nEl objetivo esencial de este artículo es facilitar la elaboración de programaciones didácticas (ateniendo al marco normativo vigente en Educación Primaria y Educación Secundaria Obligatoria), reales (en cuanto a su reflejo con la docencia que se está practicando en las aulas), contextualizadas (al grupo de alumnado, nivel educativo y materia curricular del presente curso escolar), eficientes (en equilibrio entre la cantidad de información que aportamos y la calidad de la misma), actualizadas (en función de las posibles variaciones que se produzcan en el grupo clase a lo largo del curso) y evaluables (desde un planteamiento procesual dirigido al análisis de los logros que se van alcanzando tras el proceso de planificación inicial).\nA la hora de elaborar una programación didáctica (PD), de cara a unas futuras oposiciones, tener a nuestra disposición un documento que recopila errores frecuentes y, además, aconseja cómo solventarlos, es poco menos que un tesoro.\nSin pretender llevar a cabo un resumen del artículo en las siguientes líneas, sí que me gustaría compartir algunas ideas que me han resultado interesantes, sobre todo por lo que respecta a la elaboración de programaciones didácticas para las etapas de Secundaria y de Bachillerato:\nNuestra PD ha de partir del posicionamiento planteado en el Poyecto Curricular de Etapa (PCE) del centro, que es elaborado y revisado por la Comisión de Coordinación Pedagógica y en él se establecen directrices y propuestas globales de intervención educativa que facilitan la aplicación del currículo a la realidad educativa y específica de cada centro. Hemos de evitar concretar objetivos para un nivel o curso, pues la concreción de estos viene dada por los criterios de evaluación (CE) y los estándares de aprendizaje evaluables (EAE) de cada nivel. No debemos crear o modificar CE ni EAE, aunque sí concretar estos últimos cuando la Administración no lo haya hecho. Por otro lado, ambos precisan la creación de instrumentos de evaluación. Es un error que vinculemos la calificación del alumnado a los propios instrumentos de evaluación, sin considerar la evaluación continua de los referentes de evaluación (CE y EAE). Debemos tener cuidado a la hora de asignar calificación a aspectos que no están recogidos en los referentes de evaluación. El ejemplo más claro que a todos nos vendría a la cabeza sería el clásico ‘‘Comportamiento: 10%’’. En la ponderación de la materia hemos de incluir todos los EAE, evitando dejar caer la mayoría del peso únicamente en unos pocos. No estaría de más considerar unos EAE imprescindibles (al menos uno por cada CE) en la ponderación que establezcamos, de forma que su adquisición suponga alcanzar la calificación de suficiente. Al hilo del punto anterior, hemos de tener cuidado a la hora de vincular algún EAE imprescindible a un solo instrumento y en un único momento del curso, pues nos plantearía problemas a la hora de plantear mecanismos de recuperación para el alumnado que no superase dicha situación. La información del curso anterior y los resultados de la sesión de evaluación inicial (que deberíamos realizar sin que esta posea efectos sobre la calificación del alumnado) han de tener un adecuado reflejo en nuestra PD. A la hora de señalar medidas de atención a la diversidad es importante que llevemos a cabo concreciones para el grupo de referencia. En la medida de lo posible, debemos evitar redactar un apartado excesivamente teórico y fuera de contexto. A la hora de decidir la metodología hemos de tener en cuenta las características del grupo, así como indicar explícitamente en qué unidad didáctica (UD) se aplicarán determinados principios metodológicos, sin olvidar listar los recursos didácticos necesarios. Debemos analizar los elementos transversales planteados en el PCE e identificar claramente en nuestra PD durante qué UD los desarrollaremos. Hemos de incluir actividades complementarias y extraescolares en nuestra PD, indicando qué actividades ordinarias complementan y, a ser posible, cuyo diseño sea interdisciplinar. Por otro lado, no olvidemos que son de carácter voluntario y, por tanto, no pueden tener efecto alguno sobre la calificación del alumnado. Es necesario que evaluemos …","date":1531540779,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1531540779,"objectID":"6102b8ddfbfe9830ee6e5c75261e93b0","permalink":"https://imalexissaez.github.io/2018/07/14/errores-frecuentes-a-la-hora-de-elaborar-programaciones-didacticas/","publishdate":"2018-07-14T05:59:39+02:00","relpermalink":"/2018/07/14/errores-frecuentes-a-la-hora-de-elaborar-programaciones-didacticas/","section":"post","summary":"Breve análisis del artículo 'Guía para la elaboración de una programación didáctica en las etapas de Educación Primaria y Secundaria'.","tags":["Legislación","Programación didáctica"],"title":"Errores frecuentes a la hora de elaborar programaciones didácticas","type":"post"},{"authors":["Alexis Sáez"],"categories":["Tutoriales"],"content":"¡Ha llegado el momento que todos estábamos esperando! Tras un par de artículos en los que hemos preparado nuestros equipos instalando las herramientas necesarias, hoy veremos cómo generar nuestro primer sitio web con Hugo.\nEsta tercera entrada, catalogada bajo la etiqueta Metablog, se va a apoyar en la guía de inicio recogida en la documentación oficial de Hugo, a la que podemos acceder a través de este enlace.\nEn primer lugar, abrimos la terminal Git Bash y nos dirigimos al directorio de nuestro disco duro donde tengamos pensado almacenar localmente el sitio web. En la mencionada guía recomiendan ubicar las páginas en la ruta C:\\Hugo\\Sites\\, aunque ya comenté en la anterior entrada que no era estrictamente necesario proceder de tal forma.\nDicho esto, en este artículo seguiremos al dedillo las indicaciones dadas en la guía, de manera que en la terminal tecleamos:\ncd c:/Hugo/Sites/ El comando para generar un nuevo sitio web es hugo new site [path] [flags], donde sustituiremos [path] por la ruta al directorio donde almacenaremos nuestra página web. Por lo que respecta a las [flags], en el apartado de la documentación oficial dedicado a hugo new site tenemos el listado de las disponibles. No obstante, para una primera toma de contacto, no añadiremos ninguna de ellas.\nAsí pues, generemos un primer sitio de prueba y, en un alarde de extrema originalidad, ubiquémoslo en el directorio \\prueba\\. Para ello, escribimos en la terminal:\nhugo new site prueba Recibimos entonces un mensaje de felicitación (en caso contrario, convendría que revisáramos la instalación de Hugo siguiendo las indicaciones de esta entrada) y algunas instrucciones relacionadas con el uso de temas, la creación de contenidos y el acceso local al sitio web.\nHugo ha creado el directorio \\prueba\\ en el interior de la ruta donde hemos ejecutado el comando hugo new site. Además, ha poblado el mismo con algunas carpetas (vacías en su mayor parte), quedando una estructura como la que figura en la siguiente imagen:\nEstructura del sitio web. En un futuro exploraremos con detalle el cometido de algunos de esos directorios que aparecen en la imagen (\\content\\ y \\layouts\\ son de extrema importancia, así como ese curioso archivo denominado config.toml). No obstante, por el momento, evitemos distraernos en exceso y sigamos las indicaciones de la guía.\nVolvemos a la terminal, nos movemos hacia el directorio \\prueba\\ e iniciamos un repositorio Git, acciones que requieren teclear los dos siguientes comandos:\ncd prueba git init En el siguiente paso de la guía nos invitan a instalar un tema para la web, Ananke, utilizando submodule (un comando de Git). No obstante, en este momento, me voy a desviar de las indicaciones dadas y optar por un método diferente de instalación de temas. A continuación, nos moveremos a la carpeta \\themes\\ y clonaremos en nuestro disco duro el propio repositorio del tema. Para ello, escribimos en la terminal:\ncd themes git clone https://github.com/budparr/gohugo-theme-ananke.git De esta manera, tenemos acceso localmente a un sitio web de prueba, con un poco de contenido ya generado, que nos permitirá hacernos una idea del aspecto final de nuestro sitio web utilizando el tema Ananke. Aunque soy consciente de que me estoy desviando ‘’ligeramente’’ de la guía oficial, vamos a tomar esta senda para ver cómo luce nuestro sitio web.\nAbrimos el explorador de archivos de Windows y en el directorio donde hemos ubicado la página web (C:\\Hugo\\Sites\\prueba\\) accedemos a la carpeta themes. Una vez dentro de ella, hacemos doble clic sobre el directorio gohugo-theme-ananke y repetimos luego la acción con la carpeta denomiada exampleSite, cuyos contenidos son:\nContenido de la carpeta del sitio web de ejemplo. Copiamos tanto las dos carpetas, como el archivo config.toml, y pegamos todo en el directorio C:\\Hugo\\Sites\\prueba\\, reemplazando los ficheros existentes con el mismo nombre que en él se encuentran.\nAhora volvemos a la terminal, que todavía está apuntando a la carpeta \\themes\\ y tecleamos\ncd .. para volver al directorio raíz de nuestro sitio web. A continuación, para revisar el sitio web localmente escribimos\nhugo server y, para mi sorpresa, recibimos el siguiente mensaje de error Error: Unable to find theme Directory: C:\\Hugo\\gohugo-theme-ananke, hecho que debe ser el karma haciendo acto de presencia por haberme desviado de las indicaciones de la guía oficial.\nAunque no quería meterme en este artículo en el contenido del archivo config.toml, para evitar ofrecer mucha información de golpe, solucionemos rápidamente este pequeño bug para así poder revisar localmente el sitio web.\nHacemos clic derecho sobre el mencionado fichero y lo abrimos con Sublime Text. Modificamos la quinta línea que aparece, de\nthemesDir = \u0026#34;../..\u0026#34; a\n# themesDir = \u0026#34;../..\u0026#34; y guardamos los cambios.\nVolvemos ahora a la terminal y tecleamos de nuevo\nhugo server Tras recibir cierta información sobre el sitio, únicamente nos resta abrir nuestro navegador web favorito y en la barra de …","date":1531281579,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1531281579,"objectID":"2597b4382f756ec40f1e618c75037208","permalink":"https://imalexissaez.github.io/2018/07/11/creando-un-sitio-web-con-hugo/","publishdate":"2018-07-11T05:59:39+02:00","relpermalink":"/2018/07/11/creando-un-sitio-web-con-hugo/","section":"post","summary":"Lección 3: damos a luz un sitio web de prueba y lo revisamos localmente.","tags":["Ananke","Hugo","Metablog"],"title":"Creando un sitio web con Hugo","type":"post"},{"authors":["Alexis Sáez"],"categories":["Tutoriales"],"content":"En una entrada publicada hace unos días, comenté que utilizo el editor de texto plano Sublime Text 3 como herramienta predeterminada para escribir documentos con Markdown. Veamos cómo configurarlo para abordar tal empresa.\nSinceramente, tal y como por defecto instalamos el mencionado programa, podríamos trabajar sin problema alguno con este lenguaje de marcado ligero, ya que únicamente requiere un editor de texto plano para su elaboración y posteriores modificaciones.\nNo obstante, existe un paquete que mejora la experiencia de edición de manera considerable: Markdown Editing. Al abrir cualquier fichero redactado utilizando el mencionado lenguaje de marcado, su contenido se centra en pantalla, facilitando así enormemente su lectura. Además, elementos como títulos, cursivas, negritas, enlaces o código quedan resaltados de forma muy agradable.\nPara muestra, un botón:\nSublime Text 3 y Markdown Editing juntos. Si a todo ello le añadimos el modo sin distracciones que incorpora Sublime Text 3, al que se accede mediante la combinación de teclas Shift + F11, el resultado es una cómoda herramienta que permite generar documentos con Markdown eficientemente.\nEl procedimiento a seguir es el habitual a la hora de incorporar un nuevo paquete a Sublime Text 3:\nSi todavía no tenemos el complemento que permite instalar paquetes fácilmente, abrimos este enlace y copiamos el bloque de instrucciones que figura en el cuadro asociado a la versión de Sublime Text que utilicemos (a día de hoy, seguramente, será la 3). Abrimos la consola de Sublime Text 3, haciendo clic en el apartado Show Console del menú View (o utilizando su atajo de teclado asociado). En la ventana que aparece dentro del editor, pegamos el texto copiado durante el primer paso y pulsamos enter. Hacemos uso ahora del atajo de teclado Ctrl + Shift + P y empezamos a escribir install, hasta que quede resaltada la opción Package Control: Install Package y después pulsamos enter. A continuación, comenzamos a escribir markdown y utilizamos los cursores para seleccionar el paquete MarkdownEditing, pulsando de nuevo enter una vez lo hayamos conseguido. De esta forma, basta ahora con que abramos en Sublime Text 3 cualquier archivo escrito con Markdown y experimentaremos los cambios estéticos que comentaba al principio de este artículo.\nPersonalmente, el esquema de colores que este paquete incorpora por defecto no me hace excesiva ilusión, acostumbrado como estoy a Monokai. Sin embargo, podemos seleccionar un tema oscuro desde el menú Preferences, apartado Package Settings, subapartado Markdown Editing, accediendo a Change color scheme... y escogiendo la opción Dark.\nFinalmente, por si fuera de interés, me gustaría destacar que también existen diversos paquetes que ofrecen la opción de previsualizar el documento que estamos redactando y refrescar el resultado cuando llevamos a cabo cualquier tipo de edición en él. No he entrado en detalles sobre ellos en este artículo simplemente porque utilizo un método diferente para llevar a cabo las mencionadas acciones.\n","date":1531195179,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1531195179,"objectID":"6c7321b74f34c40e9810cb93365831d5","permalink":"https://imalexissaez.github.io/2018/07/10/configurando-sublime-text-para-escribir-en-markdown/","publishdate":"2018-07-10T05:59:39+02:00","relpermalink":"/2018/07/10/configurando-sublime-text-para-escribir-en-markdown/","section":"post","summary":"Analicemos cómo configurar un interesante complemento de Sublime Text 3 para trabajar con Markdown.","tags":["Markdown","Sublime Text 3"],"title":"Configurando Sublime Text para escribir en Markdown","type":"post"},{"authors":["Alexis Sáez"],"categories":["Oposiciones"],"content":"Echemos un vistazo en este artículo a la Ley 4 / 2018, de 21 de febrero, de la Generalitat, por la que se regula y promueve el plurilingüismo en el sistema educativo valenciano. Nos centraremos en la acreditación, capacitación y formación del profesorado.\nLa mencionada ley, disponible para su consulta en este enlace, fue publicada en el DOCV número 8240, de 22 de febrero de 2018, y en el BOE número 63, de 13 de marzo de 2018, estando vigente desde el 23 de Febrero de 2018.\nMe gustaría rescatar un dato que figura en el Preámbulo:\nlos datos demolingüísticos y el conocimiento de la realidad sociolingüística de la Comunitat Valenciana, finalidad de las investigaciones sociológicas realizadas desde 1984 hasta la actualidad, nos confirman que solo alrededor de un 30% es plenamente competente en valenciano y solo un 6% lo es en inglés.\nEsta situación conlleva, como no podía ser de otra manera, a la que podríamos calificar como justificación de la mencionada ley:\nSe convierte, por tanto, en un deber social y educativo la necesidad de corregir los desequilibrios de competencia y uso del valenciano en el conjunto de la población actual, así como la falta de dominio efectivo del inglés como lengua de comunicación internacional.\nEl Artículo 6 nos determina los tiempos mínimos destinados a los contenidos curriculares en cada una de las lenguas oficiales (al menos un 25% de las horas lectivas), así como en lengua extranjera (oscilando entre un 15% y un 25% de las horas lectivas). No obstante, me gustaría destacar que en el Artículo 11 figura que se promoverá que los centros educativos sostenidos con fondos públicos vehiculen el 50% del tiempo curricular en valenciano y el 25% de dicho tiempo en inglés.\nEl Capítulo V recoge La acreditación, capacitación y formación del profesorado, cuyo Artículo 25 dice:\nArtículo 25. Acreditación del conocimiento de lenguas: requisitos específicos del profesorado para los puestos docentes\nSe considerará que dispone de la competencia suficiente para vehicular áreas no lingüísticas en castellano y en valenciano el profesorado que acredite nivel de conocimiento C1 de valenciano y C1 de castellano, respectivamente, de acuerdo con el Marco europeo común de referencia para las lenguas.\nSin perjuicio de lo establecido en la disposición transitoria segunda de esta ley, se considerará que dispone de la competencia suficiente para vehicular áreas en inglés el profesorado que acredite el nivel de conocimiento C1 de inglés, de acuerdo con el Marco europeo común de referencia para las lenguas.\nEncontramos el calendario de implantación en la primera disposición transitoria, siendo:\nCurso 2018-2019. Educación infantil y primer ciclo de educación primaria. Curso 2019-2020. Segundo y tercer ciclo de educación primaria y centros de educación especial. Curso 2020-2021. Educación secundaria obligatoria, bachillerato, formación profesional y formación de personas adultas. Finalmente, la segunda disposición transitoria dice:\nSegunda. Acreditación transitoria de la competencia lingüística en inglés\nCon carácter transitorio y hasta el curso académico 2026-2027, se considerará que dispone de la competencia suficiente para vehicular áreas en inglés el profesorado que acredite el nivel de conocimiento B2 de inglés, de acuerdo con el Marco europeo común de referencia para las lenguas.\n","date":1531108779,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1531108779,"objectID":"3b47ea1d1120019c4269c62dcf60fc36","permalink":"https://imalexissaez.github.io/2018/07/09/ley-4-2018-sobre-el-plurilinguismo-en-el-sistema-educativo-valenciano/","publishdate":"2018-07-09T05:59:39+02:00","relpermalink":"/2018/07/09/ley-4-2018-sobre-el-plurilinguismo-en-el-sistema-educativo-valenciano/","section":"post","summary":"Breve análisis de una ley que pretende normalizar el uso del valenciano y potenciar el del inglés.","tags":["Legislación","Plurilingüismo"],"title":"Ley 4 / 2018, sobre el plurilingüismo en el sistema educativo valenciano","type":"post"},{"authors":["Alexis Sáez"],"categories":["Tutoriales"],"content":"Llevar a cabo la instalación de Hugo en Windows es extremadamente fácil, hecho que nos permite empezar a experimentar con esta tecnología en apenas unos minutos. Veamos, sin más dilación, todo el proceso en detalle.\nAsí pues, en este segundo artículo catalogado bajo la etiqueta Metablog, retomaremos la senda en el lugar que nos quedamos al finalizar la primera entrada. Recuerdo que, en ella, instalamos un par de útiles herramientas en nuestro equipo (git y Sublime Text 3) y nos creamos una cuenta en el portal GitHub, que será donde alojemos tanto el código fuente de nuestros futuros sitios web, como los propios sitios web en sí.\nEn la documentación oficial de Hugo, existe una extensa página dedicada a su instalación, con una sección que orienta específicamente a los usuarios de Windows y a la que podemos acceder directamente a través de este enlace.\nLos desarrolladores han intentado que la experiencia de instalación sea muy intuitiva, pero, en mi opinión, alguna de las indicaciones puede no ser coherente con la estructura de archivos y carpetas que hayamos decidido implementar en nuestros equipos. ¿A qué se debe esta afirmación? Por ejemplo:\nHugo no deja de ser simplemente un programa, por lo que en lugar de instalarlo donde indica la guía, quizá sería mejor opción ubicarlo en la carpeta Archivos de programa. Nos señalan, en la menciona guía, un directorio muy específico donde almacenar nuestros sitios web. No obstante, aunque vayamos a utilizar la pareja git + GitHub, es posible que nos interese, además, utilizar un servicio de alojamiento de archivos y, por tanto, ubicar las páginas en otra ruta diferente. Simplemente lo comento para que quede claro que las instrucciones que, a continuación, compartiré admiten cierta flexibilidad a la hora de llevarlas a cabo. Dicho esto, sin más preámbulos, veamos cómo instalar Hugo en Windows.\nEn primer lugar, bien desde la terminal, bien desde el explorador de archivos de Windows, creamos en el directorio raíz de nuestro disco duro (generalmente C:\\) una carpeta denominada Hugo. En su interior engendramos otras dos carpetas: bin, donde almacenaremos la aplicación, y Sites, donde ubicaremos nuestros futuros sitios web. Al final, debemos tener disponibles las siguientes dos rutas:\nC:\\Hugo\\bin\\, y C:\\Hugo\\Sites\\. Para ir acostumbrándonos al uso de la terminal Git Bash, todo el anterior proceso lo podíamos haber conseguido escribiendo en ella la siguiente serie de comandos:\ncd c: mkdir Hugo cd Hugo mkdir bin Sites A continuación, abrimos la página de descarga de Hugo siguiendo este enlace. A la hora de escribir estas líneas, la versión más reciente es la etiquetada como v0.42.2. Ahora, desplazamos con cuidado hacia abajo el extenso listado de ficheros, hasta dar con el adecuado para nuestro sistema operativo (en mi caso es hugo_0.42.2_Windows-64bit.zip). Hacemos clic sobre él e inmediatamente comenzará la descarga a nuestro disco duro de un archivo comprimido.\nActo seguido, descomprimimos el contenido de dicho archivo en la ruta C:\\Hugo\\bin\\ (o donde hayamos decidido que sería un buen sitio para almacenar la aplicación) y borramos el fichero que hemos descargado, pues no vamos a necesitarlo en un futuro próximo.\nDe esta manera, si desde la terminal nos desplazamos hasta la anterior ruta y escribimos hugo version, recibiremos el siguiente mensaje Hugo Static Site Generator v0.42.2 windows/amd64 BuildDate: 2018-06-28T12:36:53Z, que indica que hemos llevado a cabo la instalación con éxito.\nNo obstante, rápidamente vamos a encontrar un pequeño inconveniente a la hora de empezar a experimentar con Hugo. Si escribimos hugo version en cualquier otra ruta distinta a la indicada arriba, recibiremos en la terminal un mensaje de error como este: bash: hugo: command not found. Dado que nuestra intención es poder utilizar la aplicación en cualquier ruta de nuestro disco duro, tenemos que añadir la ubicación de Hugo al PATH de Windows.\nCada versión de Windows tiene una manera más o menos distinta y, en ocasiones, ciertamente enrevesada, de editar el PATH. Para ello, en Windows 10, comenzamos pulsando el botón de inicio y seleccionamos Configuración, accediendo así a la siguiente ventana:\nConfiguración de Windows. En el cuadro de búsqueda escribimos “configuración avanzada” y seleccionamos la opción Ver la configuración avanzada del sistema, tal y como figura en la siguiente imagen:\nIlustración del cuadro de búsqueda. Apareciendo así esta ventana:\nVentana de configuración avanzada del sistema. Hacemos clic en el botón Variables de entorno…, surgiendo entonces una nueva ventana. En ella seleccionamos la fila del primer cuadro denominada Path y pulsamos el botón Editar…, que aparece justo debajo de dicho cuadro.\nVentana de variables de entorno. Surge, cual capricho de un diabólico destino que parece que quiere poner nuestro temple a prueba, otra nueva ventana (ya por fin la última), donde tenemos que hacer clic sobre el botón Nuevo y escribir C:\\Hugo\\bin\\. Finalmente, solo nos resta ir …","date":1531022379,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1531022379,"objectID":"fbe580235af3d8c9e720df3a82555f59","permalink":"https://imalexissaez.github.io/2018/07/08/instalando-hugo-en-windows/","publishdate":"2018-07-08T05:59:39+02:00","relpermalink":"/2018/07/08/instalando-hugo-en-windows/","section":"post","summary":"Lección 2: cómo instalar Hugo en Windows sin morir en el intento.","tags":["Hugo","Metablog","Windows"],"title":"Instalando Hugo en Windows","type":"post"},{"authors":["Alexis Sáez"],"categories":["Tutoriales"],"content":"Si nos decidimos a utilizar este editor de texto plano para escribir en español, ¿tenemos entonces que prescindir sin remedio del uso del corrector ortográfico? ¡En absoluto! Veamos cómo configurar esta característica fácilmente.\nEn la instalación por defecto de Sublime Text 3, el mencionado corrector ortográfico únicamente tiene a su disposición dos listados de palabras, asociados estos a los idiomas:\ninglés británico, e inglés estadounidense (o ‘‘americano’’). Comúnmente conocidos también como diccionarios (aunque no se incluyan los significados para las palabras contenidas en este tipo de listados nombrado), podemos seleccionar cualquiera de ellos a través del menú View, dentro del apartado Dictionary, y luego activar el modo de corrección ortográfica sin más que pulsar la tecla F6.\nEn apenas unos minutos podemos ampliar el número de listado de palabras siguiendo esta serie de pasos:\nDesde nuestro navegador habitual, acudimos a este repositorio de GitHub, donde encontraremos un extenso listado de diccionarios disponibles. Cada idioma tiene tres archivos asociados, con las extensiones .aff, .dic y .txt. Por ejemplo, si nos interesa que el corrector ortográfico de Sublime Text 3 sea capaz de utilizar un listado de palabras en español, los correspondientes ficheros que hemos de descargar serán: Spanish.aff, Spanish.dic y Spanish.txt. Si no vamos a clonar el repositorio a nuestro equipo y pretendemos bajar directamente los archivos desde GitHub, debemos tener cierto cuidado a la hora de hacerlo. No hay que utilizar la cásica estrategia de clic derecho y “Guardar enlace como…” sobre los enlaces que aparecen en el listado del repositorio, puesto que descargaríamos tres archivos en formato .html. Una posible manera de proceder sería abrir cada uno de los enlaces de interés en una nueva pestaña y emplear entonces la estrategia de clic derecho y “Guardar enlace como…” sobre el botón Raw que aparece en la parte superior derecha. Una vez tenemos en nuestro haber los tres archivos asociados al idioma que nos interesa, acudiremos a la carpeta Packages de Sublime Text 3, cuya ruta podemos encontrar a través del menú Preferences, pulsando sobre el apartado Browse Packages.... En tal localización crearemos un directorio llamado Language - Spanish y ubicaremos ahí los mencionados tres ficheros. Si ahora volvemos al apartado Dictionary del menú View, comprobaremos que podemos navegar por dos subapartados: uno asociado a los diccionarios para la lengua inglesa y otro para el correspondiente al idioma español. Seleccionamos este último y pulsamos la tecla F6, activando así el corrector ortográfico de Sublime Text 3 en dicho idioma. Los pasos 3 y 4 podemos repetirlos tantas veces como necesitemos en función del distinto número de diccionarios que estimemos que vayamos a emplear. El proceso que seguir es siempre el indicado, con los correspondientes cambios lógicos que cada nuevo idioma incorpora al procedimiento. Dejo pendiente para una futura entrada explicar cómo he configurado Sublime Text 3 para convertirlo en un más que agradable editor de texto plano orientado a trabajar con documentos de tipo markdown.\n","date":1530856779,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1530856779,"objectID":"4f7c0f865dac039be6add7f112c7687e","permalink":"https://imalexissaez.github.io/2018/07/06/sobre-el-corrector-de-sublime-text/","publishdate":"2018-07-06T07:59:39+02:00","relpermalink":"/2018/07/06/sobre-el-corrector-de-sublime-text/","section":"post","summary":"Trabajar con Sublime Text 3 no implica renunciar al uso de un buen corrector ortográfico.","tags":["Sublime Text 3"],"title":"Sobre el corrector de Sublime Text","type":"post"},{"authors":["Alexis Sáez"],"categories":["Tutoriales"],"content":"Antes de lanzarnos, sin más, a generar sitios web con Hugo, conviene que instalemos una serie de herramientas que nos facilitarán la vida: un sistema de control de versiones (Git + GitHub) y un editor de texto plano (Sublime Text 3).\nTal es el propósito de esta primera entrada, catalogada bajo la etiqueta Metablog, que agrupará una serie de artículos que documentarán todo el proceso de instalación de Hugo, el de la creación del propio sitio web empleando dicho generador y el de la personalización de la plantilla que actualmente estoy utilizando: Beautiful Hugo.\n1. Git El sistema de control de versiones al que personalmente estoy acostumbrado es Git, en cuya web oficial podemos encontrar una impresionante cantidad de información de interés. Si es la primera vez que escuchas hablar de Git o, en general, de los sistemas de control de versiones, quizá te resulte útil echar un vistazo a su tutorial.\nPágina oficial de Git. La instalación de Git en Windows no podría ser más sencilla. Hacemos clic en este enlace y automáticamente se descargará la versión más reciente de Git (2.18.0 a la hora de escribir estas líneas).\nPágina de descarga de Git. Una vez se haya completado la descarga, ejecutamos el archivo e instalamos el programa. Durante el proceso de instalación tenemos que escoger en varios momentos entre distintas opciones. A este respecto, he de comentar que las que vienen marcadas por defecto me parecen adecuadas para una primera toma de contacto con Git.\nAl completar la instalación tenemos, además, acceso a una terminal de sistema, Git Bash, que personalmente es la que utilizo. Si bien es cierto que tenemos que emplear algunos comandos distintos a los podemos encontrar en la que por defecto acompaña a Windows, es fácil llevar a cabo la transición de una terminal a otra (puede resultar de ayuda este listado de comandos).\nLa terminal Git Bash en acción. 2. GitHub GitHub es una plataforma de desarrollo colaborativo utilizada para almacenar proyectos empleando el sistema de control de versiones Git. Podemos encontrar más información en su web oficial. Al igual que antes, si es la primera vez que accedes a esta plataforma, convendría que le dedicases unos minutos al tutorial Hello World, disponible en esta página.\nUtilizaremos este portal para subir los archivos fuente que permitirán generar el sitio web, así como para alojar el propio sitio web en sí. Únicamente necesitaremos crear una cuenta de usuario para ello.\nPágina oficial de GitHub. 3. Sublime Text 3 El dicho “Para gustos los colores” tendría en este apartado la versión “Para gustos los editores de texto plano”. En mi caso, los proyectos de programación que he realizado y todo el trabajo con generadores de web estáticas los he llevado a cabo, tanto con el antiguo Sublime Text 2, como con su más reciente versión: Sublime Text 3.\nEste editor de texto plano es bastante potente, rápido y la comunidad puede extender sus funcionalidades a través de paquetes. Además, su versión ‘‘de prueba’’ te permite utilizar la herramienta sin restricción alguna durante un período de tiempo ilimitado, con la única pega de aparecer un mensaje cada 20 o 30 veces que salvemos cualquier archivo y que te invita a comprar una licencia.\nNos podemos hacer con él a través de este enlace. Su proceso de instalación es similar\nPágina de descarga de Sublime Text 3. Además de cumplir de manera excelente sus labores a la hora de editar cualquier archivo de texto plano, Sublime Text 3 me encanta como herramienta para trabajar con archivos de tipo markdown, que será el formato que vamos a emplear para redactar el contenido de nuestro sitio web. En un futuro no muy lejano tengo pensado escribir un artículo explicando cómo llevar a cabo la configuración de este programa para lidiar de forma agradable con dicho tipo de ficheros.\nY hasta aquí el primer artículo catalogado bajo la etiqueta Metablog, que deja nuestros equipos a punto para proceder a la instalación de Hugo y generar un sitio web.\n","date":1530763179,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1530763179,"objectID":"ed0b761fbabd060bf5bbbf36e817c5f8","permalink":"https://imalexissaez.github.io/2018/07/05/preparando-el-equipo-para-hugo/","publishdate":"2018-07-05T05:59:39+02:00","relpermalink":"/2018/07/05/preparando-el-equipo-para-hugo/","section":"post","summary":"Lección 1: cómo instalar un buen sistema de control de versiones y un excelente editor de texto plano.","tags":["Git","GitHub","Metablog","Sublime Text 3"],"title":"Preparando el equipo para Hugo","type":"post"},{"authors":["Alexis Sáez"],"categories":["Reflexiones"],"content":"La llegada del verano viene acompañada, al menos en mi caso, por un período de experimentación en el que suelo abordar nuevos intereses o explorar alguna tecnología que haya captado mi atención en los últimos meses.\nComo desvela el título de esta entrada, Hugo ha sido la primera candidata escogida. Ahora bien, ¿qué es Hugo? En pocas palabras, es una tecnología que permite fácilmente generar páginas web estáticas y de la que podemos encontrar abundante información en su sitio oficial.\nHasta hace apenas unos días, usaba Jekyll para elaborar Infinitos Contrastes, hecho que conduce lógica e irremediablemente a la siguiente cuestión: ¿por qué migrar a Hugo? ¿Acaso se debe a su impresionante velocidad a la hora de generar sitios webs?\nAunque atribuirle dicha causa al cambio estimo que me haría parecer más entendido de lo que verdaderamente soy, mentiría si afirmase que esa ha sido la auténtica razón. Dicho esto, confieso que tampoco me hacía excesiva ilusión el tiempo que le llevaba a la pareja Jekyll + Minimal Mistakes reflejar las modificaciones que iba realizando en el sitio web y que, generalmente, superaba con generosidad el minuto.\nAhora mismo, con Hugo, Infinitos Contrastes se genera completamente en menos de 400 milisegundos. Además, cada modificación que llevo a cabo en esta entrada requiere unos 75 milisegundos de espera para poder visualizar en el servidor local el resultado. Cuanto menos, se agradece el cambio en este sentido.\nAsí pues, si la velocidad no ha sido un factor determinante a la hora de explicar el cambio de tecnología, ¿por qué migrar a Hugo? Históricamente, Ruby y sus gemas (entre las que se encuentra Jekyll) me han dado bastantes más quebraderos de cabeza de los recomendables por utilizar Windows. El soporte oficial para este sistema operativo es más bien escaso y cualquier problema se convertía en una pequeña odisea en ocasiones ciertamente desquiciante.\nMe apetecía simplemente un cambio, con la esperanza de pasar página y olvidar esas batallas pasadas. Hugo es la alternativa a Jekyll más popular y las primeras impresiones que me he llevado son muy buenas. No dudo que en un futuro próximo tenga que librar alguna que otra encarnizada pelea, pero espero que el hecho de estar aprendiendo una nueva tecnología compense con creces las penurias que este proceso tiene aparejadas.\n","date":1530683979,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1530683979,"objectID":"953f6ed353e0b55f73525fc1b3b0c4af","permalink":"https://imalexissaez.github.io/2018/07/04/migrando-a-hugo/","publishdate":"2018-07-04T07:59:39+02:00","relpermalink":"/2018/07/04/migrando-a-hugo/","section":"post","summary":"La falta de agilidad de Jekyll, a la hora de experimentar con la página web, me ha obligado a explorar alternativas.","tags":["Hugo","Jekyll","Minimal Mistakes"],"title":"Migrando a Hugo","type":"post"},{"authors":["Alexis Sáez","Robert Ford"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software. Create your slides in Markdown - click the Slides button to check out the example. Supplementary notes can be added here, including code, math, and images.\n","date":1372636800,"expirydate":-62135596800,"kind":"page","lang":"es","lastmod":1372636800,"objectID":"ff6a19061a984819d30c916886db56ef","permalink":"https://imalexissaez.github.io/publication/example/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/example/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":[],"title":"An example conference paper","type":"publication"}]